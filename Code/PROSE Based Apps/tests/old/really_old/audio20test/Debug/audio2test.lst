Zilog eZ80 Macro Assembler Version 4.1 (10060805)03-Jan-11     13:35:14     page:   1


PC     Object              I  Line    Source 
                           A     1    ; Test audio output (test hardware in config EZ
                           A     2    
                           A     3    ;----------------------------------------------
                           A     4    
       00000001            A     5    ADL_mode		equ 1				; 0 if user
       00010000            A     6    load_location	equ 10000h			; anywhere 
                           A     7    
                           B     0    				include	'PROSE_header.asm'
                           B     1    
                           B     2    ;-- EZ80P Hardware equates --------------------
                           B     3    
       00000000            B     4    port_pic_data  			equ 0000h
       00000001            B     5    port_pic_ctrl		equ 0001h
       00000001            B     6    port_hw_flags			equ 0001h
       00000002            B     7    port_sdc_ctrl			equ 0002h	; this is a
       00000002            B     8    port_keyboard_data		equ 0002h
       00000003            B     9    port_sdc_data		 	equ 0003h	
       00000004            B    10    port_memory_paging		equ 0004h
       00000005            B    11    port_irq_ctrl			equ 0005h
       00000006            B    12    port_nmi_ack			equ 0006h
       00000007            B    13    port_selector			equ 0007h
                           B    14    
                           B    15    
       00000040            B    16    port_video_mode			equ 040h
                           B    17    
                           B    18    
       00000000            B    19    sdc_power				equ 0		;(port_sd_c
       00000001            B    20    sdc_cs					equ 1		;(port_sd_c
       00000002            B    21    sdc_speed				equ 2 		;(port_sd_c
                           B    22    
       00000004            B    23    sdc_serializer_busy		equ 4 		;(port_hw_f
       00000005            B    24    vrt						equ 5		;(port_hw_f
                           B    25    
                           B    26    
                           B    27    ;-- Memory locations --------------------------
                           B    28    
       00800000            B    29    hw_vram_a		equ 0800000h
       00F00000            B    30    hw_palette	equ 0f00000h
                           B    31    
                           B    32    ;----------------------------------------------
                           B    33    
                           B    34    
       00000A00            B    35    os_start equ 0a00h
                           B    36    
       00000A14            B    37    prose_return equ os_start+14h
       00000A20            B    38    prose_kernal equ os_start+20h
                           B    39    
                           B    40    ;----------------------------------------------
                           B    41    ; Kernal Jump Table values for mode PROSE
                           B    42    ;----------------------------------------------
                           B    43    		
       00000000            B    44    kr_mount_volumes				equ 00h	
Zilog eZ80 Macro Assembler Version 4.1 (10060805)03-Jan-11     13:35:14     page:   2


PC     Object              I  Line    Source ..\..\includes\PROSE_header.asm
       00000001            B    45    kr_get_device_info				equ 01h	
       00000002            B    46    kr_check_volume_format			equ 02h	
       00000003            B    47    kr_change_volume				equ 03h	
       00000004            B    48    kr_get_volume_info				equ 04h	
       00000005            B    49    kr_format_device				equ 05h	
       00000006            B    50    kr_make_dir						equ 06h
                           B    51    
       00000007            B    52    kr_change_dir					equ 07h	
       00000008            B    53    kr_parent_dir					equ 08h	
       00000009            B    54    kr_root_dir						equ 09h
       0000000A            B    55    kr_delete_dir					equ 0ah
       0000000B            B    56    kr_find_file					equ 0bh
       0000000C            B    57    kr_set_file_pointer				equ 0ch
       0000000D            B    58    kr_set_load_length				equ 0dh
       0000000E            B    59    kr_read_file					equ 0eh
                           B    60    
       0000000F            B    61    kr_erase_file					equ 0fh
       00000010            B    62    kr_rename_file					equ 10h
       00000011            B    63    kr_create_file					equ 11h
       00000012            B    64    kr_write_file					equ 12h
       00000013            B    65    kr_get_total_sectors			equ 13h
       00000014            B    66    kr_dir_list_first_entry			equ 14h
       00000015            B    67    kr_dir_list_get_entry			equ 15h
       00000016            B    68    kr_dir_list_next_entry			equ 16h
                           B    69    
       00000017            B    70    kr_read_sector					equ 17h
       00000018            B    71    kr_write_sector					equ 18h
       00000019            B    72    kr_file_sector_list				equ 19h
       0000001A            B    73    kr_get_dir_cluster				equ 1ah
       0000001B            B    74    kr_set_dir_cluster				equ 1bh
       0000001C            B    75    kr_get_dir_name					equ 1ch
       0000001D            B    76    kr_wait_key						equ 1dh
       0000001E            B    77    kr_get_key						equ 1eh
                           B    78    
       0000001F            B    79    kr_get_key_mod_flags			equ 1fh
       00000020            B    80    kr_serial_receive_header		equ 20h
       00000021            B    81    kr_serial_receive_file			equ 21h
       00000022            B    82    kr_serial_send_file				equ 22h
       00000023            B    83    kr_serial_tx_byte				equ 23h
       00000024            B    84    kr_serial_rx_byte				equ 24h
                           B    85    
       00000025            B    86    kr_print_string					equ 25h
       00000026            B    87    kr_clear_screen					equ 26h
       00000027            B    88    kr_wait_vrt						equ 27h
       00000028            B    89    kr_set_cursor_position			equ 28h
       00000029            B    90    kr_plot_char					equ 29h
       0000002A            B    91    kr_set_pen						equ 2ah
       0000002B            B    92    kr_background_colours			equ 2bh
       0000002C            B    93    kr_draw_cursor					equ 2ch
       0000002D            B    94    kr_get_pen						equ 2dh
       0000002E            B    95    kr_scroll_up					equ 2eh
       0000002F            B    96    kr_os_display					equ 2fh
Zilog eZ80 Macro Assembler Version 4.1 (10060805)03-Jan-11     13:35:14     page:   3


PC     Object              I  Line    Source ..\..\includes\PROSE_header.asm
       00000030            B    97    kr_get_display_size				equ 30h
       00000031            B    98    kr_get_charmap_addr_xy			equ 31h
       00000032            B    99    kr_get_cursor_position			equ 32h
                           B   100    
       00000033            B   101    kr_set_envar					equ 33h
       00000034            B   102    kr_get_envar					equ 34h
       00000035            B   103    kr_delete_envar					equ 35h
                           B   104    
       00000036            B   105    kr_enable_mouse					equ 36h
       00000037            B   106    kr_get_mouse_position			equ 37h
       00000038            B   107    kr_get_mouse_disp				equ 38h
                           B   108    
       00000039            B   109    kr_time_delay					equ 39h
       0000003A            B   110    kr_compare_strings				equ 3ah
       0000003B            B   111    kr_hex_byte_to_ascii			equ 3bh
       0000003C            B   112    kr_ascii_to_hex_word			equ 3ch
       0000003D            B   113    kr_get_string					equ 3dh
                           B   114    
       0000003E            B   115    kr_get_version					equ 3eh
       0000003F            B   116    kr_dont_store_registers			equ 3fh
       00000040            B   117    kr_os_video_settings			equ 40h
       00000041            B   118    kr_read_rtc						equ 41h
       00000042            B   119    kr_write_rtc					equ 42h
                           B   120    
                           B   121    ;----------------------------------------------
                           B   122    ; Standard PROSE executable header
                           B   123    ;----------------------------------------------
                           B   124    
                           B   125    
                           B   126    	IF ADL_mode = 0
                           B   127    		org load_location&0ffffh	; if Z80 mo
                           B   128    	ELSE
010000                     B   129    		org load_location			; otherwise
                           B   130    	ENDIF
                           B   131    	
                           B   132    		.assume ADL = 1				; All PROSE
                           B   133    
010000 18 0E               B   134    		jr skip_header				; $0 - Jump
010002 50524F              B   135    		db 'PRO'					; $2 - ASCI
010005 000001              B   136    mb_loc	dw24 load_location			; $5 - Desi
010008 000000              B   137    		dw24 0						; $8 - If >
01000B 0000                B   138    		dw 0						; $B - If >
01000D 0000                B   139    		dw 0						; $D - If >
01000F 01                  B   140    		db ADL_mode					; $F - Z80 
                           B   141    
010010                     B   142    skip_header
                           B   143    	
                           B   144    	IF ADL_mode = 0 
                           B   145    		
                           B   146    mbase_offset equ load_location & 0ff0000h
                           B   147    
                           B   148    		ld a,load_location/65536	; Additiona
Zilog eZ80 Macro Assembler Version 4.1 (10060805)03-Jan-11     13:35:14     page:   4


PC     Object              I  Line    Source ..\..\includes\PROSE_header.asm
                           B   149    		ld MB,a						; Set MBASE
                           B   150    		jp.sis go_z80_mode			; switches 
                           B   151    
                           B   152    go_z80_mode
                           B   153    
                           B   154    		.assume ADL = 0
                           B   155    
                           B   156    	ENDIF
                           B   157    	
                           B   158    ;----------------------------------------------
                           B   159    	
                           A     9    
                           A    10    ;----------------------------------------------
                           A    11    ; ADL-mode user program follows..
                           A    12    ;----------------------------------------------
                           A    13    
010010 21 C3 00 01         A    14    			ld hl,message1_txt				
010014 CD B3 00 01         A    15    			call print_string
010018 110000F8            A    16    			ld de,0f80000h
01001C 21 39 01 01         A    17    			ld hl,wave1
010020 CD A4 00 01         A    18    			call copy_wave
010024 CD BB 00 01         A    19    			call waitkey
010028 210000F8            A    20    			ld hl,0f80000h
01002C CD 96 00 01         A    21    			call silence
                           A    22    
010030 21 DF 00 01         A    23    			ld hl,message2_txt				
010034 CD B3 00 01         A    24    			call print_string
010038 110004F8            A    25    			ld de,0f80400h
01003C 21 39 01 01         A    26    			ld hl,wave1
010040 CD A4 00 01         A    27    			call copy_wave
010044 CD BB 00 01         A    28    			call waitkey
010048 210004F8            A    29    			ld hl,0f80400h
01004C CD 96 00 01         A    30    			call silence
                           A    31    			
010050 21 FC 00 01         A    32    			ld hl,message3_txt				
010054 CD B3 00 01         A    33    			call print_string
010058 110000F8            A    34    			ld de,0f80000h
01005C 21 79 01 01         A    35    			ld hl,wave2
010060 CD A4 00 01         A    36    			call copy_wave
010064 CD BB 00 01         A    37    			call waitkey
010068 210000F8            A    38    			ld hl,0f80000h
01006C CD 96 00 01         A    39    			call silence
                           A    40    
010070 21 1A 01 01         A    41    			ld hl,message4_txt				
010074 CD B3 00 01         A    42    			call print_string
010078 110004F8            A    43    			ld de,0f80400h
01007C 21 79 01 01         A    44    			ld hl,wave2
010080 CD A4 00 01         A    45    			call copy_wave
010084 CD BB 00 01         A    46    			call waitkey
010088 210004F8            A    47    			ld hl,0f80400h
01008C CD 96 00 01         A    48    			call silence
                           A    49    		
Zilog eZ80 Macro Assembler Version 4.1 (10060805)03-Jan-11     13:35:14     page:   5


PC     Object              I  Line    Source E:\MY_OWN~1\Coding\EZ80PR~1\Code\PROSEA~1\AUDIO_~1\src\audio2test.asm
010090 AF                  A    50    			xor a
010091 5BC3140A 00         A    51    			jp.lil prose_return				; b
                           A    52    
                           A    53    			
                           A    54    
010096 01000000            A    55    silence		ld bc,0h
01009A 3600                A    56    sillp		ld (hl),0
01009C 23                  A    57    			inc hl
01009D 03                  A    58    			inc bc
01009E 78                  A    59    			ld a,b
01009F FE04                A    60    			cp 4
0100A1 20 F7               A    61    			jr nz,sillp
0100A3 C9                  A    62    			ret
                           A    63    
                           A    64    
0100A4                     A    65    copy_wave
0100A4 0610                A    66    			ld b,16						;copy 6
0100A6 C5                  A    67    cpyw1		push bc
0100A7 E5                  A    68    			push hl
0100A8 01400000            A    69    			ld bc,64
0100AC EDB0                A    70    			ldir
0100AE E1                  A    71    			pop hl
0100AF C1                  A    72    			pop bc
0100B0 10 F4               A    73    			djnz cpyw1
0100B2 C9                  A    74    			ret
                           A    75    			
                           A    76    
                           A    77    
0100B3                     A    78    print_string
                           A    79    
0100B3 3E25                A    80    			ld a,kr_print_string			 
0100B5 5BCD200A 00         A    81    			call.lil prose_kernal			 
0100BA C9                  A    82    			ret
                           A    83    		
0100BB                     A    84    waitkey
                           A    85    
0100BB 3E1D                A    86    			ld a,kr_wait_key
0100BD 5BCD200A 00         A    87    			call.lil prose_kernal
0100C2 C9                  A    88    			ret
                           A    89    		
                           A    90    ;----------------------------------------------
                           A    91    
0100C3                     A    92    message1_txt
                           A    93    
0100C3 4C656674 20636861   A    94    		db 'Left channel - square wave',11,0
0100CB 6E6E656C 202D2073 
0100D3 71756172 65207761 
0100DB 76650B00 
                           A    95    
0100DF                     A    96    message2_txt
                           A    97    
0100DF 52696768 74206368   A    98    		db 'Right channel - square wave',11,0
Zilog eZ80 Macro Assembler Version 4.1 (10060805)03-Jan-11     13:35:14     page:   6


PC     Object              I  Line    Source E:\MY_OWN~1\Coding\EZ80PR~1\Code\PROSEA~1\AUDIO_~1\src\audio2test.asm
0100E7 616E6E65 6C202D20 
0100EF 73717561 72652077 
0100F7 6176650B 00 
                           A    99    		
0100FC                     A   100    message3_txt
                           A   101    
0100FC 4C656674 20636861   A   102    		db 'Left channel - triangle wave',11,0
010104 6E6E656C 202D2074 
01010C 7269616E 676C6520 
010114 77617665 0B00 
                           A   103    
01011A                     A   104    message4_txt
                           A   105    
01011A 52696768 74206368   A   106    		db 'Right channel - triangle wave',11,0
010122 616E6E65 6C202D20 
01012A 74726961 6E676C65 
010132 20776176 650B00 
                           A   107    		
                           A   108    		
010139 7F 7F 7F 7F 7F 7F   A   109    wave1	blkb 32,07fh
01013F 7F 7F 7F 7F 7F 7F 
010145 7F 7F 7F 7F 7F 7F 
01014B 7F 7F 7F 7F 7F 7F 
010151 7F 7F 7F 7F 7F 7F 
010157 7F 7F 
010159 80 80 80 80 80 80   A   110    		blkb 32,080h
01015F 80 80 80 80 80 80 
010165 80 80 80 80 80 80 
01016B 80 80 80 80 80 80 
010171 80 80 80 80 80 80 
010177 80 80 
                           A   111    
                           A   112    
010179 00081018 20283038   A   113    wave2	db 000h,008h,010h,018h,020h,028h,030h,0
010181 40485058 60687078 
010189 7F787068 60585048   A   114    		db 07fh,078h,070h,068h,060h,058h,050h,0
010191 40383028 20181008 
010199 00F8F0E8 E0D8D0C8   A   115    		db 000h,0f8h,0f0h,0e8h,0e0h,0d8h,0d0h,0
0101A1 C0B8B0A8 A0989088 
0101A9 80889098 A0A8B0B8   A   116    		db 080h,088h,090h,098h,0a0h,0a8h,0b0h,0
0101B1 C0C8D0D8 E0E8F0F8 
                           A   117    		
                           A   118    
                           A   119    		
                           A   120    ;----------------------------------------------
                           A   121    		
                           A   122    		


Errors: 0
Warnings: 0
Lines Assembled: 282
