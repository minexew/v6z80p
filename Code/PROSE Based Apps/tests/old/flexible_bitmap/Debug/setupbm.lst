Zilog eZ80 Macro Assembler Version 4.1 (10060805)02-Mar-11     17:46:41     page:   1


PC     Object              I  Line    Source 
                           A     1    ; Set up bitmap display...
                           A     2    
                           A     3    ;----------------------------------------------
                           A     4    
       00000001            A     5    ADL_mode		equ 1				; 0 if user
       00010000            A     6    load_location	equ 10000h			; anywhere 
                           A     7    
                           B     0    				include	'PROSE_header.asm'
                           B     1    ;--- EZ80 Internal CPU Ports ------------------
                           B     2    
       0000009A            B     3    PB_DR			equ 09ah
       0000009B            B     4    PB_DDR			equ 09bh
       0000009C            B     5    PB_ALT1			equ 09ch
       0000009D            B     6    PB_ALT2			equ 09dh
                           B     7    
       0000009E            B     8    PC_DR			equ 09eh
       0000009F            B     9    PC_DDR			equ 09fh
       000000A0            B    10    PC_ALT1			equ 0a0h
       000000A1            B    11    PC_ALT2			equ 0a1h
                           B    12    
       000000A2            B    13    PD_DR			equ 0a2h
       000000A3            B    14    PD_DDR			equ 0a3h
       000000A4            B    15    PD_ALT1			equ 0a4h
       000000A5            B    16    PD_ALT2			equ 0a5h
                           B    17    
       000000C0            B    18    UART0_RBR		equ 0c0h
       000000C0            B    19    UART0_THR		equ 0c0h
       000000C0            B    20    UART0_BRG_L		equ 0c0h
       000000C1            B    21    UART0_BRG_H		equ 0c1h
       000000C1            B    22    UART0_IER		equ 0c1h
       000000C2            B    23    UART0_FCTL		equ 0c2h
       000000C3            B    24    UART0_LCTL		equ 0c3h
       000000C4            B    25    UART0_MCTL		equ 0c4h
       000000C5            B    26    UART0_LSR		equ 0c5h
                           B    27    
       000000A8            B    28    CS0_LBR			equ 0a8h			;eZ80 wait 
       000000A9            B    29    CS0_UBR			equ 0a9h
       000000AA            B    30    CS0_CTL			equ 0aah			
       000000AB            B    31    CS1_LBR			equ 0abh			;eZ80 wait 
       000000AC            B    32    CS1_UBR			equ 0ach
       000000AD            B    33    CS1_CTL			equ 0adh
       000000AE            B    34    CS2_LBR			equ 0aeh			;eZ80 wait 
       000000AF            B    35    CS2_UBR			equ 0afh
       000000B0            B    36    CS2_CTL			equ 0b0h
       000000B1            B    37    CS3_LBR			equ 0b1h			;eZ80 wait 
       000000B2            B    38    CS3_UBR			equ 0b2h
       000000B3            B    39    CS3_CTL			equ 0b3h
                           B    40    
       00000080            B    41    TMR0_CTL		equ 080h			;timer 0 eq
       00000081            B    42    TMR0_DR_L		equ 081h
       00000081            B    43    TMR0_RR_L		equ 081h
       00000082            B    44    TMR0_DR_H		equ 082h
Zilog eZ80 Macro Assembler Version 4.1 (10060805)02-Mar-11     17:46:41     page:   2


PC     Object              I  Line    Source ..\..\includes\PROSE_header.asm
       00000082            B    45    TMR0_RR_H		equ 082h
       00000092            B    46    TMR_ISS			equ 092h
                           B    47    
       000000ED            B    48    RTC_CTRL		equ 0edh			;RTC equate
       000000EC            B    49    RTC_ACTRL		equ 0ech
       000000E0            B    50    RTC_SEC			equ 0e0h
       000000E1            B    51    RTC_MIN			equ 0e1h
       000000E2            B    52    RTC_HRS			equ 0e2h
       000000E3            B    53    RTC_DOW			equ 0e3h
       000000E4            B    54    RTC_DOM			equ 0e4h
       000000E5            B    55    RTC_MON			equ 0e5h
       000000E6            B    56    RTC_YR			equ 0e6h
       000000E7            B    57    RTC_CEN			equ 0e7h
                           B    58    
                           B    59    ;-- EZ80P Hardware equates --------------------
                           B    60    
       00000000            B    61    port_pic_data  			equ 000h
       00000001            B    62    port_pic_ctrl			equ 001h
       00000001            B    63    port_hw_flags			equ 001h
       00000002            B    64    port_sdc_ctrl			equ 002h	; this is a
       00000002            B    65    port_keyboard_data		equ 002h
       00000003            B    66    port_sdc_data		 	equ 003h	
       00000004            B    67    port_memory_paging		equ 004h
       00000005            B    68    port_irq_ctrl			equ 005h
       00000006            B    69    port_nmi_ack			equ 006h
       00000007            B    70    port_ps2_ctrl			equ 007h
       00000008            B    71    port_selector			equ 008h
       00000006            B    72    port_mouse_data			equ 006h
       00000009            B    73    port_clear_flags		equ 009h
                           B    74    
       00000040            B    75    port_video_mode			equ 040h
                           B    76    
                           B    77    
       00000000            B    78    sdc_power				equ 0		;(port_sd_c
       00000001            B    79    sdc_cs					equ 1		;(port_sd_c
       00000002            B    80    sdc_speed				equ 2 		;(port_sd_c
                           B    81    
       00000004            B    82    sdc_serializer_busy		equ 4 		;(port_hw_f
       00000005            B    83    vrt						equ 5		;(port_hw_f
                           B    84    
                           B    85    
                           B    86    ;-- Memory locations --------------------------
                           B    87    
       00800000            B    88    hw_vram_a			equ 0800000h
       00C00000            B    89    hw_vram_b			equ 0c00000h
       00F00000            B    90    hw_palette			equ 0f00000h
       00F80000            B    91    hw_audio_registers 	equ 0f80000h
                           B    92    
                           B    93    ;----------------------------------------------
                           B    94    
                           B    95    
       00000A00            B    96    os_start 	equ 0a00h
Zilog eZ80 Macro Assembler Version 4.1 (10060805)02-Mar-11     17:46:41     page:   3


PC     Object              I  Line    Source ..\..\includes\PROSE_header.asm
                           B    97    
       00000A14            B    98    prose_return equ os_start+14h
       00000A20            B    99    prose_kernal equ os_start+20h
                           B   100    
                           B   101    ;----------------------------------------------
                           B   102    ; Kernal Jump Table values for mode PROSE
                           B   103    ;----------------------------------------------
                           B   104    		
       00000000            B   105    kr_mount_volumes				equ 00h	
       00000001            B   106    kr_get_device_info				equ 01h	
       00000002            B   107    kr_check_volume_format			equ 02h	
       00000003            B   108    kr_change_volume				equ 03h	
       00000004            B   109    kr_get_volume_info				equ 04h	
       00000005            B   110    kr_format_device				equ 05h	
       00000006            B   111    kr_make_dir						equ 06h
                           B   112    
       00000007            B   113    kr_change_dir					equ 07h	
       00000008            B   114    kr_parent_dir					equ 08h	
       00000009            B   115    kr_root_dir						equ 09h
       0000000A            B   116    kr_delete_dir					equ 0ah
       0000000B            B   117    kr_find_file					equ 0bh
       0000000C            B   118    kr_set_file_pointer				equ 0ch
       0000000D            B   119    kr_set_load_length				equ 0dh
       0000000E            B   120    kr_read_file					equ 0eh
                           B   121    
       0000000F            B   122    kr_erase_file					equ 0fh
       00000010            B   123    kr_rename_file					equ 10h
       00000011            B   124    kr_create_file					equ 11h
       00000012            B   125    kr_write_file					equ 12h
       00000013            B   126    kr_get_total_sectors			equ 13h
       00000014            B   127    kr_dir_list_first_entry			equ 14h
       00000015            B   128    kr_dir_list_get_entry			equ 15h
       00000016            B   129    kr_dir_list_next_entry			equ 16h
                           B   130    
       00000017            B   131    kr_read_sector					equ 17h
       00000018            B   132    kr_write_sector					equ 18h
       00000019            B   133    kr_file_sector_list				equ 19h
       0000001A            B   134    kr_get_dir_cluster				equ 1ah
       0000001B            B   135    kr_set_dir_cluster				equ 1bh
       0000001C            B   136    kr_get_dir_name					equ 1ch
       0000001D            B   137    kr_wait_key						equ 1dh
       0000001E            B   138    kr_get_key						equ 1eh
                           B   139    
       0000001F            B   140    kr_get_key_mod_flags			equ 1fh
       00000020            B   141    kr_serial_receive_header		equ 20h
       00000021            B   142    kr_serial_receive_file			equ 21h
       00000022            B   143    kr_serial_send_file				equ 22h
       00000023            B   144    kr_serial_tx_byte				equ 23h
       00000024            B   145    kr_serial_rx_byte				equ 24h
                           B   146    
       00000025            B   147    kr_print_string					equ 25h
       00000026            B   148    kr_clear_screen					equ 26h
Zilog eZ80 Macro Assembler Version 4.1 (10060805)02-Mar-11     17:46:41     page:   4


PC     Object              I  Line    Source ..\..\includes\PROSE_header.asm
       00000027            B   149    kr_wait_vrt						equ 27h
       00000028            B   150    kr_set_cursor_position			equ 28h
       00000029            B   151    kr_plot_char					equ 29h
       0000002A            B   152    kr_set_pen						equ 2ah
       0000002B            B   153    kr_background_colours			equ 2bh
       0000002C            B   154    kr_draw_cursor					equ 2ch
       0000002D            B   155    kr_get_pen						equ 2dh
       0000002E            B   156    kr_scroll_up					equ 2eh
       0000002F            B   157    kr_os_display					equ 2fh
       00000030            B   158    kr_get_display_size				equ 30h
       00000031            B   159    kr_get_charmap_addr_xy			equ 31h
       00000032            B   160    kr_get_cursor_position			equ 32h
                           B   161    
       00000033            B   162    kr_set_envar					equ 33h
       00000034            B   163    kr_get_envar					equ 34h
       00000035            B   164    kr_delete_envar					equ 35h
                           B   165    
       00000036            B   166    kr_set_mouse_window				equ 36h
       00000037            B   167    kr_get_mouse_position			equ 37h
       00000038            B   168    kr_get_mouse_motion				equ 38h
                           B   169    
       00000039            B   170    kr_time_delay					equ 39h
       0000003A            B   171    kr_compare_strings				equ 3ah
       0000003B            B   172    kr_hex_byte_to_ascii			equ 3bh
       0000003C            B   173    kr_ascii_to_hex_word			equ 3ch
       0000003D            B   174    kr_get_string					equ 3dh
                           B   175    
       0000003E            B   176    kr_get_version					equ 3eh
       0000003F            B   177    kr_dont_store_registers			equ 3fh
       00000040            B   178    kr_os_video_settings			equ 40h
       00000041            B   179    kr_read_rtc						equ 41h
       00000042            B   180    kr_write_rtc					equ 42h
                           B   181    
                           B   182    ;----------------------------------------------
                           B   183    ; Standard PROSE executable header
                           B   184    ;----------------------------------------------
                           B   185    
                           B   186    
                           B   187    	IF ADL_mode = 0
                           B   188    		org load_location&0ffffh	; if Z80 mo
                           B   189    	ELSE
010000                     B   190    		org load_location			; otherwise
                           B   191    	ENDIF
                           B   192    	
                           B   193    		.assume ADL = 1				; All PROSE
                           B   194    
010000 18 0E               B   195    		jr skip_header				; $0 - Jump
010002 50524F              B   196    		db 'PRO'					; $2 - ASCI
010005 000001              B   197    mb_loc	dw24 load_location			; $5 - Desi
010008 000000              B   198    		dw24 0						; $8 - If >
01000B 0000                B   199    		dw 0						; $B - If >
01000D 0000                B   200    		dw 0						; $D - If >
Zilog eZ80 Macro Assembler Version 4.1 (10060805)02-Mar-11     17:46:41     page:   5


PC     Object              I  Line    Source ..\..\includes\PROSE_header.asm
01000F 01                  B   201    		db ADL_mode					; $F - Z80 
                           B   202    
010010                     B   203    skip_header
                           B   204    	
                           B   205    	IF ADL_mode = 0 
                           B   206    		
                           B   207    mbase_offset equ load_location & 0ff0000h
                           B   208    
                           B   209    		ld a,load_location/65536	; Additiona
                           B   210    		ld MB,a						; Set MBASE
                           B   211    		jp.sis go_z80_mode			; switches 
                           B   212    
                           B   213    go_z80_mode
                           B   214    
                           B   215    		.assume ADL = 0
                           B   216    
                           B   217    	ENDIF
                           B   218    	
                           B   219    ;----------------------------------------------
                           B   220    	
                           A     9    
                           A    10    ;----------------------------------------------
                           A    11    ; ADL-mode user program follows..
                           A    12    ;----------------------------------------------
                           A    13    
       00FC0020            A    14    bm_registers	equ 0fc0000h+(8*4)
                           A    15    
       00000000            A    16    bm_base			equ 0h
       00000001            A    17    bm_pixel_step	equ 1h
       00000000            A    18    bm_modulo		equ 0h
       00000140            A    19    bm_datafetch	equ 320					;bytes 
                           A    20    
010010 DD212000 FC         A    21    		ld ix,bm_registers
010015 DD360000            A    22    		ld (ix),bm_base
010019 DD360401            A    23    		ld (ix+04h),bm_pixel_step
01001D DD360800            A    24    		ld (ix+08h),0
010021 DD360C00            A    25    		ld (ix+0ch),bm_modulo
010025 DD361027            A    26    		ld (ix+10h),0+(bm_datafetch/8)-1
                           A    27    
010029 21 3A 00 01         A    28    		ld hl,message_txt				; ADL m
01002D 3E25                A    29    		ld a,kr_print_string			; desir
01002F 5BCD200A 00         A    30    		call.lil prose_kernal			; call 
010034 AF                  A    31    		xor a
010035 5BC3140A 00         A    32    		jp.lil prose_return				; back 
                           A    33    
                           A    34    ;----------------------------------------------
                           A    35    
01003A                     A    36    message_txt
                           A    37    
01003A 4269746D 61702064   A    38    		db 'Bitmap display set up!',11,0
010042 6973706C 61792073 
01004A 65742075 70210B00 
Zilog eZ80 Macro Assembler Version 4.1 (10060805)02-Mar-11     17:46:41     page:   6


PC     Object              I  Line    Source E:\MY_OWN~1\Coding\EZ80PR~1\Code\PROSEA~1\FLEXIB~1\src\setupbm.asm
                           A    39    
                           A    40    ;----------------------------------------------
                           A    41    		
                           A    42    		


Errors: 0
Warnings: 0
Lines Assembled: 263
