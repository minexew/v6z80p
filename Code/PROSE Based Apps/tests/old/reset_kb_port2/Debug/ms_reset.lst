Zilog eZ80 Macro Assembler Version 4.1 (10060805)28-Feb-11     14:17:25     page:   1


PC     Object              I  Line    Source 
                           A     1    ; reset mouse on port 2 and test ps2 lifo
                           A     2    
                           A     3    ;----------------------------------------------
                           A     4    
       00000001            A     5    ADL_mode		equ 1				; 0 if user
       00010000            A     6    load_location	equ 10000h			; anywhere 
                           A     7    
                           B     0    				include	'PROSE_header.asm'
                           B     1    ;--- EZ80 Internal CPU Ports ------------------
                           B     2    
       0000009A            B     3    PB_DR			equ 09ah
       0000009B            B     4    PB_DDR			equ 09bh
       0000009C            B     5    PB_ALT1			equ 09ch
       0000009D            B     6    PB_ALT2			equ 09dh
                           B     7    
       0000009E            B     8    PC_DR			equ 09eh
       0000009F            B     9    PC_DDR			equ 09fh
       000000A0            B    10    PC_ALT1			equ 0a0h
       000000A1            B    11    PC_ALT2			equ 0a1h
                           B    12    
       000000A2            B    13    PD_DR			equ 0a2h
       000000A3            B    14    PD_DDR			equ 0a3h
       000000A4            B    15    PD_ALT1			equ 0a4h
       000000A5            B    16    PD_ALT2			equ 0a5h
                           B    17    
       000000C0            B    18    UART0_RBR		equ 0c0h
       000000C0            B    19    UART0_THR		equ 0c0h
       000000C0            B    20    UART0_BRG_L		equ 0c0h
       000000C1            B    21    UART0_BRG_H		equ 0c1h
       000000C1            B    22    UART0_IER		equ 0c1h
       000000C2            B    23    UART0_FCTL		equ 0c2h
       000000C3            B    24    UART0_LCTL		equ 0c3h
       000000C4            B    25    UART0_MCTL		equ 0c4h
       000000C5            B    26    UART0_LSR		equ 0c5h
                           B    27    
       000000A8            B    28    CS0_LBR			equ 0a8h			;eZ80 wait 
       000000A9            B    29    CS0_UBR			equ 0a9h
       000000AA            B    30    CS0_CTL			equ 0aah			
       000000AB            B    31    CS1_LBR			equ 0abh			;eZ80 wait 
       000000AC            B    32    CS1_UBR			equ 0ach
       000000AD            B    33    CS1_CTL			equ 0adh
       000000AE            B    34    CS2_LBR			equ 0aeh			;eZ80 wait 
       000000AF            B    35    CS2_UBR			equ 0afh
       000000B0            B    36    CS2_CTL			equ 0b0h
       000000B1            B    37    CS3_LBR			equ 0b1h			;eZ80 wait 
       000000B2            B    38    CS3_UBR			equ 0b2h
       000000B3            B    39    CS3_CTL			equ 0b3h
                           B    40    
       00000080            B    41    TMR0_CTL		equ 080h			;timer 0 eq
       00000081            B    42    TMR0_DR_L		equ 081h
       00000081            B    43    TMR0_RR_L		equ 081h
       00000082            B    44    TMR0_DR_H		equ 082h
Zilog eZ80 Macro Assembler Version 4.1 (10060805)28-Feb-11     14:17:25     page:   2


PC     Object              I  Line    Source ..\..\includes\PROSE_header.asm
       00000082            B    45    TMR0_RR_H		equ 082h
       00000092            B    46    TMR_ISS			equ 092h
                           B    47    
       000000ED            B    48    RTC_CTRL		equ 0edh			;RTC equate
       000000EC            B    49    RTC_ACTRL		equ 0ech
       000000E0            B    50    RTC_SEC			equ 0e0h
       000000E1            B    51    RTC_MIN			equ 0e1h
       000000E2            B    52    RTC_HRS			equ 0e2h
       000000E3            B    53    RTC_DOW			equ 0e3h
       000000E4            B    54    RTC_DOM			equ 0e4h
       000000E5            B    55    RTC_MON			equ 0e5h
       000000E6            B    56    RTC_YR			equ 0e6h
       000000E7            B    57    RTC_CEN			equ 0e7h
                           B    58    
                           B    59    ;-- EZ80P Hardware equates --------------------
                           B    60    
       00000000            B    61    port_pic_data  			equ 000h
       00000001            B    62    port_pic_ctrl			equ 001h
       00000001            B    63    port_hw_flags			equ 001h
       00000002            B    64    port_sdc_ctrl			equ 002h	; this is a
       00000002            B    65    port_keyboard_data		equ 002h
       00000003            B    66    port_sdc_data		 	equ 003h	
       00000004            B    67    port_memory_paging		equ 004h
       00000005            B    68    port_irq_ctrl			equ 005h
       00000006            B    69    port_nmi_ack			equ 006h
       00000007            B    70    port_ps2_ctrl			equ 007h
       00000008            B    71    port_selector			equ 008h
       00000006            B    72    port_mouse_data			equ 006h
       00000009            B    73    port_clear_flags		equ 009h
                           B    74    
       00000040            B    75    port_video_mode			equ 040h
                           B    76    
                           B    77    
       00000000            B    78    sdc_power				equ 0		;(port_sd_c
       00000001            B    79    sdc_cs					equ 1		;(port_sd_c
       00000002            B    80    sdc_speed				equ 2 		;(port_sd_c
                           B    81    
       00000004            B    82    sdc_serializer_busy		equ 4 		;(port_hw_f
       00000005            B    83    vrt						equ 5		;(port_hw_f
                           B    84    
                           B    85    
                           B    86    ;-- Memory locations --------------------------
                           B    87    
       00800000            B    88    hw_vram_a			equ 0800000h
       00C00000            B    89    hw_vram_b			equ 0c00000h
       00F00000            B    90    hw_palette			equ 0f00000h
       00F80000            B    91    hw_audio_registers 	equ 0f80000h
                           B    92    
                           B    93    ;----------------------------------------------
                           B    94    
                           B    95    
       00000A00            B    96    os_start 	equ 0a00h
Zilog eZ80 Macro Assembler Version 4.1 (10060805)28-Feb-11     14:17:25     page:   3


PC     Object              I  Line    Source ..\..\includes\PROSE_header.asm
                           B    97    
       00000A14            B    98    prose_return equ os_start+14h
       00000A20            B    99    prose_kernal equ os_start+20h
                           B   100    
                           B   101    ;----------------------------------------------
                           B   102    ; Kernal Jump Table values for mode PROSE
                           B   103    ;----------------------------------------------
                           B   104    		
       00000000            B   105    kr_mount_volumes				equ 00h	
       00000001            B   106    kr_get_device_info				equ 01h	
       00000002            B   107    kr_check_volume_format			equ 02h	
       00000003            B   108    kr_change_volume				equ 03h	
       00000004            B   109    kr_get_volume_info				equ 04h	
       00000005            B   110    kr_format_device				equ 05h	
       00000006            B   111    kr_make_dir						equ 06h
                           B   112    
       00000007            B   113    kr_change_dir					equ 07h	
       00000008            B   114    kr_parent_dir					equ 08h	
       00000009            B   115    kr_root_dir						equ 09h
       0000000A            B   116    kr_delete_dir					equ 0ah
       0000000B            B   117    kr_find_file					equ 0bh
       0000000C            B   118    kr_set_file_pointer				equ 0ch
       0000000D            B   119    kr_set_load_length				equ 0dh
       0000000E            B   120    kr_read_file					equ 0eh
                           B   121    
       0000000F            B   122    kr_erase_file					equ 0fh
       00000010            B   123    kr_rename_file					equ 10h
       00000011            B   124    kr_create_file					equ 11h
       00000012            B   125    kr_write_file					equ 12h
       00000013            B   126    kr_get_total_sectors			equ 13h
       00000014            B   127    kr_dir_list_first_entry			equ 14h
       00000015            B   128    kr_dir_list_get_entry			equ 15h
       00000016            B   129    kr_dir_list_next_entry			equ 16h
                           B   130    
       00000017            B   131    kr_read_sector					equ 17h
       00000018            B   132    kr_write_sector					equ 18h
       00000019            B   133    kr_file_sector_list				equ 19h
       0000001A            B   134    kr_get_dir_cluster				equ 1ah
       0000001B            B   135    kr_set_dir_cluster				equ 1bh
       0000001C            B   136    kr_get_dir_name					equ 1ch
       0000001D            B   137    kr_wait_key						equ 1dh
       0000001E            B   138    kr_get_key						equ 1eh
                           B   139    
       0000001F            B   140    kr_get_key_mod_flags			equ 1fh
       00000020            B   141    kr_serial_receive_header		equ 20h
       00000021            B   142    kr_serial_receive_file			equ 21h
       00000022            B   143    kr_serial_send_file				equ 22h
       00000023            B   144    kr_serial_tx_byte				equ 23h
       00000024            B   145    kr_serial_rx_byte				equ 24h
                           B   146    
       00000025            B   147    kr_print_string					equ 25h
       00000026            B   148    kr_clear_screen					equ 26h
Zilog eZ80 Macro Assembler Version 4.1 (10060805)28-Feb-11     14:17:25     page:   4


PC     Object              I  Line    Source ..\..\includes\PROSE_header.asm
       00000027            B   149    kr_wait_vrt						equ 27h
       00000028            B   150    kr_set_cursor_position			equ 28h
       00000029            B   151    kr_plot_char					equ 29h
       0000002A            B   152    kr_set_pen						equ 2ah
       0000002B            B   153    kr_background_colours			equ 2bh
       0000002C            B   154    kr_draw_cursor					equ 2ch
       0000002D            B   155    kr_get_pen						equ 2dh
       0000002E            B   156    kr_scroll_up					equ 2eh
       0000002F            B   157    kr_os_display					equ 2fh
       00000030            B   158    kr_get_display_size				equ 30h
       00000031            B   159    kr_get_charmap_addr_xy			equ 31h
       00000032            B   160    kr_get_cursor_position			equ 32h
                           B   161    
       00000033            B   162    kr_set_envar					equ 33h
       00000034            B   163    kr_get_envar					equ 34h
       00000035            B   164    kr_delete_envar					equ 35h
                           B   165    
       00000036            B   166    kr_enable_mouse					equ 36h
       00000037            B   167    kr_get_mouse_position			equ 37h
       00000038            B   168    kr_get_mouse_disp				equ 38h
                           B   169    
       00000039            B   170    kr_time_delay					equ 39h
       0000003A            B   171    kr_compare_strings				equ 3ah
       0000003B            B   172    kr_hex_byte_to_ascii			equ 3bh
       0000003C            B   173    kr_ascii_to_hex_word			equ 3ch
       0000003D            B   174    kr_get_string					equ 3dh
                           B   175    
       0000003E            B   176    kr_get_version					equ 3eh
       0000003F            B   177    kr_dont_store_registers			equ 3fh
       00000040            B   178    kr_os_video_settings			equ 40h
       00000041            B   179    kr_read_rtc						equ 41h
       00000042            B   180    kr_write_rtc					equ 42h
                           B   181    
                           B   182    ;----------------------------------------------
                           B   183    ; Standard PROSE executable header
                           B   184    ;----------------------------------------------
                           B   185    
                           B   186    
                           B   187    	IF ADL_mode = 0
                           B   188    		org load_location&0ffffh	; if Z80 mo
                           B   189    	ELSE
010000                     B   190    		org load_location			; otherwise
                           B   191    	ENDIF
                           B   192    	
                           B   193    		.assume ADL = 1				; All PROSE
                           B   194    
010000 18 0E               B   195    		jr skip_header				; $0 - Jump
010002 50524F              B   196    		db 'PRO'					; $2 - ASCI
010005 000001              B   197    mb_loc	dw24 load_location			; $5 - Desi
010008 000000              B   198    		dw24 0						; $8 - If >
01000B 0000                B   199    		dw 0						; $B - If >
01000D 0000                B   200    		dw 0						; $D - If >
Zilog eZ80 Macro Assembler Version 4.1 (10060805)28-Feb-11     14:17:25     page:   5


PC     Object              I  Line    Source ..\..\includes\PROSE_header.asm
01000F 01                  B   201    		db ADL_mode					; $F - Z80 
                           B   202    
010010                     B   203    skip_header
                           B   204    	
                           B   205    	IF ADL_mode = 0 
                           B   206    		
                           B   207    mbase_offset equ load_location & 0ff0000h
                           B   208    
                           B   209    		ld a,load_location/65536	; Additiona
                           B   210    		ld MB,a						; Set MBASE
                           B   211    		jp.sis go_z80_mode			; switches 
                           B   212    
                           B   213    go_z80_mode
                           B   214    
                           B   215    		.assume ADL = 0
                           B   216    
                           B   217    	ENDIF
                           B   218    	
                           B   219    ;----------------------------------------------
                           B   220    	
                           A     9    
                           A    10    ;----------------------------------------------
                           A    11    ; ADL-mode user program follows..
                           A    12    ;----------------------------------------------
                           A    13    
010010 21FF0001            A    14    			ld hl,100ffh
010014 3600                A    15    			ld (hl),0
                           A    16    
010016 21 6D 03 01         A    17    			ld hl,message_txt				; A
01001A 3E25                A    18    			ld a,kr_print_string			; d
01001C 5BCD200A 00         A    19    			call.lil prose_kernal			; c
                           A    20    	
                           A    21    ;			ld de,0ffffh
                           A    22    ;			call time_delay
                           A    23    			
010021 CD 25 02 01         A    24    			call reset_mouse
010025 21 C7 03 01         A    25    			ld hl,ok_txt
010029 30 04               A    26    			jr nc,kbrsok
01002B 21 CD 03 01         A    27    			ld hl,bad_txt
01002F 3E25                A    28    kbrsok		ld a,kr_print_string
010031 5BCD200A 00         A    29    			call.lil prose_kernal
010036 AF                  A    30    			xor a
010037 5BC3140A 00         A    31    			jp.lil prose_return
                           A    32    
                           A    33    
010100                     A    34    org load_location+100h
                           A    35    
010100 21 D7 03 01         A    36    			ld hl,buffer_empty_txt
010104 ED3807              A    37    			in0 a,(port_ps2_ctrl)
010107 CB6F                A    38    			bit 5,a
010109 28 04               A    39    			jr z,buffemp
01010B 21 E9 03 01         A    40    			ld hl,buffer_data_txt
Zilog eZ80 Macro Assembler Version 4.1 (10060805)28-Feb-11     14:17:25     page:   6


PC     Object              I  Line    Source E:\MY_OWN~1\Coding\EZ80PR~1\Code\PROSEA~1\RESET_~1\src\ms_reset.asm
01010F 3E25                A    41    buffemp		ld a,kr_print_string
010111 5BCD200A 00         A    42    			call.lil prose_kernal
010116 AF                  A    43    			xor a
010117 5BC3140A 00         A    44    			jp.lil prose_return				; b
                           A    45    
                           A    46    
                           A    47    
010200                     A    48    org load_location+200h
                           A    49    		
010200 ED3806              A    50    			in0 a,(port_mouse_data)
010203 CD 0D 02 01         A    51    			call show_byte
010207 AF                  A    52    			xor a
010208 5BC3140A 00         A    53    			jp.lil prose_return				; b
                           A    54    
                           A    55    
                           A    56    ;----------------------------------------------
                           A    57    
01020D                     A    58    show_byte
                           A    59    
01020D 5F                  A    60    			ld e,a
01020E 21 0E 04 01         A    61    			ld hl,byte_txt
010212 3E3B                A    62    			ld a,kr_hex_byte_to_ascii
010214 5BCD200A 00         A    63    			call.lil prose_kernal
010219 21 00 04 01         A    64    			ld hl,showhex_txt
01021D 3E25                A    65    			ld a,kr_print_string
01021F 5BCD200A 00         A    66    			call.lil prose_kernal
010224 C9                  A    67    			ret
                           A    68    
                           A    69    ;----------------------------------------------
                           A    70    
010225                     A    71    reset_mouse
                           A    72    
                           A    73    ; Returns with carry flag set if mouse did not 
                           A    74    
010225 3E01                A    75    			ld a,01b
010227 D305                A    76    			out (port_irq_ctrl),a				                           A    77    				
010229 3EFF                A    78    			ld a,0ffh							01022B CD 55 02 01         A    79    			call write_to_mouse		
01022F D8                  A    80    			ret c
010230 CD BD 02 01         A    81    			call wait_mouse_byte				010234 D8                  A    82    			ret c
010235 CD BD 02 01         A    83    			call wait_mouse_byte				010239 D8                  A    84    			ret c
01023A CD BD 02 01         A    85    			call wait_mouse_byte				01023E D8                  A    86    			ret c
01023F CD BD 02 01         A    87    			call wait_mouse_byte				010243 D8                  A    88    			ret c
                           A    89    
010244 3EF4                A    90    			ld a,0f4h							010246 CD 55 02 01         A    91    			call write_to_mouse
01024A D8                  A    92    			ret c
Zilog eZ80 Macro Assembler Version 4.1 (10060805)28-Feb-11     14:17:25     page:   7


PC     Object              I  Line    Source E:\MY_OWN~1\Coding\EZ80PR~1\Code\PROSEA~1\RESET_~1\src\ms_reset.asm
01024B CD BD 02 01         A    93    			call wait_mouse_byte				01024F D8                  A    94    			ret c
010250 CD BD 02 01         A    95    			call wait_mouse_byte				010254 C9                  A    96    			ret
                           A    97    			
                           A    98    ;----------------------------------------------
                           A    99    				
010255                     A   100    write_to_mouse
                           A   101    
                           A   102    ; Put byte to send to mouse in A
                           A   103    
010255 4F                  A   104    			ld c,a								010256 3E04                A   105    			ld a,0100b							010258 ED3907              A   106    			out0 (port_ps2_ctrl),a
01025B 11080000            A   107    			ld de,8
01025F CD 4B 03 01         A   108    			call time_delay						010263 3E0C                A   109    			ld a,1100b
010265 ED3907              A   110    			out0 (port_ps2_ctrl),a				010268 3E08                A   111    			ld a,1000b
01026A ED3907              A   112    			out0 (port_ps2_ctrl),a				                           A   113    			
01026D 1601                A   114    			ld d,1								01026F 0608                A   115    			ld b,8								010271 CD E2 02 01         A   116    mdoloop		call wait_mouse_clk_low	
010275 D8                  A   117    			ret c
010276 AF                  A   118    			xor a
010277 CBDF                A   119    			set 3,a
010279 CB41                A   120    			bit 0,c
01027B 28 03               A   121    			jr z,mdbzero
01027D CB9F                A   122    			res 3,a
01027F 14                  A   123    			inc d
010280 ED3907              A   124    mdbzero		out0 (port_ps2_ctrl),a				010283 CD EE 02 01         A   125    			call wait_mouse_clk_high
010287 D8                  A   126    			ret c
010288 CB19                A   127    			rr c
01028A 10 E5               A   128    			djnz mdoloop
                           A   129    
01028C CD E2 02 01         A   130    			call wait_mouse_clk_low
010290 D8                  A   131    			ret c
010291 AF                  A   132    			xor a
010292 CB42                A   133    			bit 0,d
010294 20 02               A   134    			jr nz,parone
010296 CBDF                A   135    			set 3,a
010298 ED3907              A   136    parone		out0 (port_ps2_ctrl),a				01029B CD EE 02 01         A   137    			call wait_mouse_clk_high
01029F D8                  A   138    			ret c
                           A   139    			
0102A0 CD E2 02 01         A   140    			call wait_mouse_clk_low
0102A4 D8                  A   141    			ret c
0102A5 AF                  A   142    			xor a
0102A6 ED3907              A   143    			out0 (port_ps2_ctrl),a				                           A   144    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)28-Feb-11     14:17:25     page:   8


PC     Object              I  Line    Source E:\MY_OWN~1\Coding\EZ80PR~1\Code\PROSEA~1\RESET_~1\src\ms_reset.asm
0102A9 CD E8 02 01         A   145    			call wait_mouse_data_low			0102AD D8                  A   146    			ret c
0102AE CD E2 02 01         A   147    			call wait_mouse_clk_low				0102B2 D8                  A   148    			ret c
                           A   149    				
0102B3 CD F4 02 01         A   150    			call wait_mouse_data_high			0102B7 D8                  A   151    			ret c
0102B8 CD EE 02 01         A   152    			call wait_mouse_clk_high			0102BC C9                  A   153    			ret 
                           A   154    
                           A   155    ;----------------------------------------------
                           A   156    
                           A   157    
0102BD                     A   158    wait_mouse_byte
                           A   159    
0102BD 11008000            A   160    			ld de,8000h
0102C1 CD 56 03 01         A   161    			call set_timeout					                           A   162    
0102C5 ED3807              A   163    wait_mloop	in0 a,(port_ps2_ctrl)
0102C8 CB6F                A   164    			bit 5,a
0102CA 20 08               A   165    			jr nz,rec_mbyte
                           A   166    			
0102CC CD 67 03 01         A   167    			call test_timeout
0102D0 28 F3               A   168    			jr z,wait_mloop
0102D2 37                  A   169    			scf									0102D3 C9                  A   170    			ret
                           A   171    			
0102D4 ED3806              A   172    rec_mbyte	in0 a,(port_mouse_data)				0102D7 CD 0D 02 01         A   173    			call show_byte						0102DB AF                  A   174    			xor a
0102DC 21FF0001            A   175    			ld hl,100ffh
0102E0 34                  A   176    			inc (hl)			
0102E1 C9                  A   177    			ret
                           A   178    			
                           A   179    ;----------------------------------------------
                           A   180    
0102E2                     A   181    wait_mouse_clk_low
                           A   182    
0102E2 3E04                A   183    			ld a,4
0102E4 C3 FA 02 01         A   184    			jp ps2_test_lo
                           A   185    
0102E8                     A   186    wait_mouse_data_low
                           A   187    		
0102E8 3E08                A   188    			ld a,8
0102EA C3 FA 02 01         A   189    			jp ps2_test_lo	
                           A   190    
0102EE                     A   191    wait_mouse_clk_high
                           A   192    
0102EE 3E04                A   193    			ld a,4
0102F0 C3 1D 03 01         A   194    			jp ps2_test_hi
                           A   195    
0102F4                     A   196    wait_mouse_data_high
Zilog eZ80 Macro Assembler Version 4.1 (10060805)28-Feb-11     14:17:25     page:   9


PC     Object              I  Line    Source E:\MY_OWN~1\Coding\EZ80PR~1\Code\PROSEA~1\RESET_~1\src\ms_reset.asm
                           A   197    		
0102F4 3E08                A   198    			ld a,8
0102F6 C3 1D 03 01         A   199    			jp ps2_test_hi			
                           A   200    			
                           A   201    
0102FA C5                  A   202    ps2_test_lo	push bc
0102FB D5                  A   203    			push de
0102FC 4F                  A   204    			ld c,a
0102FD 11004000            A   205    			ld de,04000h					; a
010301 CD 56 03 01         A   206    			call set_timeout
010305 0604                A   207    kb_lw		ld b,4							; m
010307 CD 67 03 01         A   208    kb_lnlp		call test_timeout				; t
01030B 28 04               A   209    			jr z,kb_lnto
01030D D1                  A   210    			pop de
01030E C1                  A   211    			pop bc
01030F 37                  A   212    			scf								; c
010310 C9                  A   213    			ret
010311 ED3807              A   214    kb_lnto		in0 a,(port_ps2_ctrl)
010314 A1                  A   215    			and c
010315 20 EE               A   216    			jr nz,kb_lw
010317 10 EE               A   217    			djnz kb_lnlp		
010319 D1                  A   218    			pop de
01031A C1                  A   219    			pop bc
01031B AF                  A   220    			xor a
01031C C9                  A   221    			ret								; c
                           A   222    
                           A   223    			
01031D C5                  A   224    ps2_test_hi	push bc
01031E D5                  A   225    			push de
01031F 4F                  A   226    			ld c,a
010320 11004000            A   227    			ld de,04000h					; a
010324 CD 56 03 01         A   228    			call set_timeout
010328 0604                A   229    kb_hw		ld b,4							; m
01032A CD 67 03 01         A   230    kb_hnlp		call test_timeout				; t
01032E 28 04               A   231    			jr z,kb_hnto
010330 D1                  A   232    			pop de
010331 C1                  A   233    			pop bc
010332 37                  A   234    			scf								; c
010333 C9                  A   235    			ret
010334 ED3807              A   236    kb_hnto		in0 a,(port_ps2_ctrl)
010337 A1                  A   237    			and c
010338 28 EE               A   238    			jr z,kb_hw
01033A 10 EE               A   239    			djnz kb_hnlp		
01033C D1                  A   240    			pop de
01033D C1                  A   241    			pop bc
01033E AF                  A   242    			xor a							; c
01033F C9                  A   243    			ret
                           A   244    
                           A   245    
                           A   246    ;----------------------------------------------
                           A   247    
010340 ED3807              A   248    purge_mouse	in0 a,(port_ps2_ctrl)
Zilog eZ80 Macro Assembler Version 4.1 (10060805)28-Feb-11     14:17:25     page:  10


PC     Object              I  Line    Source E:\MY_OWN~1\Coding\EZ80PR~1\Code\PROSEA~1\RESET_~1\src\ms_reset.asm
010343 CB6F                A   249    			bit 5,a
010345 C8                  A   250    			ret z
010346 ED3806              A   251    			in0 a,(port_mouse_data)				010349 18 F5               A   252    			jr purge_mouse
                           A   253    
                           A   254    ;----------------------------------------------
                           A   255    
01034B                     A   256    time_delay
                           A   257    
01034B CD 56 03 01         A   258    			call set_timeout
01034F CD 67 03 01         A   259    wait_td		call test_timeout
010353 28 FA               A   260    			jr z,wait_td
010355 C9                  A   261    			ret
                           A   262    			
010356                     A   263    set_timeout	
                           A   264    
010356 7B                  A   265    			ld a,e							
010357 ED3981              A   266    			out0 (TMR0_RR_L),a				; s
01035A 7A                  A   267    			ld a,d
01035B ED3982              A   268    			out0 (TMR0_RR_H),a				; s
01035E 3E03                A   269    			ld a,00000011b						010360 ED3980              A   270    			out0 (TMR0_CTL),a				; e
010363 ED3880              A   271    			in0 a,(TMR0_CTL)				; e
010366 C9                  A   272    			ret
                           A   273    			
010367                     A   274    test_timeout
                           A   275    
010367 ED3880              A   276    			in0 a,(TMR0_CTL)					01036A CB7F                A   277    			bit 7,a
01036C C9                  A   278    			ret
                           A   279    			
                           A   280    ;----------------------------------------------
                           A   281    
01036D                     A   282    message_txt
                           A   283    
01036D 52657365 7474696E   A   284    		db 'Resetting mouse on port2',11,11
010375 67206D6F 75736520 
01037D 6F6E2070 6F727432 
010385 0B0B 
010387 47203130 31303020   A   285    		db 'G 10100 to read buffer status',11,1
01038F 746F2072 65616420 
010397 62756666 65722073 
01039F 74617475 730B0B 
0103A6 47203130 32303020   A   286    		db 'G 10200 to read a buffer entry',11,
0103AE 746F2072 65616420 
0103B6 61206275 66666572 
0103BE 20656E74 72790B0B 
0103C6 00 
                           A   287    
0103C7 4F4B2E2E 0B00       A   288    ok_txt	db 'OK..',11,0
0103CD 4661696C 65642E2E   A   289    bad_txt	db 'Failed..',11,0
0103D5 0B00 
Zilog eZ80 Macro Assembler Version 4.1 (10060805)28-Feb-11     14:17:25     page:  11


PC     Object              I  Line    Source E:\MY_OWN~1\Coding\EZ80PR~1\Code\PROSEA~1\RESET_~1\src\ms_reset.asm
                           A   290    		
0103D7 42756666 65722069   A   291    buffer_empty_txt	db 'Buffer is empty',11,11,
0103DF 7320656D 7074790B 
0103E7 0B00 
0103E9 42756666 65722063   A   292    buffer_data_txt		db 'Buffer contains data',1
0103F1 6F6E7461 696E7320 
0103F9 64617461 0B0B00 
                           A   293    
010400 42756666 65722062   A   294    showhex_txt			db 'Buffer byte: $'
010408 7974653A 2024 
01040E 2D2D0B0B 00         A   295    byte_txt 			db '--',11,11,0
                           A   296    
                           A   297    ;----------------------------------------------
                           A   298    		
                           A   299    		


Errors: 0
Warnings: 0
Lines Assembled: 520
