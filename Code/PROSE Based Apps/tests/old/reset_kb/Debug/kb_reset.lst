Zilog eZ80 Macro Assembler Version 4.1 (10060805)05-Feb-11     23:10:33     page:   1


PC     Object              I  Line    Source 
                           A     1    ; reset keyboard
                           A     2    
                           A     3    ;----------------------------------------------
                           A     4    
       00000001            A     5    ADL_mode		equ 1				; 0 if user
       00010000            A     6    load_location	equ 10000h			; anywhere 
                           A     7    
                           B     0    				include	'PROSE_header.asm'
                           B     1    ;--- EZ80 Internal CPU Ports ------------------
                           B     2    
       0000009A            B     3    PB_DR			equ 09ah
       0000009B            B     4    PB_DDR			equ 09bh
       0000009C            B     5    PB_ALT1			equ 09ch
       0000009D            B     6    PB_ALT2			equ 09dh
                           B     7    
       0000009E            B     8    PC_DR			equ 09eh
       0000009F            B     9    PC_DDR			equ 09fh
       000000A0            B    10    PC_ALT1			equ 0a0h
       000000A1            B    11    PC_ALT2			equ 0a1h
                           B    12    
       000000A2            B    13    PD_DR			equ 0a2h
       000000A3            B    14    PD_DDR			equ 0a3h
       000000A4            B    15    PD_ALT1			equ 0a4h
       000000A5            B    16    PD_ALT2			equ 0a5h
                           B    17    
       000000C0            B    18    UART0_RBR		equ 0c0h
       000000C0            B    19    UART0_THR		equ 0c0h
       000000C0            B    20    UART0_BRG_L		equ 0c0h
       000000C1            B    21    UART0_BRG_H		equ 0c1h
       000000C1            B    22    UART0_IER		equ 0c1h
       000000C2            B    23    UART0_FCTL		equ 0c2h
       000000C3            B    24    UART0_LCTL		equ 0c3h
       000000C4            B    25    UART0_MCTL		equ 0c4h
       000000C5            B    26    UART0_LSR		equ 0c5h
                           B    27    
       000000A8            B    28    CS0_LBR			equ 0a8h			;eZ80 wait 
       000000A9            B    29    CS0_UBR			equ 0a9h
       000000AA            B    30    CS0_CTL			equ 0aah			
       000000AB            B    31    CS1_LBR			equ 0abh			;eZ80 wait 
       000000AC            B    32    CS1_UBR			equ 0ach
       000000AD            B    33    CS1_CTL			equ 0adh
       000000AE            B    34    CS2_LBR			equ 0aeh			;eZ80 wait 
       000000AF            B    35    CS2_UBR			equ 0afh
       000000B0            B    36    CS2_CTL			equ 0b0h
       000000B1            B    37    CS3_LBR			equ 0b1h			;eZ80 wait 
       000000B2            B    38    CS3_UBR			equ 0b2h
       000000B3            B    39    CS3_CTL			equ 0b3h
                           B    40    
       00000080            B    41    TMR0_CTL		equ 080h			;timer 0 eq
       00000081            B    42    TMR0_DR_L		equ 081h
       00000081            B    43    TMR0_RR_L		equ 081h
       00000082            B    44    TMR0_DR_H		equ 082h
Zilog eZ80 Macro Assembler Version 4.1 (10060805)05-Feb-11     23:10:33     page:   2


PC     Object              I  Line    Source ..\..\includes\PROSE_header.asm
       00000082            B    45    TMR0_RR_H		equ 082h
       00000092            B    46    TMR_ISS			equ 092h
                           B    47    
       000000ED            B    48    RTC_CTRL		equ 0edh			;RTC equate
       000000EC            B    49    RTC_ACTRL		equ 0ech
       000000E0            B    50    RTC_SEC			equ 0e0h
       000000E1            B    51    RTC_MIN			equ 0e1h
       000000E2            B    52    RTC_HRS			equ 0e2h
       000000E3            B    53    RTC_DOW			equ 0e3h
       000000E4            B    54    RTC_DOM			equ 0e4h
       000000E5            B    55    RTC_MON			equ 0e5h
       000000E6            B    56    RTC_YR			equ 0e6h
       000000E7            B    57    RTC_CEN			equ 0e7h
                           B    58    
                           B    59    ;-- EZ80P Hardware equates --------------------
                           B    60    
       00000000            B    61    port_pic_data  			equ 000h
       00000001            B    62    port_pic_ctrl			equ 001h
       00000001            B    63    port_hw_flags			equ 001h
       00000002            B    64    port_sdc_ctrl			equ 002h	; this is a
       00000002            B    65    port_keyboard_data		equ 002h
       00000003            B    66    port_sdc_data		 	equ 003h	
       00000004            B    67    port_memory_paging		equ 004h
       00000005            B    68    port_irq_ctrl			equ 005h
       00000006            B    69    port_nmi_ack			equ 006h
       00000007            B    70    port_ps2_ctrl			equ 007h
       00000008            B    71    port_selector			equ 008h
                           B    72    
       00000040            B    73    port_video_mode			equ 040h
                           B    74    
                           B    75    
       00000000            B    76    sdc_power				equ 0		;(port_sd_c
       00000001            B    77    sdc_cs					equ 1		;(port_sd_c
       00000002            B    78    sdc_speed				equ 2 		;(port_sd_c
                           B    79    
       00000004            B    80    sdc_serializer_busy		equ 4 		;(port_hw_f
       00000005            B    81    vrt						equ 5		;(port_hw_f
                           B    82    
                           B    83    
                           B    84    ;-- Memory locations --------------------------
                           B    85    
       00800000            B    86    hw_vram_a			equ 0800000h
       00F00000            B    87    hw_palette			equ 0f00000h
       00F80000            B    88    hw_audio_registers 	equ 0f80000h
                           B    89    
                           B    90    ;----------------------------------------------
                           B    91    
                           B    92    
       00000A00            B    93    os_start 	equ 0a00h
                           B    94    
       00000A14            B    95    prose_return equ os_start+14h
       00000A20            B    96    prose_kernal equ os_start+20h
Zilog eZ80 Macro Assembler Version 4.1 (10060805)05-Feb-11     23:10:33     page:   3


PC     Object              I  Line    Source ..\..\includes\PROSE_header.asm
                           B    97    
                           B    98    ;----------------------------------------------
                           B    99    ; Kernal Jump Table values for mode PROSE
                           B   100    ;----------------------------------------------
                           B   101    		
       00000000            B   102    kr_mount_volumes				equ 00h	
       00000001            B   103    kr_get_device_info				equ 01h	
       00000002            B   104    kr_check_volume_format			equ 02h	
       00000003            B   105    kr_change_volume				equ 03h	
       00000004            B   106    kr_get_volume_info				equ 04h	
       00000005            B   107    kr_format_device				equ 05h	
       00000006            B   108    kr_make_dir						equ 06h
                           B   109    
       00000007            B   110    kr_change_dir					equ 07h	
       00000008            B   111    kr_parent_dir					equ 08h	
       00000009            B   112    kr_root_dir						equ 09h
       0000000A            B   113    kr_delete_dir					equ 0ah
       0000000B            B   114    kr_find_file					equ 0bh
       0000000C            B   115    kr_set_file_pointer				equ 0ch
       0000000D            B   116    kr_set_load_length				equ 0dh
       0000000E            B   117    kr_read_file					equ 0eh
                           B   118    
       0000000F            B   119    kr_erase_file					equ 0fh
       00000010            B   120    kr_rename_file					equ 10h
       00000011            B   121    kr_create_file					equ 11h
       00000012            B   122    kr_write_file					equ 12h
       00000013            B   123    kr_get_total_sectors			equ 13h
       00000014            B   124    kr_dir_list_first_entry			equ 14h
       00000015            B   125    kr_dir_list_get_entry			equ 15h
       00000016            B   126    kr_dir_list_next_entry			equ 16h
                           B   127    
       00000017            B   128    kr_read_sector					equ 17h
       00000018            B   129    kr_write_sector					equ 18h
       00000019            B   130    kr_file_sector_list				equ 19h
       0000001A            B   131    kr_get_dir_cluster				equ 1ah
       0000001B            B   132    kr_set_dir_cluster				equ 1bh
       0000001C            B   133    kr_get_dir_name					equ 1ch
       0000001D            B   134    kr_wait_key						equ 1dh
       0000001E            B   135    kr_get_key						equ 1eh
                           B   136    
       0000001F            B   137    kr_get_key_mod_flags			equ 1fh
       00000020            B   138    kr_serial_receive_header		equ 20h
       00000021            B   139    kr_serial_receive_file			equ 21h
       00000022            B   140    kr_serial_send_file				equ 22h
       00000023            B   141    kr_serial_tx_byte				equ 23h
       00000024            B   142    kr_serial_rx_byte				equ 24h
                           B   143    
       00000025            B   144    kr_print_string					equ 25h
       00000026            B   145    kr_clear_screen					equ 26h
       00000027            B   146    kr_wait_vrt						equ 27h
       00000028            B   147    kr_set_cursor_position			equ 28h
       00000029            B   148    kr_plot_char					equ 29h
Zilog eZ80 Macro Assembler Version 4.1 (10060805)05-Feb-11     23:10:33     page:   4


PC     Object              I  Line    Source ..\..\includes\PROSE_header.asm
       0000002A            B   149    kr_set_pen						equ 2ah
       0000002B            B   150    kr_background_colours			equ 2bh
       0000002C            B   151    kr_draw_cursor					equ 2ch
       0000002D            B   152    kr_get_pen						equ 2dh
       0000002E            B   153    kr_scroll_up					equ 2eh
       0000002F            B   154    kr_os_display					equ 2fh
       00000030            B   155    kr_get_display_size				equ 30h
       00000031            B   156    kr_get_charmap_addr_xy			equ 31h
       00000032            B   157    kr_get_cursor_position			equ 32h
                           B   158    
       00000033            B   159    kr_set_envar					equ 33h
       00000034            B   160    kr_get_envar					equ 34h
       00000035            B   161    kr_delete_envar					equ 35h
                           B   162    
       00000036            B   163    kr_enable_mouse					equ 36h
       00000037            B   164    kr_get_mouse_position			equ 37h
       00000038            B   165    kr_get_mouse_disp				equ 38h
                           B   166    
       00000039            B   167    kr_time_delay					equ 39h
       0000003A            B   168    kr_compare_strings				equ 3ah
       0000003B            B   169    kr_hex_byte_to_ascii			equ 3bh
       0000003C            B   170    kr_ascii_to_hex_word			equ 3ch
       0000003D            B   171    kr_get_string					equ 3dh
                           B   172    
       0000003E            B   173    kr_get_version					equ 3eh
       0000003F            B   174    kr_dont_store_registers			equ 3fh
       00000040            B   175    kr_os_video_settings			equ 40h
       00000041            B   176    kr_read_rtc						equ 41h
       00000042            B   177    kr_write_rtc					equ 42h
                           B   178    
                           B   179    ;----------------------------------------------
                           B   180    ; Standard PROSE executable header
                           B   181    ;----------------------------------------------
                           B   182    
                           B   183    
                           B   184    	IF ADL_mode = 0
                           B   185    		org load_location&0ffffh	; if Z80 mo
                           B   186    	ELSE
010000                     B   187    		org load_location			; otherwise
                           B   188    	ENDIF
                           B   189    	
                           B   190    		.assume ADL = 1				; All PROSE
                           B   191    
010000 18 0E               B   192    		jr skip_header				; $0 - Jump
010002 50524F              B   193    		db 'PRO'					; $2 - ASCI
010005 000001              B   194    mb_loc	dw24 load_location			; $5 - Desi
010008 000000              B   195    		dw24 0						; $8 - If >
01000B 0000                B   196    		dw 0						; $B - If >
01000D 0000                B   197    		dw 0						; $D - If >
01000F 01                  B   198    		db ADL_mode					; $F - Z80 
                           B   199    
010010                     B   200    skip_header
Zilog eZ80 Macro Assembler Version 4.1 (10060805)05-Feb-11     23:10:33     page:   5


PC     Object              I  Line    Source ..\..\includes\PROSE_header.asm
                           B   201    	
                           B   202    	IF ADL_mode = 0 
                           B   203    		
                           B   204    mbase_offset equ load_location & 0ff0000h
                           B   205    
                           B   206    		ld a,load_location/65536	; Additiona
                           B   207    		ld MB,a						; Set MBASE
                           B   208    		jp.sis go_z80_mode			; switches 
                           B   209    
                           B   210    go_z80_mode
                           B   211    
                           B   212    		.assume ADL = 0
                           B   213    
                           B   214    	ENDIF
                           B   215    	
                           B   216    ;----------------------------------------------
                           B   217    	
                           A     9    
                           A    10    ;----------------------------------------------
                           A    11    ; ADL-mode user program follows..
                           A    12    ;----------------------------------------------
                           A    13    
010010 21 14 01 01         A    14    			ld hl,message_txt				; A
010014 3E25                A    15    			ld a,kr_print_string			; d
010016 5BCD200A 00         A    16    			call.lil prose_kernal			; c
                           A    17    			
01001B CD 36 00 01         A    18    			call reset_keyboard
01001F 21 2A 01 01         A    19    			ld hl,ok_txt
010023 30 04               A    20    			jr nc,kbrsok
010025 21 30 01 01         A    21    			ld hl,bad_txt
                           A    22    
010029 3E25                A    23    kbrsok		ld a,kr_print_string
01002B 5BCD200A 00         A    24    			call.lil prose_kernal
010030 AF                  A    25    			xor a
010031 5BC3140A 00         A    26    			jp.lil prose_return				; b
                           A    27    
                           A    28    ;----------------------------------------------
                           A    29    ; RESET KEYBOARD ROUTINE 
                           A    30    ;----------------------------------------------
                           A    31    
010036                     A    32    reset_keyboard
                           A    33    
                           A    34    ; If on return carry flag is set, keyboard init
                           A    35    
                           A    36    	
010036 3E00                A    37    			ld a,0
010038 ED3905              A    38    			out0 (port_irq_ctrl),a			; d
01003B CD 45 00 01         A    39    			call do_kbrs
01003F 3E01                A    40    			ld a,1
010041 ED3905              A    41    			out0 (port_irq_ctrl),a			; r
010044 C9                  A    42    			ret
                           A    43    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)05-Feb-11     23:10:33     page:   6


PC     Object              I  Line    Source E:\MY_OWN~1\Coding\EZ80PR~1\Code\PROSEA~1\reset_kb\src\kb_reset.asm
                           A    44    
010045 3E01                A    45    do_kbrs		ld a,0001b						; p
010047 ED3907              A    46    			out0 (port_ps2_ctrl),a
                           A    47    
01004A 11080000            A    48    			ld de,8							; w
01004E CD FD 00 01         A    49    			call set_timeout
010052 CD 0E 01 01         A    50    wait_to1	call test_timeout
010056 28 FA               A    51    			jr z,wait_to1
                           A    52    						
010058 3E03                A    53    			ld a,0011b
01005A ED3907              A    54    			out0 (port_ps2_ctrl),a			; p
01005D 3E02                A    55    			ld a,0010b
01005F ED3907              A    56    			out0 (port_ps2_ctrl),a			; r
                           A    57    
010062 2E09                A    58    			ld l,9							; 8
010064 CD B9 00 01         A    59    kb_byte		call wait_kb_clk_low	
010068 D8                  A    60    			ret c
010069 AF                  A    61    			xor a
01006A ED3907              A    62    			out0 (port_ps2_ctrl),a			; K
01006D CD DB 00 01         A    63    			call wait_kb_clk_high
010071 D8                  A    64    			ret c
010072 2D                  A    65    			dec l
010073 20 EF               A    66    			jr nz,kb_byte
                           A    67    
010075 CD B9 00 01         A    68    			call wait_kb_clk_low			; w
010079 D8                  A    69    			ret c
01007A CD BD 00 01         A    70    			call wait_kb_data_low			; w
01007E D8                  A    71    			ret c
01007F CD DB 00 01         A    72    			call wait_kb_clk_high			; w
010083 D8                  A    73    			ret c
010084 CD DF 00 01         A    74    			call wait_kb_data_high
010088 D8                  A    75    			ret c
                           A    76    
010089 11FFFF00            A    77    			ld de,0ffffh					; a
01008D CD FD 00 01         A    78    			call set_timeout
                           A    79    			
010091 ED3807              A    80    wsc			in0 a,(port_ps2_ctrl)
010094 CB67                A    81    			bit 4,a
010096 28 19               A    82    			jr z,nokbr
                           A    83    			
010098 ED1802              A    84    			in0 e,(port_keyboard_data)
01009B 21 3A 01 01         A    85    			ld hl,byte_txt
01009F 3E3B                A    86    			ld a,kr_hex_byte_to_ascii
0100A1 5BCD200A 00         A    87    			call.lil prose_kernal
0100A6 21 3A 01 01         A    88    			ld hl,byte_txt
0100AA 3E25                A    89    			ld a,kr_print_string
0100AC 5BCD200A 00         A    90    			call.lil prose_kernal
                           A    91    			
0100B1 CD 0E 01 01         A    92    nokbr		call test_timeout
0100B5 28 DA               A    93    			jr z,wsc
0100B7 AF                  A    94    			xor a
0100B8 C9                  A    95    			ret
Zilog eZ80 Macro Assembler Version 4.1 (10060805)05-Feb-11     23:10:33     page:   7


PC     Object              I  Line    Source E:\MY_OWN~1\Coding\EZ80PR~1\Code\PROSEA~1\reset_kb\src\kb_reset.asm
                           A    96    			
                           A    97    
                           A    98    
0100B9                     A    99    wait_kb_clk_low
                           A   100    
0100B9 0E01                A   101    			ld c,1
0100BB 18 02               A   102    			jr kb_test_lo
                           A   103    
0100BD                     A   104    wait_kb_data_low
                           A   105    		
0100BD 0E02                A   106    			ld c,2
                           A   107    
0100BF 11004000            A   108    kb_test_lo	ld de,04000h					; a
0100C3 CD FD 00 01         A   109    			call set_timeout
0100C7 0604                A   110    kb_lw		ld b,4							; m
0100C9 CD 0E 01 01         A   111    kb_lnlp		call test_timeout				; t
0100CD 28 02               A   112    			jr z,kb_lnto
0100CF 37                  A   113    			scf								; c
0100D0 C9                  A   114    			ret
0100D1 ED3807              A   115    kb_lnto		in0 a,(port_ps2_ctrl)
0100D4 A1                  A   116    			and c
0100D5 20 F0               A   117    			jr nz,kb_lw
0100D7 10 F0               A   118    			djnz kb_lnlp		
0100D9 AF                  A   119    			xor a							; c
0100DA C9                  A   120    			ret
                           A   121    
                           A   122    
0100DB                     A   123    wait_kb_clk_high
                           A   124    
0100DB 0E01                A   125    			ld c,1
0100DD 18 02               A   126    			jr kb_test_hi
                           A   127    
0100DF                     A   128    wait_kb_data_high
                           A   129    		
0100DF 0E02                A   130    			ld c,2
                           A   131    			
0100E1 11004000            A   132    kb_test_hi	ld de,04000h					; a
0100E5 CD FD 00 01         A   133    			call set_timeout
0100E9 0604                A   134    kb_hw		ld b,4							; m
0100EB CD 0E 01 01         A   135    kb_hnlp		call test_timeout				; t
0100EF 28 02               A   136    			jr z,kb_hnto
0100F1 37                  A   137    			scf								; c
0100F2 C9                  A   138    			ret
0100F3 ED3807              A   139    kb_hnto		in0 a,(port_ps2_ctrl)
0100F6 A1                  A   140    			and c
0100F7 28 F0               A   141    			jr z,kb_hw
0100F9 10 F0               A   142    			djnz kb_hnlp		
0100FB AF                  A   143    			xor a							; c
0100FC C9                  A   144    			ret
                           A   145    
                           A   146    
                           A   147    ;----------------------------------------------
Zilog eZ80 Macro Assembler Version 4.1 (10060805)05-Feb-11     23:10:33     page:   8


PC     Object              I  Line    Source E:\MY_OWN~1\Coding\EZ80PR~1\Code\PROSEA~1\reset_kb\src\kb_reset.asm
                           A   148    
0100FD                     A   149    set_timeout	
                           A   150    
0100FD 7B                  A   151    			ld a,e							
0100FE ED3981              A   152    			out0 (TMR0_RR_L),a				; s
010101 7A                  A   153    			ld a,d
010102 ED3982              A   154    			out0 (TMR0_RR_H),a				; s
010105 3E03                A   155    			ld a,00000011b						010107 ED3980              A   156    			out0 (TMR0_CTL),a				; e
01010A ED3880              A   157    			in0 a,(TMR0_CTL)				; e
01010D C9                  A   158    			ret
                           A   159    			
01010E                     A   160    test_timeout
                           A   161    
01010E ED3880              A   162    			in0 a,(TMR0_CTL)				; z
010111 CB7F                A   163    			bit 7,a
010113 C9                  A   164    			ret
                           A   165    			
                           A   166    ;----------------------------------------------
                           A   167    
010114                     A   168    message_txt
                           A   169    
010114 52657365 7474696E   A   170    		db 'Resetting keyboard..',11,0
01011C 67206B65 79626F61 
010124 72642E2E 0B00 
                           A   171    
01012A 4F4B2E2E 0B00       A   172    ok_txt	db 'OK..',11,0
010130 4661696C 65642E2E   A   173    bad_txt	db 'Failed..',11,0
010138 0B00 
                           A   174    		
                           A   175    		
01013A 3030200B 00         A   176    byte_txt db '00 ',11,0
                           A   177    
                           A   178    
                           A   179    ;----------------------------------------------
                           A   180    		
                           A   181    		


Errors: 0
Warnings: 0
Lines Assembled: 399
