V6Z80P - A Z80 / FPGA based standalone 8-bit retro computer by Phil Ruston.
---------------------------------------------------------------------------

The V6Z80P system as supplied comprises of 3 main elements:

1. The PCB itself, this is the actual "V6Z80P".

2. A default "hardware" design for the FPGA called OSCA (Old School Computer Architecture)

3. A simple command line operating system for OSCA called FLOS (Freezer-Like Operating System)



Brief description of the V6Z80P PCB
-----------------------------------

The board is a 2-layer PCB, comprising mainly of a 20MHz Z80 CPU, Spartan 2 FPGA
and 3 memory chips on their own seperate buses. It offers 12bit colour and stereo
sound output, connectors for PC standard PS/2 keyboard and mouse, Atari 2600 joysticks,
RS232 serial and SD card IO. The V6Z80P should be powered from a regulated 7.5 to
9.0 Volt DC mains adapter with a 2.1mm jack (centre positive) capable of supplying
about 1Amp (or more).



Brief description of the features of OSCA
-----------------------------------------

OSCA is the V6Z80P's default hardware configuration but it is by no means fixed.
Using the Xilinx Webpack software (ISE version 10.1 or below) the FPGA can be
reconfigured to provide different features, or a totally new design. EG: emulate 
another system. The limitations are the components and connections provided on
the PCB (such as the Z80 CPU, memory, oscillators and IO.)

The video system offers bitplane, bytemap and tilemap style displays, using a
dedicated 512KB RAM. Each mode allows hardware scrolling and a 256 colour palette.
Other features include linedraw hardware, Blitter datacopy and Line-synced co-processor
for split screen effects.

Up to 55 hardware sprites per scanline can be displayed (each 16 pixels wide, up to
240 lines high with 256 colours) A 128KB RAM chip is dedicated to sprite definitions.

For sound, there are four 8-bit audio channels (similar to the Amiga). Sample data is
accessed from system RAM via DMA.



Brief description of the "FLOS" Operating System
-------------------------------------------------

FLOS is a simple command line operating system / memory monitor similar to that
used by freezer cartridges on the 80s home computers. In some ways it behaves like a
more modern DOS in that disk-based programs can be executed simply by entering
their filenames. The usual commands are present (show memory as hex, disassemble,
load and save bytes to RAM etc) - a full list with parameter requirements is
available by entering "?" 

FLOS uses the FAT16 file system and loads from a file on the root of the SD card
(or from the onboard EEPROM). Naturally, it can be replaced with any arbitary code
that is required to load at boot up.



First time power up:
--------------------

At a minimum, connect power, PS/2 keyboard, video/audio cables, make sure the VGA-mode
jumper (on the 10 pin header) is installed if using a PC monitor. The JTAG jumpers
(J1 and J2) should be uninstalled for normal EEPROM-based start-up and the OSC SEL
switch (where fitted) should be in the down position.

Download the full project archive (to PC) then format an SD card to FAT16 (please
use a good brand to ensure compatibility). Copy the contents of the folder
"V6_SD_Card" from the project archive to the card and insert into the V6Z80P's card
slot. (You can use the V6Z80P without an SD card, but you'll need to download
everything serially except the internal commands via serial comms).

Power on the V6Z80P with the switch near the DC power socket. The yellow LED should
come on, the black and white boot-up display appears on screen and afterwards the OS
loads. Once loaded, you can type "?" <return> for a list of internal commands.

Programs can be run from the SD card (use the command line to navigate in a similar
manner to DOS) or downloaded into memory via serial comms from a Windows PC using
the "Serial_link" cable and utility provided (see the "PC_based_apps" folder in
project archive). Most of the demos etc can be quit by pressing the ESC key (bear
in mind, some programs were coded specifically for the PAL TV system so may
not work properly on VGA or in 60Hz NTSC display modes).



Alternative configs:
--------------------

The onboard EEPROM can store multiple FPGA configurations in what (for simplicity)
are called "slots". On power-up, the FPGA starts from whichever is the "Active Slot". 
As supplied, OSCA for 50Hz PAL TVs in Slot 1 and OSCA for 60Hz NTSC TVs is in Slot2.

On newer boards (V6+ v1.1) slot 3 contains Alessandro Dorigatti's Cycle Perfect
Spectrum 48 Emulator - this is run via the FLOS command "GOSPEC". 

My own (inaccurate) Spectrum 128 emulator (PAL and NTSC versions) is the slots
following on.

All the configs supplied support VGA output.




Recommended reading:
--------------------

Offline versions, from main project archive:


FLOS manual: Documentation\Manuals\FLOS_manual.doc

OSCA manual: Documentation\Manuals\OSCA_hardware_manual.doc

PCB tech manual:  Documentation\Manuals\PCB_technical_manual.doc


Online documentation / main project archive: http://wiki.retroleum.co.uk



Notes:
-----

Avoid connecting or disconnecting anything to the V6Z80P whilst the power is switched on.

FLOS cannot automatically recognize card swaps and any card inserted whilst the power is
on (not recommended) needs to be initialized with the "MOUNT" command.

If your PC doesn't have a (free) serial port, a USB->RS232 adapter should work.
Occasionally, the first time the serial link util is used, the first file transfer
fails with a "bad acknowledge" report. (I've yet to find out exactly why..)

