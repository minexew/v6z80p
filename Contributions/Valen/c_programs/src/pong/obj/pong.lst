                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ANSI-C Compiler
                              3 ; Version 2.9.0 #5416 (Mar 22 2009) (MINGW32)
                              4 ; This file was generated Sat Jun 12 17:24:30 2010
                              5 ;--------------------------------------------------------
                              6 	.module pong
                              7 	.optsdcc -mz80
                              8 	
                              9 ;--------------------------------------------------------
                             10 ; Public variables in this module
                             11 ;--------------------------------------------------------
                             12 	.globl _setfillstyle
                             13 	.globl _Game_LoadStateData
                             14 	.globl _main
                             15 	.globl _Game_Play
                             16 	.globl _Game_ReInit_Watcher
                             17 	.globl _Game_HandlePlayerInput_PauseMode
                             18 	.globl _Game_HandlePlayerInput_Bat
                             19 	.globl _Debug_CheckCurrentBank
                             20 	.globl _MUSIC_Init
                             21 	.globl _MUSIC_Silence
                             22 	.globl _Mod_LoadMusicModule
                             23 	.globl _Mod_FindHighestUsedPattern
                             24 	.globl _Sound_InitFx
                             25 	.globl _Sound_LoadFxDescriptors
                             26 	.globl _Sound_LoadSounds
                             27 	.globl _Sound_LoadSoundCode
                             28 	.globl _GameObjYouWin_Init
                             29 	.globl _GameObjRocket_Init
                             30 	.globl _helper_GameObjScore_IsScoreBlinkedAtLeast
                             31 	.globl _GameObjScore_SetScore
                             32 	.globl _GameObjScore_SetState
                             33 	.globl _GameObjScore_Init
                             34 	.globl _GameObjAnim_ShowOnlyFirstFrame
                             35 	.globl _GameObjAnim_EnableAnimation
                             36 	.globl _GameObjAnim_Init
                             37 	.globl _GameObj_Collide
                             38 	.globl _GameObj_InitCollideBox
                             39 	.globl _GameObj_Init
                             40 	.globl _PoolGameObj_FreeGameObj
                             41 	.globl _PoolGameObj_AllocateGameObjRocket
                             42 	.globl _PoolSprites_Init
                             43 	.globl _Joystick_GetInput
                             44 	.globl _Joystick_SelectJoystickPort
                             45 	.globl _Keyboard_IRQ_Handler
                             46 	.globl _Keyboard_GetLastPressedScancode
                             47 	.globl _Keyboard_Init
                             48 	.globl _Input_ClearPlayersInput
                             49 	.globl _Background_InitTilemap
                             50 	.globl _TileMap_Clear
                             51 	.globl _TileMap_FillTileDefinition
                             52 	.globl _Background_LoadTiles
                             53 	.globl _wait_y_window
                             54 	.globl _set_sprite_regs_optimized
                             55 	.globl _clear_shadow_sprite_regs
                             56 	.globl _LoadingIcon_Load
                             57 	.globl _LoadingIcon_Enable
                             58 	.globl _LoadingIcon_LoadSprites
                             59 	.globl _ChunkLoader_IsDone
                             60 	.globl _ChunkLoader_LoadChunk
                             61 	.globl _ChunkLoader_Init
                             62 	.globl _GetR
                             63 	.globl _Sys_ClearIRQFlags
                             64 	.globl _Util_LoadPalette
                             65 	.globl _Math_IsBoxHitBox
                             66 	.globl _delay
                             67 	.globl _inportb
                             68 	.globl _cur_color
                             69 	.globl _bufModFileHeader
                             70 	.globl _pool_game_obj
                             71 	.globl _allocatedSpriteNumbers
                             72 	.globl _pool_sprites
                             73 	.globl _keyboard_input_map
                             74 	.globl _keyboard
                             75 	.globl _player2_input
                             76 	.globl _player1_input
                             77 	.globl _spr_reg
                             78 	.globl _cl
                             79 	.globl _request_exit
                             80 	.globl _buffer
                             81 	.globl _debug
                             82 	.globl _game
                             83 	.globl _gameMenu
                             84 	.globl _YouWinAnim
                             85 	.globl _ball1
                             86 	.globl _batB
                             87 	.globl _batA
                             88 	.globl _scoreB
                             89 	.globl _scoreA
                             90 	.globl _loadingIcon
                             91 	.globl _g_ownAnimObjConst
                             92 	.globl _own_sp
                             93 	.globl _GameObj_SetPos
                             94 	.globl _GameObj_SetInUse
                             95 	.globl _GameObj_GetInUse
                             96 	.globl _DiagMessage
                             97 	.globl _load_file_to_buffer
                             98 	.globl _diag__FLOS_FindFile
                             99 	.globl _diag__FLOS_ForceLoad
                            100 	.globl _DiskIO_BeginDiskOperation
                            101 	.globl _DiskIO_EndDiskOperation
                            102 	.globl _DiskIO_VisualizeDiskError
                            103 	.globl _initgraph
                            104 	.globl _clear_sprite_regs
                            105 	.globl _DrawBat
                            106 	.globl _DrawBall
                            107 	.globl _set_sprite_regs_hw
                            108 	.globl _set_sprite_regs
                            109 	.globl _load_sprites
                            110 	.globl _TileMap_Fill
                            111 	.globl _irq_handler
                            112 	.globl _install_irq_handler
                            113 	.globl _Joystick_GetInputForPlayer
                            114 	.globl _Joystick_CheckInputAutoSwith
                            115 	.globl _Joystick_CheckInputAutoSwithForPlayer
                            116 	.globl _Joystick_IsSecondJoyNeedToBeReaded
                            117 	.globl _PoolSprites_AllocateSpriteNumber
                            118 	.globl _PoolSprites_FreeAllSprites
                            119 	.globl _PoolGameObj_Init
                            120 	.globl _PoolGameObj_AllocateGameObjAnim
                            121 	.globl _PoolGameObj_AllocateGameObj
                            122 	.globl _PoolGameObj_AddObjToActiveObjects
                            123 	.globl _PoolGameObj_RemoveObjFromActiveObjects
                            124 	.globl _PoolGameObj_ApplyFuncMoveToObjects
                            125 	.globl _PoolGameObj_ApplyFuncDrawToObjects
                            126 	.globl _GameObjAnim_Move
                            127 	.globl _GameObjAnim_Draw
                            128 	.globl _GameObjAnim_init_animation
                            129 	.globl _GameObjAnim_Free
                            130 	.globl _GameObjScore_Move
                            131 	.globl _GameObjScore_Draw
                            132 	.globl _GameObjScore_draw_score
                            133 	.globl _GameObjScore_UpdateScore
                            134 	.globl _GameObjScore_Draw_PlayerRocketsIndicator
                            135 	.globl _GameObjRocket_Move
                            136 	.globl _GameObjRocket_CheckCollision
                            137 	.globl _GameObjRocket_Draw
                            138 	.globl _GameObjRocket_AllocateAnimationObj
                            139 	.globl _GameObjRocket_Free
                            140 	.globl _GameObjBat_Init
                            141 	.globl _GameObjBat_SetState
                            142 	.globl _GameObjBat_Move
                            143 	.globl _GameObjBat_MoveUp
                            144 	.globl _GameObjBat_MoveDown
                            145 	.globl _GameObjBat_Draw
                            146 	.globl _GameObjBat_Fire
                            147 	.globl _GameObjBat_IsCanFireWithRocket
                            148 	.globl _GameObjBat_state_handler
                            149 	.globl _GameObjBall_Init
                            150 	.globl _GameObjBall_SetState
                            151 	.globl _GameObjBall_Move
                            152 	.globl _GameObjBall_CheckCollision
                            153 	.globl _GameObjBall_Draw
                            154 	.globl _GameObjYouWin_Move
                            155 	.globl _GameObjYouWin_Draw
                            156 	.globl _GameObjYouWin_AllocateAnimObjects
                            157 	.globl _GameObjYouWin_SetState
                            158 	.globl _helper_GameObjYouWin_StartAnimation
                            159 	.globl _GameObjGameMenu_Init
                            160 	.globl _GameObjGameMenu_Move
                            161 	.globl _GameObjGameMenu_Draw
                            162 	.globl _ai_update
                            163 	.globl _Debug_Move
                            164 	.globl _Debug_Draw
                            165 	.globl _Game_Initialize
                            166 	.globl _Game_InitializeMenuGameObjects
                            167 	.globl _Game_InitializeLevelGameObjects
                            168 	.globl _Game_Movebat
                            169 	.globl _Game_InitLevelBegining
                            170 	.globl _Game_RequestSetState
                            171 	.globl _Game_SetState
                            172 	.globl _Game_LoadSinTable
                            173 	.globl _Game_MarkFrameTime
                            174 ;--------------------------------------------------------
                            175 ; special function registers
                            176 ;--------------------------------------------------------
                    0000    177 _io__sys_mem_select	=	0x0000
                    0002    178 _io__sys_keyboard_data	=	0x0002
                    0003    179 _io__sys_ps2_joy_control	=	0x0003
                    0005    180 _io__sys_joy_com_flags	=	0x0005
                    0001    181 _io__sys_irq_enable	=	0x0001
                    0002    182 _io__sys_clear_irq_flags	=	0x0002
                            183 ;--------------------------------------------------------
                            184 ;  ram data
                            185 ;--------------------------------------------------------
                            186 	.area _DATA
                    0200    187 _mm__vreg_xhws	=	0x0200
                    0201    188 _mm__vreg_vidctrl	=	0x0201
                    0202    189 _mm__vreg_window	=	0x0202
                    0203    190 _mm__vreg_yhws_bplcount	=	0x0203
                    0204    191 _mm__vreg_rasthi	=	0x0204
                    0206    192 _mm__vreg_vidpage	=	0x0206
                    0207    193 _mm__vreg_sprctrl	=	0x0207
                    0208    194 _mm__mult_write	=	0x0208
                    020A    195 _mm__mult_index	=	0x020a
                    020C    196 _mm__vreg_ext_vidctrl	=	0x020c
                    0700    197 _mm__vreg_read	=	0x0700
                    0704    198 _mm__mult_read	=	0x0704
                    0600    199 _mm__mult_table	=	0x0600
   0000                     200 _loadingIcon::
   0000                     201 	.ds 513
   0201                     202 _scoreA::
   0201                     203 	.ds 35
   0224                     204 _scoreB::
   0224                     205 	.ds 35
   0247                     206 _batA::
   0247                     207 	.ds 32
   0267                     208 _batB::
   0267                     209 	.ds 32
   0287                     210 _ball1::
   0287                     211 	.ds 32
   02A7                     212 _YouWinAnim::
   02A7                     213 	.ds 42
   02D1                     214 _gameMenu::
   02D1                     215 	.ds 23
   02E8                     216 _game::
   02E8                     217 	.ds 15
   02F7                     218 _debug::
   02F7                     219 	.ds 2
   02F9                     220 _buffer::
   02F9                     221 	.ds 33
   031A                     222 _request_exit::
   031A                     223 	.ds 1
   031B                     224 _cl::
   031B                     225 	.ds 16
   032B                     226 _spr_reg::
   032B                     227 	.ds 9
   0334                     228 _player1_input::
   0334                     229 	.ds 4
   0338                     230 _player2_input::
   0338                     231 	.ds 4
   033C                     232 _keyboard::
   033C                     233 	.ds 3
   033F                     234 _keyboard_input_map::
   033F                     235 	.ds 21
   0354                     236 _pool_sprites::
   0354                     237 	.ds 1
   0355                     238 _allocatedSpriteNumbers::
   0355                     239 	.ds 35
   0378                     240 _pool_game_obj::
   0378                     241 	.ds 693
   062D                     242 _bufModFileHeader::
   062D                     243 	.ds 1084
   0A69                     244 _btmp:
   0A69                     245 	.ds 1
   0A6A                     246 _wtmp:
   0A6A                     247 	.ds 2
   0A6C                     248 _Debug_Draw_counter_1_1:
   0A6C                     249 	.ds 2
   0A6E                     250 _Debug_Draw_corner_1_1:
   0A6E                     251 	.ds 1
   0A6F                     252 _Game_LoadStateData_tilesMenu_1_1:
   0A6F                     253 	.ds 12
   0A7B                     254 _Game_LoadStateData_tilesLevel_1_1:
   0A7B                     255 	.ds 8
   0A83                     256 _Game_LoadStateData_gameStateData_1_1:
   0A83                     257 	.ds 24
   0A9B                     258 _cur_color::
   0A9B                     259 	.ds 2
                            260 ;--------------------------------------------------------
                            261 ; overlayable items in  ram 
                            262 ;--------------------------------------------------------
                            263 	.area _OVERLAY
                            264 ;--------------------------------------------------------
                            265 ; external initialized ram data
                            266 ;--------------------------------------------------------
                            267 ;--------------------------------------------------------
                            268 ; global & static initialisations
                            269 ;--------------------------------------------------------
                            270 	.area _HOME
                            271 	.area _GSINIT
                            272 	.area _GSFINAL
                            273 	.area _GSINIT
                            274 ;debug.c:24: static short counter = 0;
   0000 FD 21r6Cs0A         275 	ld	iy,#_Debug_Draw_counter_1_1
   0004 FD 36 00 00         276 	ld	0 (iy),#0x00
   0008 FD 21r6Cs0A         277 	ld	iy,#_Debug_Draw_counter_1_1
   000C FD 36 01 00         278 	ld	1 (iy),#0x00
                            279 ;debug.c:25: static byte corner = 0;     // 0 = top left corner, 1 = right bottom corner of collision box
   0010 FD 21r6Es0A         280 	ld	iy,#_Debug_Draw_corner_1_1
   0014 FD 36 00 00         281 	ld	0 (iy),#0x00
                            282 ;pong.c:427: static LoadTilesDescription tilesMenu[] = {
   0018 21r6Fs0A            283 	ld	hl,#_Game_LoadStateData_tilesMenu_1_1
   001B 36r5D               284 	ld	(hl),#<__str_13
   001D 23                  285 	inc	hl
   001E 36s3D               286 	ld	(hl),#>__str_13
   0020 21r71s0A            287 	ld	hl, #_Game_LoadStateData_tilesMenu_1_1 + 2
   0023 36 00               288 	ld	(hl),#0x00
   0025 23                  289 	inc	hl
   0026 36 00               290 	ld	(hl),#0x00
   0028 21r73s0A            291 	ld	hl, #_Game_LoadStateData_tilesMenu_1_1 + 4
   002B 36r66               292 	ld	(hl),#<__str_14
   002D 23                  293 	inc	hl
   002E 36s3D               294 	ld	(hl),#>__str_14
   0030 21r74s0A            295 	ld	hl, #_Game_LoadStateData_tilesMenu_1_1 + 4+1
   0033 23                  296 	inc	hl
   0034 36 60               297 	ld	(hl),#0x60
   0036 23                  298 	inc	hl
   0037 36 01               299 	ld	(hl),#0x01
   0039 21r77s0A            300 	ld	hl, #_Game_LoadStateData_tilesMenu_1_1 + 8
   003C 36 00               301 	ld	(hl),#0x00
   003E 23                  302 	inc	hl
   003F 36 00               303 	ld	(hl),#0x00
   0041 21r78s0A            304 	ld	hl, #_Game_LoadStateData_tilesMenu_1_1 + 8+1
   0044 23                  305 	inc	hl
   0045 36 00               306 	ld	(hl),#0x00
   0047 23                  307 	inc	hl
   0048 36 00               308 	ld	(hl),#0x00
                            309 ;pong.c:431: static LoadTilesDescription tilesLevel[] = {
   004A 21r7Bs0A            310 	ld	hl,#_Game_LoadStateData_tilesLevel_1_1
   004D 36r72               311 	ld	(hl),#<__str_15
   004F 23                  312 	inc	hl
   0050 36s3D               313 	ld	(hl),#>__str_15
   0052 21r7Ds0A            314 	ld	hl, #_Game_LoadStateData_tilesLevel_1_1 + 2
   0055 36 00               315 	ld	(hl),#0x00
   0057 23                  316 	inc	hl
   0058 36 00               317 	ld	(hl),#0x00
   005A 21r7Fs0A            318 	ld	hl, #_Game_LoadStateData_tilesLevel_1_1 + 4
   005D 36 00               319 	ld	(hl),#0x00
   005F 23                  320 	inc	hl
   0060 36 00               321 	ld	(hl),#0x00
   0062 21r80s0A            322 	ld	hl, #_Game_LoadStateData_tilesLevel_1_1 + 4+1
   0065 23                  323 	inc	hl
   0066 36 00               324 	ld	(hl),#0x00
   0068 23                  325 	inc	hl
   0069 36 00               326 	ld	(hl),#0x00
                            327 ;pong.c:442: } gameStateData[] = {
   006B 21r83s0A            328 	ld	hl,#_Game_LoadStateData_gameStateData_1_1
   006E 36 01               329 	ld	(hl),#0x01
   0070 3E 03               330 	ld	a,#0x03
   0072 32r84s0A            331 	ld	(#_Game_LoadStateData_gameStateData_1_1 + 1),a
   0075 21r85s0A            332 	ld	hl, #_Game_LoadStateData_gameStateData_1_1 + 2
   0078 36r6F               333 	ld	(hl),#<_Game_LoadStateData_tilesMenu_1_1
   007A 23                  334 	inc	hl
   007B 36s0A               335 	ld	(hl),#>_Game_LoadStateData_tilesMenu_1_1
   007D 21r87s0A            336 	ld	hl, #_Game_LoadStateData_gameStateData_1_1 + 4
   0080 36r79               337 	ld	(hl),#<__str_16
   0082 23                  338 	inc	hl
   0083 36s3D               339 	ld	(hl),#>__str_16
   0085 21r89s0A            340 	ld	hl, #_Game_LoadStateData_gameStateData_1_1 + 6
   0088 36r86               341 	ld	(hl),#<__str_17
   008A 23                  342 	inc	hl
   008B 36s3D               343 	ld	(hl),#>__str_17
   008D 3E 01               344 	ld	a,#0x01
   008F 32r8Bs0A            345 	ld	(#_Game_LoadStateData_gameStateData_1_1 + 8),a
   0092 01r8Bs0A            346 	ld	bc,#_Game_LoadStateData_gameStateData_1_1 + 8
   0095 59                  347 	ld	e,c
   0096 50                  348 	ld	d,b
   0097 13                  349 	inc	de
   0098 3E 00               350 	ld	a,#0x00
   009A 12                  351 	ld	(de),a
   009B 59                  352 	ld	e,c
   009C 50                  353 	ld	d,b
   009D 13                  354 	inc	de
   009E 13                  355 	inc	de
   009F 6B                  356 	ld	l,e
   00A0 62                  357 	ld	h,d
   00A1 36r6F               358 	ld	(hl),#<_Game_LoadStateData_tilesMenu_1_1
   00A3 23                  359 	inc	hl
   00A4 36s0A               360 	ld	(hl),#>_Game_LoadStateData_tilesMenu_1_1
   00A6 21 04 00            361 	ld	hl,#0x0004
   00A9 09                  362 	add	hl,bc
   00AA 36r79               363 	ld	(hl),#<__str_16
   00AC 23                  364 	inc	hl
   00AD 36s3D               365 	ld	(hl),#>__str_16
   00AF 21 06 00            366 	ld	hl,#0x0006
   00B2 09                  367 	add	hl,bc
   00B3 36r86               368 	ld	(hl),#<__str_17
   00B5 23                  369 	inc	hl
   00B6 36s3D               370 	ld	(hl),#>__str_17
   00B8 3E 00               371 	ld	a,#0x00
   00BA 32r93s0A            372 	ld	(#_Game_LoadStateData_gameStateData_1_1 + 16),a
   00BD 01r93s0A            373 	ld	bc,#_Game_LoadStateData_gameStateData_1_1 + 16
   00C0 59                  374 	ld	e,c
   00C1 50                  375 	ld	d,b
   00C2 13                  376 	inc	de
   00C3 3E 01               377 	ld	a,#0x01
   00C5 12                  378 	ld	(de),a
   00C6 59                  379 	ld	e,c
   00C7 50                  380 	ld	d,b
   00C8 13                  381 	inc	de
   00C9 13                  382 	inc	de
   00CA 6B                  383 	ld	l,e
   00CB 62                  384 	ld	h,d
   00CC 36r7B               385 	ld	(hl),#<_Game_LoadStateData_tilesLevel_1_1
   00CE 23                  386 	inc	hl
   00CF 36s0A               387 	ld	(hl),#>_Game_LoadStateData_tilesLevel_1_1
   00D1 21 04 00            388 	ld	hl,#0x0004
   00D4 09                  389 	add	hl,bc
   00D5 5D                  390 	ld	e,l
   00D6 54                  391 	ld	d,h
   00D7 36r8F               392 	ld	(hl),#<__str_18
   00D9 23                  393 	inc	hl
   00DA 36s3D               394 	ld	(hl),#>__str_18
   00DC 21 06 00            395 	ld	hl,#0x0006
   00DF 09                  396 	add	hl,bc
   00E0 4D                  397 	ld	c,l
   00E1 44                  398 	ld	b,h
   00E2 36r9A               399 	ld	(hl),#<__str_19
   00E4 23                  400 	inc	hl
   00E5 36s3D               401 	ld	(hl),#>__str_19
                            402 ;pong.c:53: BOOL request_exit = FALSE;              // exit program request flag
   00E7 FD 21r1As03         403 	ld	iy,#_request_exit
   00EB FD 36 00 00         404 	ld	0 (iy),#0x00
                            405 ;keyboard.c:11: player_input player1_input = {FALSE, FALSE, FALSE, KEYBOARD};
   00EF 21r34s03            406 	ld	hl,#_player1_input
   00F2 36 00               407 	ld	(hl),#0x00
   00F4 3E 00               408 	ld	a,#0x00
   00F6 32r35s03            409 	ld	(#_player1_input + 1),a
   00F9 32r36s03            410 	ld	(#_player1_input + 2),a
   00FC 01r37s03            411 	ld	bc,#_player1_input + 3
   00FF 3E 00               412 	ld	a,#0x00
   0101 02                  413 	ld	(bc),a
                            414 ;keyboard.c:12: player_input player2_input = {FALSE, FALSE, FALSE, KEYBOARD};
   0102 21r38s03            415 	ld	hl,#_player2_input
   0105 36 00               416 	ld	(hl),#0x00
   0107 3E 00               417 	ld	a,#0x00
   0109 32r39s03            418 	ld	(#_player2_input + 1),a
   010C 32r3As03            419 	ld	(#_player2_input + 2),a
   010F 01r3Bs03            420 	ld	bc,#_player2_input + 3
   0112 3E 00               421 	ld	a,#0x00
   0114 02                  422 	ld	(bc),a
                            423 ;keyboard.c:31: keyboard_input_map_t keyboard_input_map[] = {
   0115 21r3Fs03            424 	ld	hl,#_keyboard_input_map
   0118 36 1C               425 	ld	(hl),#0x1C
   011A 21r40s03            426 	ld	hl, #_keyboard_input_map + 1
   011D 36r34               427 	ld	(hl),#<_player1_input
   011F 23                  428 	inc	hl
   0120 36s03               429 	ld	(hl),#>_player1_input
   0122 3E 1A               430 	ld	a,#0x1A
   0124 32r42s03            431 	ld	(#_keyboard_input_map + 3),a
   0127 01r43s03            432 	ld	bc,#_keyboard_input_map + 3+1
   012A 11r35s03            433 	ld	de,#_player1_input + 1
   012D 69                  434 	ld	l,c
   012E 60                  435 	ld	h,b
   012F 73                  436 	ld	(hl),e
   0130 23                  437 	inc	hl
   0131 72                  438 	ld	(hl),d
   0132 01r45s03            439 	ld	bc,#_keyboard_input_map + 6
   0135 3E 3B               440 	ld	a,#0x3B
   0137 02                  441 	ld	(bc),a
   0138 21r45s03            442 	ld	hl, #_keyboard_input_map + 6
   013B 23                  443 	inc	hl
   013C 36r38               444 	ld	(hl),#<_player2_input
   013E 23                  445 	inc	hl
   013F 36s03               446 	ld	(hl),#>_player2_input
   0141 3E 3A               447 	ld	a,#0x3A
   0143 32r48s03            448 	ld	(#_keyboard_input_map + 9),a
   0146 01r49s03            449 	ld	bc,#_keyboard_input_map + 9+1
   0149 11r39s03            450 	ld	de,#_player2_input + 1
   014C 69                  451 	ld	l,c
   014D 60                  452 	ld	h,b
   014E 73                  453 	ld	(hl),e
   014F 23                  454 	inc	hl
   0150 72                  455 	ld	(hl),d
   0151 3E 22               456 	ld	a,#0x22
   0153 32r4Bs03            457 	ld	(#_keyboard_input_map + 12),a
   0156 01r4Cs03            458 	ld	bc,#_keyboard_input_map + 12+1
   0159 11r36s03            459 	ld	de,#_player1_input + 2
   015C 69                  460 	ld	l,c
   015D 60                  461 	ld	h,b
   015E 73                  462 	ld	(hl),e
   015F 23                  463 	inc	hl
   0160 72                  464 	ld	(hl),d
   0161 3E 41               465 	ld	a,#0x41
   0163 32r4Es03            466 	ld	(#_keyboard_input_map + 15),a
   0166 01r4Fs03            467 	ld	bc,#_keyboard_input_map + 15+1
   0169 11r3As03            468 	ld	de,#_player2_input + 2
   016C 69                  469 	ld	l,c
   016D 60                  470 	ld	h,b
   016E 73                  471 	ld	(hl),e
   016F 23                  472 	inc	hl
   0170 72                  473 	ld	(hl),d
   0171 3E 4D               474 	ld	a,#0x4D
   0173 32r51s03            475 	ld	(#_keyboard_input_map + 18),a
   0176 01r52s03            476 	ld	bc,#_keyboard_input_map + 18+1
   0179 11rEDs02            477 	ld	de,#_game + 5
   017C 69                  478 	ld	l,c
   017D 60                  479 	ld	h,b
   017E 73                  480 	ld	(hl),e
   017F 23                  481 	inc	hl
   0180 72                  482 	ld	(hl),d
                            483 ;--------------------------------------------------------
                            484 ; Home
                            485 ;--------------------------------------------------------
                            486 	.area _HOME
                            487 	.area _HOME
                            488 ;--------------------------------------------------------
                            489 ; code
                            490 ;--------------------------------------------------------
                            491 	.area _CODE
                            492 ;obj_.h:35: void GameObj_SetPos(GameObj* this, int x, int y)
                            493 ;	---------------------------------
                            494 ; Function GameObj_SetPos
                            495 ; ---------------------------------
   0000                     496 _GameObj_SetPos_start::
   0000                     497 _GameObj_SetPos:
   0000 DD E5               498 	push	ix
   0002 DD 21 00 00         499 	ld	ix,#0
   0006 DD 39               500 	add	ix,sp
                            501 ;obj_.h:37: this->x = x;
   0008 DD 4E 04            502 	ld	c,4 (ix)
   000B DD 46 05            503 	ld	b,5 (ix)
   000E 69                  504 	ld	l,c
   000F 60                  505 	ld	h,b
   0010 23                  506 	inc	hl
   0011 DD 7E 06            507 	ld	a,6 (ix)
   0014 77                  508 	ld	(hl),a
   0015 23                  509 	inc	hl
   0016 DD 7E 07            510 	ld	a,7 (ix)
   0019 77                  511 	ld	(hl),a
                            512 ;obj_.h:38: this->y = y;
   001A 69                  513 	ld	l,c
   001B 60                  514 	ld	h,b
   001C 23                  515 	inc	hl
   001D 23                  516 	inc	hl
   001E 23                  517 	inc	hl
   001F DD 7E 08            518 	ld	a,8 (ix)
   0022 77                  519 	ld	(hl),a
   0023 23                  520 	inc	hl
   0024 DD 7E 09            521 	ld	a,9 (ix)
   0027 77                  522 	ld	(hl),a
   0028 DD E1               523 	pop	ix
   002A C9                  524 	ret
   002B                     525 _GameObj_SetPos_end::
   002B                     526 _own_sp:
   002B 80 6A               527 	.dw #0x6A80
                            528 ;obj_.h:42: void GameObj_SetInUse(GameObj* this, BOOL inUse)
                            529 ;	---------------------------------
                            530 ; Function GameObj_SetInUse
                            531 ; ---------------------------------
   002D                     532 _GameObj_SetInUse_start::
   002D                     533 _GameObj_SetInUse:
   002D DD E5               534 	push	ix
   002F DD 21 00 00         535 	ld	ix,#0
   0033 DD 39               536 	add	ix,sp
                            537 ;obj_.h:44: this->in_use = inUse;
   0035 DD 4E 04            538 	ld	c,4 (ix)
   0038 DD 46 05            539 	ld	b,5 (ix)
   003B C5                  540 	push	bc
   003C FD E1               541 	pop	iy
   003E DD 7E 06            542 	ld	a,6 (ix)
   0041 FD 77 00            543 	ld	(iy),a
   0044 DD E1               544 	pop	ix
   0046 C9                  545 	ret
   0047                     546 _GameObj_SetInUse_end::
                            547 ;obj_.h:47: BOOL GameObj_GetInUse(GameObj* this)
                            548 ;	---------------------------------
                            549 ; Function GameObj_GetInUse
                            550 ; ---------------------------------
   0047                     551 _GameObj_GetInUse_start::
   0047                     552 _GameObj_GetInUse:
   0047 DD E5               553 	push	ix
   0049 DD 21 00 00         554 	ld	ix,#0
   004D DD 39               555 	add	ix,sp
                            556 ;obj_.h:49: return this->in_use;
   004F DD 4E 04            557 	ld	c,4 (ix)
   0052 DD 46 05            558 	ld	b,5 (ix)
   0055 C5                  559 	push	bc
   0056 FD E1               560 	pop	iy
   0058 FD 4E 00            561 	ld	c,(iy)
   005B 69                  562 	ld	l,c
   005C DD E1               563 	pop	ix
   005E C9                  564 	ret
   005F                     565 _GameObj_GetInUse_end::
                            566 ;pong.c:67: char inportb(int a) {return a;}
                            567 ;	---------------------------------
                            568 ; Function inportb
                            569 ; ---------------------------------
   005F                     570 _inportb_start::
   005F                     571 _inportb:
   005F DD E5               572 	push	ix
   0061 DD 21 00 00         573 	ld	ix,#0
   0065 DD 39               574 	add	ix,sp
   0067 DD 6E 04            575 	ld	l,4 (ix)
   006A DD E1               576 	pop	ix
   006C C9                  577 	ret
   006D                     578 _inportb_end::
                            579 ;pong.c:68: void delay(int a) {a;}
                            580 ;	---------------------------------
                            581 ; Function delay
                            582 ; ---------------------------------
   006D                     583 _delay_start::
   006D                     584 _delay:
   006D DD E5               585 	push	ix
   006F DD 21 00 00         586 	ld	ix,#0
   0073 DD 39               587 	add	ix,sp
   0075 DD E1               588 	pop	ix
   0077 C9                  589 	ret
   0078                     590 _delay_end::
                            591 ;math.c:18: BOOL Math_IsBoxHitBox(const RECT* p1, const RECT* p2)
                            592 ;	---------------------------------
                            593 ; Function Math_IsBoxHitBox
                            594 ; ---------------------------------
   0078                     595 _Math_IsBoxHitBox_start::
   0078                     596 _Math_IsBoxHitBox:
   0078 DD E5               597 	push	ix
   007A DD 21 00 00         598 	ld	ix,#0
   007E DD 39               599 	add	ix,sp
   0080 21 EA FF            600 	ld	hl,#-22
   0083 39                  601 	add	hl,sp
   0084 F9                  602 	ld	sp,hl
                            603 ;math.c:25: left1 = p1->x;
   0085 DD 4E 04            604 	ld	c,4 (ix)
   0088 DD 46 05            605 	ld	b,5 (ix)
   008B 69                  606 	ld	l,c
   008C 60                  607 	ld	h,b
   008D 7E                  608 	ld	a,(hl)
   008E DD 77 FE            609 	ld	-2 (ix),a
   0091 23                  610 	inc	hl
   0092 7E                  611 	ld	a,(hl)
   0093 DD 77 FF            612 	ld	-1 (ix),a
   0096 DD 7E FE            613 	ld	a,-2 (ix)
   0099 DD 77 F0            614 	ld	-16 (ix),a
   009C DD 7E FF            615 	ld	a,-1 (ix)
   009F DD 77 F1            616 	ld	-15 (ix),a
                            617 ;math.c:26: left2 = p2->x;
   00A2 DD 7E 06            618 	ld	a,6 (ix)
   00A5 DD 77 EC            619 	ld	-20 (ix),a
   00A8 DD 7E 07            620 	ld	a,7 (ix)
   00AB DD 77 ED            621 	ld	-19 (ix),a
   00AE DD 6E EC            622 	ld	l,-20 (ix)
   00B1 DD 66 ED            623 	ld	h,-19 (ix)
   00B4 7E                  624 	ld	a,(hl)
   00B5 DD 77 FC            625 	ld	-4 (ix),a
   00B8 23                  626 	inc	hl
   00B9 7E                  627 	ld	a,(hl)
   00BA DD 77 FD            628 	ld	-3 (ix),a
   00BD DD 7E FC            629 	ld	a,-4 (ix)
   00C0 DD 77 EE            630 	ld	-18 (ix),a
   00C3 DD 7E FD            631 	ld	a,-3 (ix)
   00C6 DD 77 EF            632 	ld	-17 (ix),a
                            633 ;math.c:27: right1 = p1->x + p1->width;
   00C9 21 04 00            634 	ld	hl,#0x0004
   00CC 09                  635 	add	hl,bc
   00CD 5E                  636 	ld	e,(hl)
   00CE 23                  637 	inc	hl
   00CF 56                  638 	ld	d,(hl)
   00D0 DD 7E FE            639 	ld	a,-2 (ix)
   00D3 83                  640 	add	a,e
   00D4 5F                  641 	ld	e,a
   00D5 DD 7E FF            642 	ld	a,-1 (ix)
   00D8 8A                  643 	adc	a,d
   00D9 57                  644 	ld	d,a
   00DA DD 73 FA            645 	ld	-6 (ix),e
   00DD DD 72 FB            646 	ld	-5 (ix),d
                            647 ;math.c:28: right2 = p2->x + p2->width;
   00E0 DD 7E EC            648 	ld	a,-20 (ix)
   00E3 C6 04               649 	add	a,#0x04
   00E5 6F                  650 	ld	l, a
   00E6 DD 7E ED            651 	ld	a, -19 (ix)
   00E9 CE 00               652 	adc	a, #0x00
   00EB 67                  653 	ld	h,a
   00EC 5E                  654 	ld	e,(hl)
   00ED 23                  655 	inc	hl
   00EE 56                  656 	ld	d,(hl)
   00EF DD 7E FC            657 	ld	a,-4 (ix)
   00F2 83                  658 	add	a,e
   00F3 5F                  659 	ld	e,a
   00F4 DD 7E FD            660 	ld	a,-3 (ix)
   00F7 8A                  661 	adc	a,d
   00F8 57                  662 	ld	d,a
   00F9 DD 73 F8            663 	ld	-8 (ix),e
   00FC DD 72 F9            664 	ld	-7 (ix),d
                            665 ;math.c:29: top1 = p1->y;
   00FF 69                  666 	ld	l,c
   0100 60                  667 	ld	h,b
   0101 23                  668 	inc	hl
   0102 23                  669 	inc	hl
   0103 7E                  670 	ld	a,(hl)
   0104 DD 77 F6            671 	ld	-10 (ix),a
   0107 23                  672 	inc	hl
   0108 7E                  673 	ld	a,(hl)
   0109 DD 77 F7            674 	ld	-9 (ix),a
   010C DD 7E F6            675 	ld	a,-10 (ix)
   010F DD 77 EA            676 	ld	-22 (ix),a
   0112 DD 7E F7            677 	ld	a,-9 (ix)
   0115 DD 77 EB            678 	ld	-21 (ix),a
                            679 ;math.c:30: top2 = p2->y;
   0118 DD 5E EC            680 	ld	e,-20 (ix)
   011B DD 56 ED            681 	ld	d,-19 (ix)
   011E EB                  682 	ex	de,hl
   011F 23                  683 	inc	hl
   0120 23                  684 	inc	hl
   0121 7E                  685 	ld	a,(hl)
   0122 DD 77 F4            686 	ld	-12 (ix),a
   0125 23                  687 	inc	hl
   0126 7E                  688 	ld	a,(hl)
   0127 DD 77 F5            689 	ld	-11 (ix),a
   012A DD 5E F4            690 	ld	e,-12 (ix)
   012D DD 56 F5            691 	ld	d,-11 (ix)
                            692 ;math.c:31: bottom1 = p1->y + p1->height;
   0130 21 06 00            693 	ld	hl,#0x0006
   0133 09                  694 	add	hl,bc
   0134 4E                  695 	ld	c,(hl)
   0135 23                  696 	inc	hl
   0136 46                  697 	ld	b,(hl)
   0137 DD 7E F6            698 	ld	a,-10 (ix)
   013A 81                  699 	add	a,c
   013B 4F                  700 	ld	c,a
   013C DD 7E F7            701 	ld	a,-9 (ix)
   013F 88                  702 	adc	a,b
   0140 47                  703 	ld	b,a
   0141 DD 71 F2            704 	ld	-14 (ix),c
   0144 DD 70 F3            705 	ld	-13 (ix),b
                            706 ;math.c:32: bottom2 = p2->y + p2->height;
   0147 DD 7E EC            707 	ld	a,-20 (ix)
   014A C6 06               708 	add	a,#0x06
   014C 6F                  709 	ld	l, a
   014D DD 7E ED            710 	ld	a, -19 (ix)
   0150 CE 00               711 	adc	a, #0x00
   0152 67                  712 	ld	h,a
   0153 4E                  713 	ld	c,(hl)
   0154 23                  714 	inc	hl
   0155 46                  715 	ld	b,(hl)
   0156 DD 7E F4            716 	ld	a,-12 (ix)
   0159 81                  717 	add	a,c
   015A 4F                  718 	ld	c,a
   015B DD 7E F5            719 	ld	a,-11 (ix)
   015E 88                  720 	adc	a,b
   015F 47                  721 	ld	b,a
                            722 ;math.c:34: if (bottom1 < top2) return(FALSE);
   0160 DD 7E F2            723 	ld	a,-14 (ix)
   0163 93                  724 	sub	a,e
   0164 DD 7E F3            725 	ld	a,-13 (ix)
   0167 9A                  726 	sbc	a,d
   0168 F2r6Fs01            727 	jp	P,00102$
   016B 2E 00               728 	ld	l,#0x00
   016D 18 37               729 	jr	00109$
   016F                     730 00102$:
                            731 ;math.c:35: if (top1 > bottom2) return(FALSE);
   016F 79                  732 	ld	a,c
   0170 DD 96 EA            733 	sub	a,-22 (ix)
   0173 78                  734 	ld	a,b
   0174 DD 9E EB            735 	sbc	a,-21 (ix)
   0177 F2r7Es01            736 	jp	P,00104$
   017A 2E 00               737 	ld	l,#0x00
   017C 18 28               738 	jr	00109$
   017E                     739 00104$:
                            740 ;math.c:37: if (right1 < left2) return(FALSE);
   017E DD 7E FA            741 	ld	a,-6 (ix)
   0181 DD 96 EE            742 	sub	a,-18 (ix)
   0184 DD 7E FB            743 	ld	a,-5 (ix)
   0187 DD 9E EF            744 	sbc	a,-17 (ix)
   018A F2r91s01            745 	jp	P,00106$
   018D 2E 00               746 	ld	l,#0x00
   018F 18 15               747 	jr	00109$
   0191                     748 00106$:
                            749 ;math.c:38: if (left1 > right2) return(FALSE);
   0191 DD 7E F8            750 	ld	a,-8 (ix)
   0194 DD 96 F0            751 	sub	a,-16 (ix)
   0197 DD 7E F9            752 	ld	a,-7 (ix)
   019A DD 9E F1            753 	sbc	a,-15 (ix)
   019D F2rA4s01            754 	jp	P,00108$
   01A0 2E 00               755 	ld	l,#0x00
   01A2 18 02               756 	jr	00109$
   01A4                     757 00108$:
                            758 ;math.c:40: return(TRUE);
   01A4 2E 01               759 	ld	l,#0x01
   01A6                     760 00109$:
   01A6 DD F9               761 	ld	sp,ix
   01A8 DD E1               762 	pop	ix
   01AA C9                  763 	ret
   01AB                     764 _Math_IsBoxHitBox_end::
                            765 ;math.c:45: static inline word HW_MATH_MUL(word n1, word n2)
                            766 ;	---------------------------------
                            767 ; Function HW_MATH_MUL
                            768 ; ---------------------------------
   01AB                     769 _HW_MATH_MUL:
   01AB DD E5               770 	push	ix
   01AD DD 21 00 00         771 	ld	ix,#0
   01B1 DD 39               772 	add	ix,sp
                            773 ;math.c:48: mm__mult_table = n1;
   01B3 DD 7E 04            774 	ld	a,4 (ix)
   01B6 FD 21 00 06         775 	ld	iy,#_mm__mult_table
   01BA FD 77 00            776 	ld	0 (iy),a
   01BD DD 7E 05            777 	ld	a,5 (ix)
   01C0 FD 21 00 06         778 	ld	iy,#_mm__mult_table
   01C4 FD 77 01            779 	ld	1 (iy),a
                            780 ;math.c:49: mm__mult_index = 0;
   01C7 FD 21 0A 02         781 	ld	iy,#_mm__mult_index
   01CB FD 36 00 00         782 	ld	0 (iy),#0x00
                            783 ;math.c:50: mm__mult_write = n2;
   01CF DD 7E 06            784 	ld	a,6 (ix)
   01D2 FD 21 08 02         785 	ld	iy,#_mm__mult_write
   01D6 FD 77 00            786 	ld	0 (iy),a
   01D9 DD 7E 07            787 	ld	a,7 (ix)
   01DC FD 21 08 02         788 	ld	iy,#_mm__mult_write
   01E0 FD 77 01            789 	ld	1 (iy),a
                            790 ;math.c:52: a = mm__mult_read;
   01E3 2A 04 07            791 	ld	hl,(_mm__mult_read)
                            792 ;math.c:53: mm__mult_table = 0;     // restore sin table first entry
   01E6 FD 21 00 06         793 	ld	iy,#_mm__mult_table
   01EA FD 36 00 00         794 	ld	0 (iy),#0x00
   01EE FD 21 00 06         795 	ld	iy,#_mm__mult_table
   01F2 FD 36 01 00         796 	ld	1 (iy),#0x00
                            797 ;math.c:54: return a;
   01F6 DD E1               798 	pop	ix
   01F8 C9                  799 	ret
                            800 ;math.c:58: static inline word HW_SIN_MUL(byte angle, word n2)
                            801 ;	---------------------------------
                            802 ; Function HW_SIN_MUL
                            803 ; ---------------------------------
   01F9                     804 _HW_SIN_MUL:
   01F9 DD E5               805 	push	ix
   01FB DD 21 00 00         806 	ld	ix,#0
   01FF DD 39               807 	add	ix,sp
                            808 ;math.c:60: mm__mult_index = angle;
   0201 DD 7E 04            809 	ld	a,4 (ix)
   0204 FD 21 0A 02         810 	ld	iy,#_mm__mult_index
   0208 FD 77 00            811 	ld	0 (iy),a
                            812 ;math.c:61: mm__mult_write = n2;
   020B DD 7E 05            813 	ld	a,5 (ix)
   020E FD 21 08 02         814 	ld	iy,#_mm__mult_write
   0212 FD 77 00            815 	ld	0 (iy),a
   0215 DD 7E 06            816 	ld	a,6 (ix)
   0218 FD 21 08 02         817 	ld	iy,#_mm__mult_write
   021C FD 77 01            818 	ld	1 (iy),a
                            819 ;math.c:62: return mm__mult_read;
   021F 2A 04 07            820 	ld	hl,(_mm__mult_read)
   0222 DD E1               821 	pop	ix
   0224 C9                  822 	ret
                            823 ;util.c:5: void DiagMessage(char* pMsg, char* pFilename)
                            824 ;	---------------------------------
                            825 ; Function DiagMessage
                            826 ; ---------------------------------
   0225                     827 _DiagMessage_start::
   0225                     828 _DiagMessage:
   0225 DD E5               829 	push	ix
   0227 DD 21 00 00         830 	ld	ix,#0
   022B DD 39               831 	add	ix,sp
                            832 ;util.c:9: err = FLOS_GetLastError();
   022D CDr00s00            833 	call	_FLOS_GetLastError
   0230 4D                  834 	ld	c,l
                            835 ;util.c:11: if(game.isFLOSVideoMode) {
   0231 11rF1s02            836 	ld	de,#_game + 9
   0234 1A                  837 	ld	a,(de)
   0235 B7                  838 	or	a,a
   0236 28 45               839 	jr	Z,00103$
                            840 ;util.c:15: FLOS_PrintString(pMsg);
   0238 C5                  841 	push	bc
   0239 DD 6E 04            842 	ld	l,4 (ix)
   023C DD 66 05            843 	ld	h,5 (ix)
   023F E5                  844 	push	hl
   0240 CDr00s00            845 	call	_FLOS_PrintString
   0243 F1                  846 	pop	af
   0244 C1                  847 	pop	bc
                            848 ;util.c:16: FLOS_PrintString(pFilename);
   0245 C5                  849 	push	bc
   0246 DD 6E 06            850 	ld	l,6 (ix)
   0249 DD 66 07            851 	ld	h,7 (ix)
   024C E5                  852 	push	hl
   024D CDr00s00            853 	call	_FLOS_PrintString
   0250 F1                  854 	pop	af
   0251 C1                  855 	pop	bc
                            856 ;util.c:18: FLOS_PrintString(" OS_err: $");
   0252 C5                  857 	push	bc
   0253 21r80s02            858 	ld	hl,#__str_0
   0256 E5                  859 	push	hl
   0257 CDr00s00            860 	call	_FLOS_PrintString
   025A F1                  861 	pop	af
   025B C1                  862 	pop	bc
                            863 ;util.c:19: _uitoa(err, buffer, 16);
   025C 06 00               864 	ld	b,#0x00
   025E 3E 10               865 	ld	a,#0x10
   0260 F5                  866 	push	af
   0261 33                  867 	inc	sp
   0262 21rF9s02            868 	ld	hl,#_buffer
   0265 E5                  869 	push	hl
   0266 C5                  870 	push	bc
   0267 CDr00s00            871 	call	__uitoa
   026A F1                  872 	pop	af
   026B F1                  873 	pop	af
   026C 33                  874 	inc	sp
                            875 ;util.c:20: FLOS_PrintString(buffer);
   026D 21rF9s02            876 	ld	hl,#_buffer
   0270 E5                  877 	push	hl
   0271 CDr00s00            878 	call	_FLOS_PrintString
   0274 F1                  879 	pop	af
                            880 ;util.c:21: FLOS_PrintString(PS_LFCR);
   0275 21r8Bs02            881 	ld	hl,#__str_1
   0278 E5                  882 	push	hl
   0279 CDr00s00            883 	call	_FLOS_PrintString
   027C F1                  884 	pop	af
   027D                     885 00103$:
   027D DD E1               886 	pop	ix
   027F C9                  887 	ret
   0280                     888 _DiagMessage_end::
   0280                     889 __str_0:
   0280 20 4F 53 5F 65 72   890 	.ascii " OS_err: $"
        72 3A 20 24
   028A 00                  891 	.db 0x00
   028B                     892 __str_1:
   028B 0B                  893 	.db 0x0B
   028C 00                  894 	.db 0x00
                            895 ;util.c:28: BOOL Util_LoadPalette(const char* pFilename)
                            896 ;	---------------------------------
                            897 ; Function Util_LoadPalette
                            898 ; ---------------------------------
   028D                     899 _Util_LoadPalette_start::
   028D                     900 _Util_LoadPalette:
   028D DD E5               901 	push	ix
   028F DD 21 00 00         902 	ld	ix,#0
   0293 DD 39               903 	add	ix,sp
                            904 ;util.c:31: if(!load_file_to_buffer(pFilename, 0, (byte*)0x0000, 0x200, 0))
   0295 3E 00               905 	ld	a,#0x00
   0297 F5                  906 	push	af
   0298 33                  907 	inc	sp
   0299 21 00 00            908 	ld	hl,#0x0000
   029C E5                  909 	push	hl
   029D 21 00 02            910 	ld	hl,#0x0200
   02A0 E5                  911 	push	hl
   02A1 26 00               912 	ld	h, #0x00
   02A3 E5                  913 	push	hl
   02A4 21 00 00            914 	ld	hl,#0x0000
   02A7 E5                  915 	push	hl
   02A8 21 00 00            916 	ld	hl,#0x0000
   02AB E5                  917 	push	hl
   02AC DD 6E 04            918 	ld	l,4 (ix)
   02AF DD 66 05            919 	ld	h,5 (ix)
   02B2 E5                  920 	push	hl
   02B3 CDrECs02            921 	call	_load_file_to_buffer
   02B6 FD 21 0D 00         922 	ld	iy,#0x000D
   02BA FD 39               923 	add	iy,sp
   02BC FD F9               924 	ld	sp,iy
                            925 ;util.c:32: return FALSE;
   02BE AF                  926 	xor	a,a
   02BF B5                  927 	or	a,l
   02C0 20 03               928 	jr	NZ,00102$
   02C2 6F                  929 	ld	l,a
   02C3 18 0E               930 	jr	00103$
   02C5                     931 00102$:
                            932 ;util.c:34: *((ushort*)PALETTE) = 0;
   02C5 FD 21 00 00         933 	ld	iy,#0x0000
   02C9 FD 36 00 00         934 	ld	0 (iy),#0x00
   02CD FD 36 01 00         935 	ld	1 (iy),#0x00
                            936 ;util.c:35: return TRUE;
   02D1 2E 01               937 	ld	l,#0x01
   02D3                     938 00103$:
   02D3 DD E1               939 	pop	ix
   02D5 C9                  940 	ret
   02D6                     941 _Util_LoadPalette_end::
                            942 ;util.c:40: void Sys_ClearIRQFlags(byte flags)
                            943 ;	---------------------------------
                            944 ; Function Sys_ClearIRQFlags
                            945 ; ---------------------------------
   02D6                     946 _Sys_ClearIRQFlags_start::
   02D6                     947 _Sys_ClearIRQFlags:
   02D6 DD E5               948 	push	ix
   02D8 DD 21 00 00         949 	ld	ix,#0
   02DC DD 39               950 	add	ix,sp
                            951 ;util.c:42: io__sys_clear_irq_flags = flags;
   02DE DD 7E 04            952 	ld	a,4 (ix)
   02E1 D3 02               953 	out	(_io__sys_clear_irq_flags),a
   02E3 DD E1               954 	pop	ix
   02E5 C9                  955 	ret
   02E6                     956 _Sys_ClearIRQFlags_end::
                            957 ;util.c:46: byte GetR(void)  __naked
                            958 ;	---------------------------------
                            959 ; Function GetR
                            960 ; ---------------------------------
   02E6                     961 _GetR_start::
   02E6                     962 _GetR:
                            963 ;util.c:54: __endasm;
                            964 ;
   02E6 F5                  965 		   push af
   02E7 ED 5F               966 		   ld a,r
   02E9 6F                  967 		   ld l,a
   02EA F1                  968 		   pop af
   02EB C9                  969 		   ret
                            970 		   
                            971 ;disk_io.c:3: BOOL load_file_to_buffer(char *pFilename, dword file_offset, byte* buf, dword len, byte bank)
                            972 ;	---------------------------------
                            973 ; Function load_file_to_buffer
                            974 ; ---------------------------------
   02EC                     975 _load_file_to_buffer_start::
   02EC                     976 _load_file_to_buffer:
   02EC DD E5               977 	push	ix
   02EE DD 21 00 00         978 	ld	ix,#0
   02F2 DD 39               979 	add	ix,sp
   02F4 21 F9 FF            980 	ld	hl,#-7
   02F7 39                  981 	add	hl,sp
   02F8 F9                  982 	ld	sp,hl
                            983 ;disk_io.c:8: r = diag__FLOS_FindFile(&myFile, pFilename);
   02F9 21 00 00            984 	ld	hl,#0x0000
   02FC 39                  985 	add	hl,sp
   02FD 4D                  986 	ld	c,l
   02FE 44                  987 	ld	b,h
   02FF DD 6E 04            988 	ld	l,4 (ix)
   0302 DD 66 05            989 	ld	h,5 (ix)
   0305 E5                  990 	push	hl
   0306 C5                  991 	push	bc
   0307 CDr5As03            992 	call	_diag__FLOS_FindFile
   030A F1                  993 	pop	af
   030B F1                  994 	pop	af
                            995 ;disk_io.c:9: if(!r) {
                            996 ;disk_io.c:11: return FALSE;
   030C AF                  997 	xor	a,a
   030D B5                  998 	or	a,l
   030E 20 03               999 	jr	NZ,00102$
   0310 6F                 1000 	ld	l,a
   0311 18 42              1001 	jr	00105$
   0313                    1002 00102$:
                           1003 ;disk_io.c:14: FLOS_SetLoadLength(len);
   0313 DD 6E 0E           1004 	ld	l,14 (ix)
   0316 DD 66 0F           1005 	ld	h,15 (ix)
   0319 E5                 1006 	push	hl
   031A DD 6E 0C           1007 	ld	l,12 (ix)
   031D DD 66 0D           1008 	ld	h,13 (ix)
   0320 E5                 1009 	push	hl
   0321 CDr00s00           1010 	call	_FLOS_SetLoadLength
   0324 F1                 1011 	pop	af
   0325 F1                 1012 	pop	af
                           1013 ;disk_io.c:15: FLOS_SetFilePointer(file_offset);
   0326 DD 6E 08           1014 	ld	l,8 (ix)
   0329 DD 66 09           1015 	ld	h,9 (ix)
   032C E5                 1016 	push	hl
   032D DD 6E 06           1017 	ld	l,6 (ix)
   0330 DD 66 07           1018 	ld	h,7 (ix)
   0333 E5                 1019 	push	hl
   0334 CDr00s00           1020 	call	_FLOS_SetFilePointer
   0337 F1                 1021 	pop	af
   0338 F1                 1022 	pop	af
                           1023 ;disk_io.c:17: r = diag__FLOS_ForceLoad( buf, bank );
   0339 DD 7E 10           1024 	ld	a,16 (ix)
   033C F5                 1025 	push	af
   033D 33                 1026 	inc	sp
   033E DD 6E 0A           1027 	ld	l,10 (ix)
   0341 DD 66 0B           1028 	ld	h,11 (ix)
   0344 E5                 1029 	push	hl
   0345 CDrB1s03           1030 	call	_diag__FLOS_ForceLoad
   0348 F1                 1031 	pop	af
   0349 33                 1032 	inc	sp
   034A 45                 1033 	ld	b,l
   034B 48                 1034 	ld	c,b
                           1035 ;disk_io.c:18: if(!r) {
   034C AF                 1036 	xor	a,a
                           1037 ;disk_io.c:20: return FALSE;
   034D B1                 1038 	or	a,c
   034E 20 03              1039 	jr	NZ,00104$
   0350 6F                 1040 	ld	l,a
   0351 18 02              1041 	jr	00105$
   0353                    1042 00104$:
                           1043 ;disk_io.c:23: return TRUE;
   0353 2E 01              1044 	ld	l,#0x01
   0355                    1045 00105$:
   0355 DD F9              1046 	ld	sp,ix
   0357 DD E1              1047 	pop	ix
   0359 C9                 1048 	ret
   035A                    1049 _load_file_to_buffer_end::
                           1050 ;disk_io.c:28: BOOL diag__FLOS_FindFile(FLOS_FILE* const pFile, const char* pFilename)
                           1051 ;	---------------------------------
                           1052 ; Function diag__FLOS_FindFile
                           1053 ; ---------------------------------
   035A                    1054 _diag__FLOS_FindFile_start::
   035A                    1055 _diag__FLOS_FindFile:
   035A DD E5              1056 	push	ix
   035C DD 21 00 00        1057 	ld	ix,#0
   0360 DD 39              1058 	add	ix,sp
                           1059 ;disk_io.c:32: BEGIN_DISK_OPERATION();
   0362 CDrC6s05           1060 	call	_DiskIO_BeginDiskOperation
                           1061 ;disk_io.c:33: r = FLOS_FindFile(pFile, pFilename);
   0365 DD 6E 06           1062 	ld	l,6 (ix)
   0368 DD 66 07           1063 	ld	h,7 (ix)
   036B E5                 1064 	push	hl
   036C DD 6E 04           1065 	ld	l,4 (ix)
   036F DD 66 05           1066 	ld	h,5 (ix)
   0372 E5                 1067 	push	hl
   0373 CDr00s00           1068 	call	_FLOS_FindFile
   0376 F1                 1069 	pop	af
   0377 F1                 1070 	pop	af
   0378 4D                 1071 	ld	c,l
                           1072 ;disk_io.c:34: END_DISK_OPERATION(r);
   0379 C5                 1073 	push	bc
   037A 79                 1074 	ld	a,c
   037B F5                 1075 	push	af
   037C 33                 1076 	inc	sp
   037D CDrC8s05           1077 	call	_DiskIO_EndDiskOperation
   0380 33                 1078 	inc	sp
   0381 C1                 1079 	pop	bc
                           1080 ;disk_io.c:35: if(!r) {
   0382 AF                 1081 	xor	a,a
   0383 B1                 1082 	or	a,c
   0384 20 14              1083 	jr	NZ,00102$
                           1084 ;disk_io.c:36: DiagMessage("FindFile failed: ", pFilename);
   0386 DD 6E 06           1085 	ld	l,6 (ix)
   0389 DD 66 07           1086 	ld	h,7 (ix)
   038C E5                 1087 	push	hl
   038D 21r9Fs03           1088 	ld	hl,#__str_2
   0390 E5                 1089 	push	hl
   0391 CDr25s02           1090 	call	_DiagMessage
   0394 F1                 1091 	pop	af
   0395 F1                 1092 	pop	af
                           1093 ;disk_io.c:37: return FALSE;
   0396 2E 00              1094 	ld	l,#0x00
   0398 18 02              1095 	jr	00103$
   039A                    1096 00102$:
                           1097 ;disk_io.c:40: return TRUE;
   039A 2E 01              1098 	ld	l,#0x01
   039C                    1099 00103$:
   039C DD E1              1100 	pop	ix
   039E C9                 1101 	ret
   039F                    1102 _diag__FLOS_FindFile_end::
   039F                    1103 __str_2:
   039F 46 69 6E 64 46 69  1104 	.ascii "FindFile failed: "
        6C 65 20 66 61 69
        6C 65 64 3A 20
   03B0 00                 1105 	.db 0x00
                           1106 ;disk_io.c:43: BOOL diag__FLOS_ForceLoad(const byte* address, const byte bank)
                           1107 ;	---------------------------------
                           1108 ; Function diag__FLOS_ForceLoad
                           1109 ; ---------------------------------
   03B1                    1110 _diag__FLOS_ForceLoad_start::
   03B1                    1111 _diag__FLOS_ForceLoad:
   03B1 DD E5              1112 	push	ix
   03B3 DD 21 00 00        1113 	ld	ix,#0
   03B7 DD 39              1114 	add	ix,sp
                           1115 ;disk_io.c:47: BEGIN_DISK_OPERATION();
   03B9 CDrC6s05           1116 	call	_DiskIO_BeginDiskOperation
                           1117 ;disk_io.c:48: r = FLOS_ForceLoad(address, bank);
   03BC DD 7E 06           1118 	ld	a,6 (ix)
   03BF F5                 1119 	push	af
   03C0 33                 1120 	inc	sp
   03C1 DD 6E 04           1121 	ld	l,4 (ix)
   03C4 DD 66 05           1122 	ld	h,5 (ix)
   03C7 E5                 1123 	push	hl
   03C8 CDr00s00           1124 	call	_FLOS_ForceLoad
   03CB F1                 1125 	pop	af
   03CC 33                 1126 	inc	sp
   03CD 4D                 1127 	ld	c,l
                           1128 ;disk_io.c:49: END_DISK_OPERATION(r);
   03CE C5                 1129 	push	bc
   03CF 79                 1130 	ld	a,c
   03D0 F5                 1131 	push	af
   03D1 33                 1132 	inc	sp
   03D2 CDrC8s05           1133 	call	_DiskIO_EndDiskOperation
   03D5 33                 1134 	inc	sp
   03D6 C1                 1135 	pop	bc
                           1136 ;disk_io.c:50: if(!r) {
   03D7 AF                 1137 	xor	a,a
   03D8 B1                 1138 	or	a,c
   03D9 20 11              1139 	jr	NZ,00102$
                           1140 ;disk_io.c:51: DiagMessage("ForceLoad failed: ", "");
   03DB 21r04s04           1141 	ld	hl,#__str_4
   03DE E5                 1142 	push	hl
   03DF 21rF1s03           1143 	ld	hl,#__str_3
   03E2 E5                 1144 	push	hl
   03E3 CDr25s02           1145 	call	_DiagMessage
   03E6 F1                 1146 	pop	af
   03E7 F1                 1147 	pop	af
                           1148 ;disk_io.c:52: return FALSE;
   03E8 2E 00              1149 	ld	l,#0x00
   03EA 18 02              1150 	jr	00103$
   03EC                    1151 00102$:
                           1152 ;disk_io.c:55: return TRUE;
   03EC 2E 01              1153 	ld	l,#0x01
   03EE                    1154 00103$:
   03EE DD E1              1155 	pop	ix
   03F0 C9                 1156 	ret
   03F1                    1157 _diag__FLOS_ForceLoad_end::
   03F1                    1158 __str_3:
   03F1 46 6F 72 63 65 4C  1159 	.ascii "ForceLoad failed: "
        6F 61 64 20 66 61
        69 6C 65 64 3A 20
   0403 00                 1160 	.db 0x00
   0404                    1161 __str_4:
   0404 00                 1162 	.db 0x00
                           1163 ;disk_io.c:73: void ChunkLoader_Init(char* pFilename, /*FLOS_FILE* file,*/ byte* buf, byte bank)
                           1164 ;	---------------------------------
                           1165 ; Function ChunkLoader_Init
                           1166 ; ---------------------------------
   0405                    1167 _ChunkLoader_Init_start::
   0405                    1168 _ChunkLoader_Init:
   0405 DD E5              1169 	push	ix
   0407 DD 21 00 00        1170 	ld	ix,#0
   040B DD 39              1171 	add	ix,sp
                           1172 ;disk_io.c:75: cl.pFilename = pFilename;
   040D 21r1Bs03           1173 	ld	hl,#_cl
   0410 DD 7E 04           1174 	ld	a,4 (ix)
   0413 77                 1175 	ld	(hl),a
   0414 23                 1176 	inc	hl
   0415 DD 7E 05           1177 	ld	a,5 (ix)
   0418 77                 1178 	ld	(hl),a
                           1179 ;disk_io.c:77: cl.buf       = buf;
   0419 21r24s03           1180 	ld	hl, #_cl + 9
   041C DD 7E 06           1181 	ld	a,6 (ix)
   041F 77                 1182 	ld	(hl),a
   0420 23                 1183 	inc	hl
   0421 DD 7E 07           1184 	ld	a,7 (ix)
   0424 77                 1185 	ld	(hl),a
                           1186 ;disk_io.c:78: cl.bank      = bank;
   0425 01r26s03           1187 	ld	bc,#_cl + 11
   0428 DD 7E 08           1188 	ld	a,8 (ix)
   042B 02                 1189 	ld	(bc),a
                           1190 ;disk_io.c:80: cl.file.size   = -1;        // set -1 as "first chunk load" marker
   042C 01r1Fs03           1191 	ld	bc,#_cl + 2+1+1
   042F 69                 1192 	ld	l,c
   0430 60                 1193 	ld	h,b
   0431 23                 1194 	inc	hl
   0432 36 FF              1195 	ld	(hl),#0xFF
   0434 23                 1196 	inc	hl
   0435 36 FF              1197 	ld	(hl),#0xFF
   0437 23                 1198 	inc	hl
   0438 36 FF              1199 	ld	(hl),#0xFF
   043A 23                 1200 	inc	hl
   043B 36 FF              1201 	ld	(hl),#0xFF
                           1202 ;disk_io.c:81: cl.file_offset = 0;
   043D 21r27s03           1203 	ld	hl, #_cl + 12
   0440 36 00              1204 	ld	(hl),#0x00
   0442 23                 1205 	inc	hl
   0443 36 00              1206 	ld	(hl),#0x00
   0445 23                 1207 	inc	hl
   0446 36 00              1208 	ld	(hl),#0x00
   0448 23                 1209 	inc	hl
   0449 36 00              1210 	ld	(hl),#0x00
   044B DD E1              1211 	pop	ix
   044D C9                 1212 	ret
   044E                    1213 _ChunkLoader_Init_end::
                           1214 ;disk_io.c:86: BOOL ChunkLoader_LoadChunk(void)
                           1215 ;	---------------------------------
                           1216 ; Function ChunkLoader_LoadChunk
                           1217 ; ---------------------------------
   044E                    1218 _ChunkLoader_LoadChunk_start::
   044E                    1219 _ChunkLoader_LoadChunk:
   044E DD E5              1220 	push	ix
   0450 DD 21 00 00        1221 	ld	ix,#0
   0454 DD 39              1222 	add	ix,sp
   0456 21 F4 FF           1223 	ld	hl,#-12
   0459 39                 1224 	add	hl,sp
   045A F9                 1225 	ld	sp,hl
                           1226 ;disk_io.c:91: if(cl.file.size == -1) {
   045B 21r1Fs03           1227 	ld	hl, #_cl + 2+1+1
   045E 23                 1228 	inc	hl
   045F 4E                 1229 	ld	c,(hl)
   0460 23                 1230 	inc	hl
   0461 46                 1231 	ld	b,(hl)
   0462 23                 1232 	inc	hl
   0463 5E                 1233 	ld	e,(hl)
   0464 23                 1234 	inc	hl
   0465 56                 1235 	ld	d,(hl)
   0466 79                 1236 	ld	a,c
   0467 3C                 1237 	inc	a
   0468 20 0C              1238 	jr	NZ,00115$
   046A 78                 1239 	ld	a,b
   046B 3C                 1240 	inc	a
   046C 20 08              1241 	jr	NZ,00115$
   046E 7B                 1242 	ld	a,e
   046F 3C                 1243 	inc	a
   0470 20 04              1244 	jr	NZ,00115$
   0472 7A                 1245 	ld	a,d
   0473 3C                 1246 	inc	a
   0474 28 02              1247 	jr	Z,00116$
   0476                    1248 00115$:
   0476 18 19              1249 	jr	00104$
   0478                    1250 00116$:
                           1251 ;disk_io.c:92: if(!diag__FLOS_FindFile(&cl.file, cl.pFilename))
   0478 21r1Bs03           1252 	ld	hl,#_cl
   047B 4E                 1253 	ld	c,(hl)
   047C 23                 1254 	inc	hl
   047D 46                 1255 	ld	b,(hl)
   047E 11r1Ds03           1256 	ld	de,#_cl + 2
   0481 C5                 1257 	push	bc
   0482 D5                 1258 	push	de
   0483 CDr5As03           1259 	call	_diag__FLOS_FindFile
   0486 F1                 1260 	pop	af
   0487 F1                 1261 	pop	af
                           1262 ;disk_io.c:93: return FALSE;
   0488 4D                 1263 	ld	c,l
   0489 AF                 1264 	xor	a,a
   048A B5                 1265 	or	a,l
   048B 20 04              1266 	jr	NZ,00104$
   048D 6F                 1267 	ld	l,a
   048E C3r77s05           1268 	jp	00107$
   0491                    1269 00104$:
                           1270 ;disk_io.c:97: (cl.file_offset+0x1000 <  cl.file.size) ?  (num_bytes = 0x1000) :  (num_bytes = cl.file.size - cl.file_offset);
   0491 21r27s03           1271 	ld	hl, #_cl + 12
   0494 7E                 1272 	ld	a,(hl)
   0495 DD 77 F8           1273 	ld	-8 (ix),a
   0498 23                 1274 	inc	hl
   0499 7E                 1275 	ld	a,(hl)
   049A DD 77 F9           1276 	ld	-7 (ix),a
   049D 23                 1277 	inc	hl
   049E 7E                 1278 	ld	a,(hl)
   049F DD 77 FA           1279 	ld	-6 (ix),a
   04A2 23                 1280 	inc	hl
   04A3 7E                 1281 	ld	a,(hl)
   04A4 DD 77 FB           1282 	ld	-5 (ix),a
   04A7 DD 7E F8           1283 	ld	a,-8 (ix)
   04AA C6 00              1284 	add	a,#0x00
   04AC DD 77 F4           1285 	ld	-12 (ix),a
   04AF DD 7E F9           1286 	ld	a,-7 (ix)
   04B2 CE 10              1287 	adc	a,#0x10
   04B4 DD 77 F5           1288 	ld	-11 (ix),a
   04B7 DD 7E FA           1289 	ld	a,-6 (ix)
   04BA CE 00              1290 	adc	a,#0x00
   04BC DD 77 F6           1291 	ld	-10 (ix),a
   04BF DD 7E FB           1292 	ld	a,-5 (ix)
   04C2 CE 00              1293 	adc	a,#0x00
   04C4 DD 77 F7           1294 	ld	-9 (ix),a
   04C7 21r1Fs03           1295 	ld	hl, #_cl + 2+1+1
   04CA 23                 1296 	inc	hl
   04CB 4E                 1297 	ld	c,(hl)
   04CC 23                 1298 	inc	hl
   04CD 46                 1299 	ld	b,(hl)
   04CE 23                 1300 	inc	hl
   04CF 5E                 1301 	ld	e,(hl)
   04D0 23                 1302 	inc	hl
   04D1 56                 1303 	ld	d,(hl)
   04D2 DD 7E F4           1304 	ld	a,-12 (ix)
   04D5 91                 1305 	sub	a,c
   04D6 DD 7E F5           1306 	ld	a,-11 (ix)
   04D9 98                 1307 	sbc	a,b
   04DA DD 7E F6           1308 	ld	a,-10 (ix)
   04DD 9B                 1309 	sbc	a,e
   04DE DD 7E F7           1310 	ld	a,-9 (ix)
   04E1 9A                 1311 	sbc	a,d
   04E2 30 12              1312 	jr	NC,00109$
   04E4 DD 36 FC 00        1313 	ld	-4 (ix),#0x00
   04E8 DD 36 FD 10        1314 	ld	-3 (ix),#0x10
   04EC DD 36 FE 00        1315 	ld	-2 (ix),#0x00
   04F0 DD 36 FF 00        1316 	ld	-1 (ix),#0x00
   04F4 18 20              1317 	jr	00110$
   04F6                    1318 00109$:
   04F6 79                 1319 	ld	a,c
   04F7 DD 96 F8           1320 	sub	a,-8 (ix)
   04FA 4F                 1321 	ld	c,a
   04FB 78                 1322 	ld	a,b
   04FC DD 9E F9           1323 	sbc	a,-7 (ix)
   04FF 47                 1324 	ld	b,a
   0500 7B                 1325 	ld	a,e
   0501 DD 9E FA           1326 	sbc	a,-6 (ix)
   0504 5F                 1327 	ld	e,a
   0505 7A                 1328 	ld	a,d
   0506 DD 9E FB           1329 	sbc	a,-5 (ix)
   0509 57                 1330 	ld	d,a
   050A DD 71 FC           1331 	ld	-4 (ix),c
   050D DD 70 FD           1332 	ld	-3 (ix),b
   0510 DD 73 FE           1333 	ld	-2 (ix),e
   0513 DD 72 FF           1334 	ld	-1 (ix),d
   0516                    1335 00110$:
                           1336 ;disk_io.c:99: FLOS_SetLoadLength(num_bytes);
   0516 DD 6E FE           1337 	ld	l,-2 (ix)
   0519 DD 66 FF           1338 	ld	h,-1 (ix)
   051C E5                 1339 	push	hl
   051D DD 6E FC           1340 	ld	l,-4 (ix)
   0520 DD 66 FD           1341 	ld	h,-3 (ix)
   0523 E5                 1342 	push	hl
   0524 CDr00s00           1343 	call	_FLOS_SetLoadLength
   0527 F1                 1344 	pop	af
   0528 F1                 1345 	pop	af
                           1346 ;disk_io.c:100: if(!diag__FLOS_ForceLoad(cl.buf, cl.bank))
   0529 21r26s03           1347 	ld	hl,#_cl + 11
   052C 4E                 1348 	ld	c,(hl)
   052D 11r24s03           1349 	ld	de,#_cl + 9
   0530 EB                 1350 	ex	de,hl
   0531 5E                 1351 	ld	e,(hl)
   0532 23                 1352 	inc	hl
   0533 56                 1353 	ld	d,(hl)
   0534 79                 1354 	ld	a,c
   0535 F5                 1355 	push	af
   0536 33                 1356 	inc	sp
   0537 D5                 1357 	push	de
   0538 CDrB1s03           1358 	call	_diag__FLOS_ForceLoad
   053B F1                 1359 	pop	af
   053C 33                 1360 	inc	sp
                           1361 ;disk_io.c:101: return FALSE;
   053D AF                 1362 	xor	a,a
   053E B5                 1363 	or	a,l
   053F 20 03              1364 	jr	NZ,00106$
   0541 6F                 1365 	ld	l,a
   0542 18 33              1366 	jr	00107$
   0544                    1367 00106$:
                           1368 ;disk_io.c:103: cl.file_offset  += num_bytes;
   0544 21r27s03           1369 	ld	hl,#_cl + 12
   0547 DD 75 F4           1370 	ld	-12 (ix),l
   054A DD 74 F5           1371 	ld	-11 (ix),h
   054D 5E                 1372 	ld	e,(hl)
   054E 23                 1373 	inc	hl
   054F 56                 1374 	ld	d,(hl)
   0550 23                 1375 	inc	hl
   0551 4E                 1376 	ld	c,(hl)
   0552 23                 1377 	inc	hl
   0553 46                 1378 	ld	b,(hl)
   0554 7B                 1379 	ld	a,e
   0555 DD 86 FC           1380 	add	a,-4 (ix)
   0558 5F                 1381 	ld	e,a
   0559 7A                 1382 	ld	a,d
   055A DD 8E FD           1383 	adc	a,-3 (ix)
   055D 57                 1384 	ld	d,a
   055E 79                 1385 	ld	a,c
   055F DD 8E FE           1386 	adc	a,-2 (ix)
   0562 4F                 1387 	ld	c,a
   0563 78                 1388 	ld	a,b
   0564 DD 8E FF           1389 	adc	a,-1 (ix)
   0567 47                 1390 	ld	b,a
   0568 DD 6E F4           1391 	ld	l,-12 (ix)
   056B DD 66 F5           1392 	ld	h,-11 (ix)
   056E 73                 1393 	ld	(hl),e
   056F 23                 1394 	inc	hl
   0570 72                 1395 	ld	(hl),d
   0571 23                 1396 	inc	hl
   0572 71                 1397 	ld	(hl),c
   0573 23                 1398 	inc	hl
   0574 70                 1399 	ld	(hl),b
                           1400 ;disk_io.c:105: return TRUE;
   0575 2E 01              1401 	ld	l,#0x01
   0577                    1402 00107$:
   0577 DD F9              1403 	ld	sp,ix
   0579 DD E1              1404 	pop	ix
   057B C9                 1405 	ret
   057C                    1406 _ChunkLoader_LoadChunk_end::
                           1407 ;disk_io.c:109: BOOL ChunkLoader_IsDone(void)
                           1408 ;	---------------------------------
                           1409 ; Function ChunkLoader_IsDone
                           1410 ; ---------------------------------
   057C                    1411 _ChunkLoader_IsDone_start::
   057C                    1412 _ChunkLoader_IsDone:
   057C DD E5              1413 	push	ix
   057E DD 21 00 00        1414 	ld	ix,#0
   0582 DD 39              1415 	add	ix,sp
   0584 F5                 1416 	push	af
   0585 F5                 1417 	push	af
                           1418 ;disk_io.c:111: return (cl.file_offset >= cl.file.size);
   0586 21r27s03           1419 	ld	hl, #_cl + 12
   0589 7E                 1420 	ld	a,(hl)
   058A DD 77 FC           1421 	ld	-4 (ix),a
   058D 23                 1422 	inc	hl
   058E 7E                 1423 	ld	a,(hl)
   058F DD 77 FD           1424 	ld	-3 (ix),a
   0592 23                 1425 	inc	hl
   0593 7E                 1426 	ld	a,(hl)
   0594 DD 77 FE           1427 	ld	-2 (ix),a
   0597 23                 1428 	inc	hl
   0598 7E                 1429 	ld	a,(hl)
   0599 DD 77 FF           1430 	ld	-1 (ix),a
   059C 21r1Fs03           1431 	ld	hl, #_cl + 2+1+1
   059F 23                 1432 	inc	hl
   05A0 4E                 1433 	ld	c,(hl)
   05A1 23                 1434 	inc	hl
   05A2 46                 1435 	ld	b,(hl)
   05A3 23                 1436 	inc	hl
   05A4 5E                 1437 	ld	e,(hl)
   05A5 23                 1438 	inc	hl
   05A6 56                 1439 	ld	d,(hl)
   05A7 DD 7E FC           1440 	ld	a,-4 (ix)
   05AA 91                 1441 	sub	a,c
   05AB DD 7E FD           1442 	ld	a,-3 (ix)
   05AE 98                 1443 	sbc	a,b
   05AF DD 7E FE           1444 	ld	a,-2 (ix)
   05B2 9B                 1445 	sbc	a,e
   05B3 DD 7E FF           1446 	ld	a,-1 (ix)
   05B6 9A                 1447 	sbc	a,d
   05B7 3E 00              1448 	ld	a,#0x00
   05B9 17                 1449 	rla
   05BA B7                 1450 	or	a,a
   05BB D6 01              1451 	sub	a,#0x01
   05BD 3E 00              1452 	ld	a,#0x00
   05BF 17                 1453 	rla
   05C0 6F                 1454 	ld	l,a
   05C1 DD F9              1455 	ld	sp,ix
   05C3 DD E1              1456 	pop	ix
   05C5 C9                 1457 	ret
   05C6                    1458 _ChunkLoader_IsDone_end::
                           1459 ;disk_io.c:116: void DiskIO_BeginDiskOperation(void)
                           1460 ;	---------------------------------
                           1461 ; Function DiskIO_BeginDiskOperation
                           1462 ; ---------------------------------
   05C6                    1463 _DiskIO_BeginDiskOperation_start::
   05C6                    1464 _DiskIO_BeginDiskOperation:
                           1465 ;disk_io.c:120: DI();
   05C6 F3                 1466 		di 
   05C7 C9                 1467 	ret
   05C8                    1468 _DiskIO_BeginDiskOperation_end::
                           1469 ;disk_io.c:123: void DiskIO_EndDiskOperation(BOOL isOperationOk)
                           1470 ;	---------------------------------
                           1471 ; Function DiskIO_EndDiskOperation
                           1472 ; ---------------------------------
   05C8                    1473 _DiskIO_EndDiskOperation_start::
   05C8                    1474 _DiskIO_EndDiskOperation:
   05C8 DD E5              1475 	push	ix
   05CA DD 21 00 00        1476 	ld	ix,#0
   05CE DD 39              1477 	add	ix,sp
                           1478 ;disk_io.c:127: if(!isOperationOk) {
   05D0 AF                 1479 	xor	a,a
   05D1 DD B6 04           1480 	or	a,4 (ix)
   05D4 20 03              1481 	jr	NZ,00102$
                           1482 ;disk_io.c:128: DiskIO_VisualizeDiskError();
   05D6 CDrDDs05           1483 	call	_DiskIO_VisualizeDiskError
   05D9                    1484 00102$:
                           1485 ;disk_io.c:131: EI();
   05D9 FB                 1486 		ei 
   05DA DD E1              1487 	pop	ix
   05DC C9                 1488 	ret
   05DD                    1489 _DiskIO_EndDiskOperation_end::
                           1490 ;disk_io.c:134: void DiskIO_VisualizeDiskError(void)
                           1491 ;	---------------------------------
                           1492 ; Function DiskIO_VisualizeDiskError
                           1493 ; ---------------------------------
   05DD                    1494 _DiskIO_VisualizeDiskError_start::
   05DD                    1495 _DiskIO_VisualizeDiskError:
   05DD DD E5              1496 	push	ix
   05DF DD 21 00 00        1497 	ld	ix,#0
   05E3 DD 39              1498 	add	ix,sp
   05E5 F5                 1499 	push	af
   05E6 F5                 1500 	push	af
                           1501 ;disk_io.c:136: ushort* p = (ushort*) PALETTE;
   05E7 DD 36 FE 00        1502 	ld	-2 (ix),#0x00
   05EB DD 36 FF 00        1503 	ld	-1 (ix),#0x00
                           1504 ;disk_io.c:141: color = 0xf00;
   05EF DD 36 FC 00        1505 	ld	-4 (ix),#0x00
   05F3 DD 36 FD 0F        1506 	ld	-3 (ix),#0x0F
                           1507 ;disk_io.c:143: for(t=0; t<6; t++) {
   05F7 16 00              1508 	ld	d,#0x00
   05F9                    1509 00108$:
   05F9 7A                 1510 	ld	a,d
   05FA D6 06              1511 	sub	a,#0x06
   05FC 30 38              1512 	jr	NC,00112$
                           1513 ;disk_io.c:144: *p = color;
   05FE DD 6E FE           1514 	ld	l,-2 (ix)
   0601 DD 66 FF           1515 	ld	h,-1 (ix)
   0604 DD 7E FC           1516 	ld	a,-4 (ix)
   0607 77                 1517 	ld	(hl),a
   0608 23                 1518 	inc	hl
   0609 DD 7E FD           1519 	ld	a,-3 (ix)
   060C 77                 1520 	ld	(hl),a
                           1521 ;disk_io.c:145: for(i=0; i<25;i++) {        // delay
   060D 06 00              1522 	ld	b,#0x00
   060F                    1523 00104$:
   060F 78                 1524 	ld	a,b
   0610 D6 19              1525 	sub	a,#0x19
   0612 30 17              1526 	jr	NC,00107$
                           1527 ;disk_io.c:146: FLOS_WaitVRT();
   0614 C5                 1528 	push	bc
   0615 D5                 1529 	push	de
   0616 CDr00s00           1530 	call	_FLOS_WaitVRT
   0619 D1                 1531 	pop	de
   061A C1                 1532 	pop	bc
                           1533 ;disk_io.c:147: for(k=0; k<10000; k++);
   061B 0E 10              1534 	ld	c,#0x10
   061D 1E 27              1535 	ld	e,#0x27
   061F                    1536 00103$:
   061F 69                 1537 	ld	l,c
   0620 63                 1538 	ld	h,e
   0621 2B                 1539 	dec	hl
   0622 4D                 1540 	ld	c,l
   0623 5C                 1541 	ld	e,h
   0624 79                 1542 	ld	a,c
   0625 B3                 1543 	or	a,e
   0626 20 F7              1544 	jr	NZ,00103$
                           1545 ;disk_io.c:145: for(i=0; i<25;i++) {        // delay
   0628 04                 1546 	inc	b
   0629 18 E4              1547 	jr	00104$
   062B                    1548 00107$:
                           1549 ;disk_io.c:149: color ^= 0xf00;
   062B DD 7E FD           1550 	ld	a,-3 (ix)
   062E EE 0F              1551 	xor	a,#0x0F
   0630 DD 77 FD           1552 	ld	-3 (ix),a
                           1553 ;disk_io.c:143: for(t=0; t<6; t++) {
   0633 14                 1554 	inc	d
   0634 18 C3              1555 	jr	00108$
   0636                    1556 00112$:
   0636 DD F9              1557 	ld	sp,ix
   0638 DD E1              1558 	pop	ix
   063A C9                 1559 	ret
   063B                    1560 _DiskIO_VisualizeDiskError_end::
                           1561 ;loading_icon.c:5: BOOL LoadingIcon_LoadSprites(void)
                           1562 ;	---------------------------------
                           1563 ; Function LoadingIcon_LoadSprites
                           1564 ; ---------------------------------
   063B                    1565 _LoadingIcon_LoadSprites_start::
   063B                    1566 _LoadingIcon_LoadSprites:
                           1567 ;loading_icon.c:7: const char *pFilename = SPRITES_DISKETTE_FILENAME;
                           1568 ;loading_icon.c:10: if(!load_file_to_buffer(pFilename, 0, (byte*)BUF_FOR_LOADING_SPRITES_4KB, size, PONG_BANK))
   063B 3E 00              1569 	ld	a,#0x00
   063D F5                 1570 	push	af
   063E 33                 1571 	inc	sp
   063F 21 00 00           1572 	ld	hl,#0x0000
   0642 E5                 1573 	push	hl
   0643 21 00 09           1574 	ld	hl,#0x0900
   0646 E5                 1575 	push	hl
   0647 26 F0              1576 	ld	h, #0xF0
   0649 E5                 1577 	push	hl
   064A 21 00 00           1578 	ld	hl,#0x0000
   064D E5                 1579 	push	hl
   064E 21 00 00           1580 	ld	hl,#0x0000
   0651 E5                 1581 	push	hl
   0652 21r90s06           1582 	ld	hl,#__str_5
   0655 E5                 1583 	push	hl
   0656 CDrECs02           1584 	call	_load_file_to_buffer
   0659 FD 21 0D 00        1585 	ld	iy,#0x000D
   065D FD 39              1586 	add	iy,sp
   065F FD F9              1587 	ld	sp,iy
                           1588 ;loading_icon.c:11: return FALSE;
   0661 4D                 1589 	ld	c,l
   0662 AF                 1590 	xor	a,a
   0663 B5                 1591 	or	a,l
   0664 20 02              1592 	jr	NZ,00102$
   0666 6F                 1593 	ld	l,a
   0667 C9                 1594 	ret
   0668                    1595 00102$:
                           1596 ;loading_icon.c:14: PAGE_IN_SPRITE_RAM();
   0668 DB 00              1597 	in	a,(_io__sys_mem_select)
   066A F6 80              1598 	or	a,#0x80
   066C D3 00              1599 	out	(_io__sys_mem_select),a
                           1600 ;loading_icon.c:15: SET_SPRITE_PAGE(31);
   066E FD 21 06 02        1601 	ld	iy,#_mm__vreg_vidpage
   0672 FD 36 00 9F        1602 	ld	0 (iy),#0x9F
                           1603 ;loading_icon.c:16: memcpy((byte*)SPRITE_BASE+4096-size, (byte*)BUF_FOR_LOADING_SPRITES_4KB, size);
   0676 11 00 17           1604 	ld	de,#0x1700
   0679 21 00 F0           1605 	ld	hl,#0xF000
   067C 01 00 09           1606 	ld	bc,#0x0900
   067F ED B0              1607 	ldir
                           1608 ;loading_icon.c:17: PAGE_OUT_SPRITE_RAM();
   0681 DB 00              1609 	in	a,(_io__sys_mem_select)
   0683 4F                 1610 	ld	c,a
   0684 E6 7F              1611 	and	a,#0x7F
   0686 D3 00              1612 	out	(_io__sys_mem_select),a
                           1613 ;loading_icon.c:19: loadingIcon.isLoaded = TRUE;
   0688 21r00s00           1614 	ld	hl,#_loadingIcon
   068B 36 01              1615 	ld	(hl),#0x01
                           1616 ;loading_icon.c:20: return TRUE;
   068D 2E 01              1617 	ld	l,#0x01
   068F C9                 1618 	ret
   0690                    1619 _LoadingIcon_LoadSprites_end::
   0690                    1620 __str_5:
   0690 4C 4F 41 44 5F 49  1621 	.ascii "LOAD_ICO.SPR"
        43 4F 2E 53 50 52
   069C 00                 1622 	.db 0x00
                           1623 ;loading_icon.c:23: void LoadingIcon_Enable(BOOL isEnable)
                           1624 ;	---------------------------------
                           1625 ; Function LoadingIcon_Enable
                           1626 ; ---------------------------------
   069D                    1627 _LoadingIcon_Enable_start::
   069D                    1628 _LoadingIcon_Enable:
   069D DD E5              1629 	push	ix
   069F DD 21 00 00        1630 	ld	ix,#0
   06A3 DD 39              1631 	add	ix,sp
                           1632 ;loading_icon.c:28: if(isEnable) {
   06A5 AF                 1633 	xor	a,a
   06A6 DD B6 04           1634 	or	a,4 (ix)
   06A9 CAr3Ds07           1635 	jp	Z,00104$
                           1636 ;loading_icon.c:29: if(!loadingIcon.isLoaded)
   06AC 21r00s00           1637 	ld	hl,#_loadingIcon
   06AF 7E                 1638 	ld	a,(hl)
   06B0 B7                 1639 	or	a,a
                           1640 ;loading_icon.c:30: return;
   06B1 CAr40s07           1641 	jp	Z,00106$
                           1642 ;loading_icon.c:34: game.shadow_sprite_register_bank = 0;
   06B4 01rF4s02           1643 	ld	bc,#_game + 12
   06B7 3E 00              1644 	ld	a,#0x00
   06B9 02                 1645 	ld	(bc),a
                           1646 ;loading_icon.c:35: SET_LIVE_SPRITE_REGISTER_BANK(game.shadow_sprite_register_bank);
   06BA 0A                 1647 	ld	a,(bc)
   06BB 4F                 1648 	ld	c,a
   06BC CB 21              1649 	sla	c
   06BE CB 21              1650 	sla	c
   06C0 79                 1651 	ld	a,c
   06C1 F6 09              1652 	or	a,#0x09
   06C3 21 07 02           1653 	ld	hl,#_mm__vreg_sprctrl + 0
   06C6 77                 1654 	ld	(hl), a
                           1655 ;loading_icon.c:37: clear_sprite_regs();
   06C7 CDrCDs07           1656 	call	_clear_sprite_regs
                           1657 ;loading_icon.c:39: set_sprite_regs(SPRITE_NUM_DISKETTE   , x,    y, 3, SPRITE_DEF_NUM_DISKETTE  , FALSE);
   06CA 3E 00              1658 	ld	a,#0x00
   06CC F5                 1659 	push	af
   06CD 33                 1660 	inc	sp
   06CE 21 F7 01           1661 	ld	hl,#0x01F7
   06D1 E5                 1662 	push	hl
   06D2 3E 03              1663 	ld	a,#0x03
   06D4 F5                 1664 	push	af
   06D5 33                 1665 	inc	sp
   06D6 21 B0 00           1666 	ld	hl,#0x00B0
   06D9 E5                 1667 	push	hl
   06DA 2E A0              1668 	ld	l, #0xA0
   06DC E5                 1669 	push	hl
   06DD 3E 00              1670 	ld	a,#0x00
   06DF F5                 1671 	push	af
   06E0 33                 1672 	inc	sp
   06E1 CDr1Fs09           1673 	call	_set_sprite_regs
   06E4 FD 21 09 00        1674 	ld	iy,#0x0009
   06E8 FD 39              1675 	add	iy,sp
   06EA FD F9              1676 	ld	sp,iy
                           1677 ;loading_icon.c:40: set_sprite_regs(SPRITE_NUM_DISKETTE+1 , x+16, y, 3, SPRITE_DEF_NUM_DISKETTE+3, FALSE);
   06EC 3E 00              1678 	ld	a,#0x00
   06EE F5                 1679 	push	af
   06EF 33                 1680 	inc	sp
   06F0 21 FA 01           1681 	ld	hl,#0x01FA
   06F3 E5                 1682 	push	hl
   06F4 3E 03              1683 	ld	a,#0x03
   06F6 F5                 1684 	push	af
   06F7 33                 1685 	inc	sp
   06F8 21 B0 00           1686 	ld	hl,#0x00B0
   06FB E5                 1687 	push	hl
   06FC 2E B0              1688 	ld	l, #0xB0
   06FE E5                 1689 	push	hl
   06FF 3E 01              1690 	ld	a,#0x01
   0701 F5                 1691 	push	af
   0702 33                 1692 	inc	sp
   0703 CDr1Fs09           1693 	call	_set_sprite_regs
   0706 FD 21 09 00        1694 	ld	iy,#0x0009
   070A FD 39              1695 	add	iy,sp
   070C FD F9              1696 	ld	sp,iy
                           1697 ;loading_icon.c:41: set_sprite_regs(SPRITE_NUM_DISKETTE+2 , x+32, y, 3, SPRITE_DEF_NUM_DISKETTE+6, FALSE);
   070E 3E 00              1698 	ld	a,#0x00
   0710 F5                 1699 	push	af
   0711 33                 1700 	inc	sp
   0712 21 FD 01           1701 	ld	hl,#0x01FD
   0715 E5                 1702 	push	hl
   0716 3E 03              1703 	ld	a,#0x03
   0718 F5                 1704 	push	af
   0719 33                 1705 	inc	sp
   071A 21 B0 00           1706 	ld	hl,#0x00B0
   071D E5                 1707 	push	hl
   071E 2E C0              1708 	ld	l, #0xC0
   0720 E5                 1709 	push	hl
   0721 3E 02              1710 	ld	a,#0x02
   0723 F5                 1711 	push	af
   0724 33                 1712 	inc	sp
   0725 CDr1Fs09           1713 	call	_set_sprite_regs
   0728 FD 21 09 00        1714 	ld	iy,#0x0009
   072C FD 39              1715 	add	iy,sp
   072E FD F9              1716 	ld	sp,iy
                           1717 ;loading_icon.c:43: memcpy((byte*)PALETTE, (byte*)loadingIcon.palette, 0x200);
   0730 21r01s00           1718 	ld	hl,#_loadingIcon + 1
   0733 11 00 00           1719 	ld	de,#0x0000
   0736 01 00 02           1720 	ld	bc,#0x0200
   0739 ED B0              1721 	ldir
   073B 18 03              1722 	jr	00106$
   073D                    1723 00104$:
                           1724 ;loading_icon.c:45: clear_sprite_regs();
   073D CDrCDs07           1725 	call	_clear_sprite_regs
   0740                    1726 00106$:
   0740 DD E1              1727 	pop	ix
   0742 C9                 1728 	ret
   0743                    1729 _LoadingIcon_Enable_end::
                           1730 ;loading_icon.c:53: BOOL LoadingIcon_Load(void)
                           1731 ;	---------------------------------
                           1732 ; Function LoadingIcon_Load
                           1733 ; ---------------------------------
   0743                    1734 _LoadingIcon_Load_start::
   0743                    1735 _LoadingIcon_Load:
                           1736 ;loading_icon.c:55: if(!LoadingIcon_LoadSprites())
   0743 CDr3Bs06           1737 	call	_LoadingIcon_LoadSprites
                           1738 ;loading_icon.c:56: return FALSE;
   0746 AF                 1739 	xor	a,a
   0747 B5                 1740 	or	a,l
   0748 20 02              1741 	jr	NZ,00102$
   074A 6F                 1742 	ld	l,a
   074B C9                 1743 	ret
   074C                    1744 00102$:
                           1745 ;loading_icon.c:58: if(!load_file_to_buffer(PALETTE_DISKETTE_FILENAME, 0, (byte*)loadingIcon.palette, 0x200, PONG_BANK))
   074C 01r01s00           1746 	ld	bc,#_loadingIcon + 1
   074F 3E 00              1747 	ld	a,#0x00
   0751 F5                 1748 	push	af
   0752 33                 1749 	inc	sp
   0753 21 00 00           1750 	ld	hl,#0x0000
   0756 E5                 1751 	push	hl
   0757 21 00 02           1752 	ld	hl,#0x0200
   075A E5                 1753 	push	hl
   075B C5                 1754 	push	bc
   075C 21 00 00           1755 	ld	hl,#0x0000
   075F E5                 1756 	push	hl
   0760 21 00 00           1757 	ld	hl,#0x0000
   0763 E5                 1758 	push	hl
   0764 21r85s07           1759 	ld	hl,#__str_6
   0767 E5                 1760 	push	hl
   0768 CDrECs02           1761 	call	_load_file_to_buffer
   076B FD 21 0D 00        1762 	ld	iy,#0x000D
   076F FD 39              1763 	add	iy,sp
   0771 FD F9              1764 	ld	sp,iy
                           1765 ;loading_icon.c:59: return FALSE;
   0773 4D                 1766 	ld	c,l
   0774 AF                 1767 	xor	a,a
   0775 B5                 1768 	or	a,l
   0776 20 02              1769 	jr	NZ,00104$
   0778 6F                 1770 	ld	l,a
   0779 C9                 1771 	ret
   077A                    1772 00104$:
                           1773 ;loading_icon.c:60: loadingIcon.palette[0] = 0;
   077A 21r01s00           1774 	ld	hl, #_loadingIcon + 1
   077D 36 00              1775 	ld	(hl),#0x00
   077F 23                 1776 	inc	hl
   0780 36 00              1777 	ld	(hl),#0x00
                           1778 ;loading_icon.c:62: return TRUE;
   0782 2E 01              1779 	ld	l,#0x01
   0784 C9                 1780 	ret
   0785                    1781 _LoadingIcon_Load_end::
   0785                    1782 __str_6:
   0785 4C 4F 41 44 5F 49  1783 	.ascii "LOAD_ICO.PAL"
        43 4F 2E 50 41 4C
   0791 00                 1784 	.db 0x00
                           1785 ;sprites.c:4: void initgraph(void)
                           1786 ;	---------------------------------
                           1787 ; Function initgraph
                           1788 ; ---------------------------------
   0792                    1789 _initgraph_start::
   0792                    1790 _initgraph:
                           1791 ;sprites.c:7: mm__vreg_vidctrl = TILE_MAP_MODE|WIDE_LEFT_BORDER;       //|DUAL_PLAY_FIELD;
   0792 21 01 02           1792 	ld	hl,#_mm__vreg_vidctrl + 0
   0795 36 03              1793 	ld	(hl), #0x03
                           1794 ;sprites.c:10: mm__vreg_ext_vidctrl = EXTENDED_TILE_MAP_MODE;
   0797 21 0C 02           1795 	ld	hl,#_mm__vreg_ext_vidctrl + 0
   079A 36 01              1796 	ld	(hl), #0x01
                           1797 ;sprites.c:13: mm__vreg_rasthi = 0;
   079C 21 04 02           1798 	ld	hl,#_mm__vreg_rasthi + 0
   079F 36 00              1799 	ld	(hl), #0x00
                           1800 ;sprites.c:15: mm__vreg_window = (Y_WINDOW_START<<4)|Y_WINDOW_STOP;
   07A1 21 02 02           1801 	ld	hl,#_mm__vreg_window + 0
   07A4 36 3D              1802 	ld	(hl), #0x3D
                           1803 ;sprites.c:17: mm__vreg_rasthi = SWITCH_TO_X_WINDOW_REGISTER;
   07A6 21 04 02           1804 	ld	hl,#_mm__vreg_rasthi + 0
   07A9 36 04              1805 	ld	(hl), #0x04
                           1806 ;sprites.c:19: mm__vreg_window = (X_WINDOW_START<<4)|X_WINDOW_STOP;
   07AB 21 02 02           1807 	ld	hl,#_mm__vreg_window + 0
   07AE 36 6E              1808 	ld	(hl), #0x6E
                           1809 ;sprites.c:21: clear_sprite_regs();
   07B0 CDrCDs07           1810 	call	_clear_sprite_regs
                           1811 ;sprites.c:24: mm__vreg_sprctrl = SPRITE_ENABLE|DOUBLE_BUFFER_SPRITE_REGISTER_MODE;
   07B3 21 07 02           1812 	ld	hl,#_mm__vreg_sprctrl + 0
   07B6 36 09              1813 	ld	(hl), #0x09
                           1814 ;sprites.c:27: mm__vreg_yhws_bplcount = 0;         //pf A
   07B8 21 03 02           1815 	ld	hl,#_mm__vreg_yhws_bplcount + 0
   07BB 36 00              1816 	ld	(hl), #0x00
                           1817 ;sprites.c:28: mm__vreg_yhws_bplcount = 0x80 | 0;  //pf B
   07BD 21 03 02           1818 	ld	hl,#_mm__vreg_yhws_bplcount + 0
   07C0 36 80              1819 	ld	(hl), #0x80
                           1820 ;sprites.c:30: mm__vreg_xhws = 0;       //pf A and pf B
   07C2 21 00 02           1821 	ld	hl,#_mm__vreg_xhws + 0
   07C5 36 00              1822 	ld	(hl), #0x00
                           1823 ;sprites.c:32: game.isFLOSVideoMode = FALSE;
   07C7 3E 00              1824 	ld	a,#0x00
   07C9 32rF1s02           1825 	ld	(#_game + 9),a
   07CC C9                 1826 	ret
   07CD                    1827 _initgraph_end::
                           1828 ;sprites.c:36: void clear_sprite_regs(void)
                           1829 ;	---------------------------------
                           1830 ; Function clear_sprite_regs
                           1831 ; ---------------------------------
   07CD                    1832 _clear_sprite_regs_start::
   07CD                    1833 _clear_sprite_regs:
                           1834 ;sprites.c:40: for(p = (byte*)SPR_REGISTERS; p < (byte*)(SPR_REGISTERS+0x200); p++)
   07CD 01 00 04           1835 	ld	bc,#0x0400
   07D0                    1836 00101$:
   07D0 79                 1837 	ld	a,c
   07D1 D6 00              1838 	sub	a,#0x00
   07D3 78                 1839 	ld	a,b
   07D4 DE 06              1840 	sbc	a,#0x06
   07D6 D0                 1841 	ret	NC
                           1842 ;sprites.c:41: *p = 0;
   07D7 3E 00              1843 	ld	a,#0x00
   07D9 02                 1844 	ld	(bc),a
                           1845 ;sprites.c:40: for(p = (byte*)SPR_REGISTERS; p < (byte*)(SPR_REGISTERS+0x200); p++)
   07DA 03                 1846 	inc	bc
   07DB 18 F3              1847 	jr	00101$
   07DD                    1848 _clear_sprite_regs_end::
                           1849 ;sprites.c:46: void clear_shadow_sprite_regs(void)
                           1850 ;	---------------------------------
                           1851 ; Function clear_shadow_sprite_regs
                           1852 ; ---------------------------------
   07DD                    1853 _clear_shadow_sprite_regs_start::
   07DD                    1854 _clear_shadow_sprite_regs:
                           1855 ;sprites.c:50: p = (byte*)SPR_REGISTERS + (game.shadow_sprite_register_bank*64*4);
   07DD 21rF4s02           1856 	ld	hl,#_game + 12
   07E0 4E                 1857 	ld	c,(hl)
   07E1 41                 1858 	ld	b,c
   07E2 0E 00              1859 	ld	c,#0x00
   07E4 21 00 04           1860 	ld	hl,#0x0400
   07E7 09                 1861 	add	hl,bc
   07E8 4D                 1862 	ld	c,l
   07E9 44                 1863 	ld	b,h
                           1864 ;sprites.c:51: memset(p, 0, 0x100);
   07EA 21 00 01           1865 	ld	hl,#0x0100
   07ED E5                 1866 	push	hl
   07EE 3E 00              1867 	ld	a,#0x00
   07F0 F5                 1868 	push	af
   07F1 33                 1869 	inc	sp
   07F2 C5                 1870 	push	bc
   07F3 CDr00s00           1871 	call	_memset
   07F6 F1                 1872 	pop	af
   07F7 F1                 1873 	pop	af
   07F8 33                 1874 	inc	sp
   07F9 C9                 1875 	ret
   07FA                    1876 _clear_shadow_sprite_regs_end::
                           1877 ;sprites.c:55: void DrawBat(int x1,int y1,int x2,int y2)
                           1878 ;	---------------------------------
                           1879 ; Function DrawBat
                           1880 ; ---------------------------------
   07FA                    1881 _DrawBat_start::
   07FA                    1882 _DrawBat:
   07FA DD E5              1883 	push	ix
   07FC DD 21 00 00        1884 	ld	ix,#0
   0800 DD 39              1885 	add	ix,sp
                           1886 ;sprites.c:67: if(x1<160) {
   0802 DD 7E 04           1887 	ld	a,4 (ix)
   0805 D6 A0              1888 	sub	a,#0xA0
   0807 DD 7E 05           1889 	ld	a,5 (ix)
   080A DE 00              1890 	sbc	a,#0x00
   080C F2r17s08           1891 	jp	P,00102$
                           1892 ;sprites.c:68: num_bat = 0; x_flip = TRUE;  p = &batA;
   080F 01 00 01           1893 	ld	bc,#0x0100
   0812 11r47s02           1894 	ld	de,#_batA
   0815 18 06              1895 	jr	00103$
   0817                    1896 00102$:
                           1897 ;sprites.c:70: num_bat = 1; x_flip = FALSE; p = &batB;
   0817 01 01 00           1898 	ld	bc,#0x0001
   081A 11r67s02           1899 	ld	de,#_batB
   081D                    1900 00103$:
                           1901 ;sprites.c:85: if(p->state != NORMAL)
   081D 21 17 00           1902 	ld	hl,#0x0017
   0820 19                 1903 	add	hl,de
   0821 7E                 1904 	ld	a,(hl)
   0822 B7                 1905 	or	a,a
   0823 28 08              1906 	jr	Z,00105$
                           1907 ;sprites.c:86: y1 = SPRITE_Y_OFFSCREEN;
   0825 DD 36 06 00        1908 	ld	6 (ix),#0x00
   0829 DD 36 07 01        1909 	ld	7 (ix),#0x01
   082D                    1910 00105$:
                           1911 ;sprites.c:89: set_sprite_regs(num_bat, x1-4,  y1, spr_height, spr_def, x_flip);
   082D DD 7E 04           1912 	ld	a,4 (ix)
   0830 C6 FC              1913 	add	a,#0xFC
   0832 5F                 1914 	ld	e,a
   0833 DD 7E 05           1915 	ld	a,5 (ix)
   0836 CE FF              1916 	adc	a,#0xFF
   0838 57                 1917 	ld	d,a
   0839 C5                 1918 	push	bc
   083A 33                 1919 	inc	sp
   083B 21 02 00           1920 	ld	hl,#0x0002
   083E E5                 1921 	push	hl
   083F 3E 02              1922 	ld	a,#0x02
   0841 F5                 1923 	push	af
   0842 33                 1924 	inc	sp
   0843 DD 6E 06           1925 	ld	l,6 (ix)
   0846 DD 66 07           1926 	ld	h,7 (ix)
   0849 E5                 1927 	push	hl
   084A D5                 1928 	push	de
   084B 79                 1929 	ld	a,c
   084C F5                 1930 	push	af
   084D 33                 1931 	inc	sp
   084E CDr1Fs09           1932 	call	_set_sprite_regs
   0851 FD 21 09 00        1933 	ld	iy,#0x0009
   0855 FD 39              1934 	add	iy,sp
   0857 FD F9              1935 	ld	sp,iy
   0859 DD E1              1936 	pop	ix
   085B C9                 1937 	ret
   085C                    1938 _DrawBat_end::
                           1939 ;sprites.c:93: void DrawBall(int x_center,int y_center,int r1,int r2)
                           1940 ;	---------------------------------
                           1941 ; Function DrawBall
                           1942 ; ---------------------------------
   085C                    1943 _DrawBall_start::
   085C                    1944 _DrawBall:
   085C DD E5              1945 	push	ix
   085E DD 21 00 00        1946 	ld	ix,#0
   0862 DD 39              1947 	add	ix,sp
   0864 3B                 1948 	dec	sp
                           1949 ;sprites.c:96: word spr_def = 0;   /* sprite_definition_number*/
   0865 01 00 00           1950 	ld	bc,#0x0000
                           1951 ;sprites.c:99: if(ball1.state == DYING)
   0868 11rA4s02           1952 	ld	de,#_ball1 + 29
   086B 1A                 1953 	ld	a,(de)
   086C DD 77 FF           1954 	ld	-1 (ix),a
   086F D6 01              1955 	sub	a,#0x01
   0871 20 12              1956 	jr	NZ,00102$
                           1957 ;sprites.c:100: spr_def = SPRITE_DEF_NUM_DYING_BALL + (ball1.dying_time/8);
   0873 21rA6s02           1958 	ld	hl,#_ball1 + 31
   0876 5E                 1959 	ld	e,(hl)
   0877 CB 3B              1960 	srl	e
   0879 CB 3B              1961 	srl	e
   087B CB 3B              1962 	srl	e
   087D 16 00              1963 	ld	d,#0x00
   087F 21 0E 00           1964 	ld	hl,#0x000E
   0882 19                 1965 	add	hl,de
   0883 4D                 1966 	ld	c,l
   0884 44                 1967 	ld	b,h
   0885                    1968 00102$:
                           1969 ;sprites.c:103: x_center -= 8;
   0885 DD 7E 04           1970 	ld	a,4 (ix)
   0888 C6 F8              1971 	add	a,#0xF8
   088A DD 77 04           1972 	ld	4 (ix),a
   088D DD 7E 05           1973 	ld	a,5 (ix)
   0890 CE FF              1974 	adc	a,#0xFF
   0892 DD 77 05           1975 	ld	5 (ix),a
                           1976 ;sprites.c:104: y_center -= 8;
   0895 DD 7E 06           1977 	ld	a,6 (ix)
   0898 C6 F8              1978 	add	a,#0xF8
   089A DD 77 06           1979 	ld	6 (ix),a
   089D DD 7E 07           1980 	ld	a,7 (ix)
   08A0 CE FF              1981 	adc	a,#0xFF
   08A2 DD 77 07           1982 	ld	7 (ix),a
                           1983 ;sprites.c:106: if(ball1.state == DIE)
   08A5 DD 7E FF           1984 	ld	a,-1 (ix)
   08A8 D6 02              1985 	sub	a,#0x02
   08AA 20 08              1986 	jr	NZ,00104$
                           1987 ;sprites.c:107: y_center = SPRITE_Y_OFFSCREEN;
   08AC DD 36 06 00        1988 	ld	6 (ix),#0x00
   08B0 DD 36 07 01        1989 	ld	7 (ix),#0x01
   08B4                    1990 00104$:
                           1991 ;sprites.c:109: set_sprite_regs(SPRITE_NUM_BALL, x_center,  y_center, spr_height, spr_def, FALSE);
   08B4 3E 00              1992 	ld	a,#0x00
   08B6 F5                 1993 	push	af
   08B7 33                 1994 	inc	sp
   08B8 C5                 1995 	push	bc
   08B9 3E 01              1996 	ld	a,#0x01
   08BB F5                 1997 	push	af
   08BC 33                 1998 	inc	sp
   08BD DD 6E 06           1999 	ld	l,6 (ix)
   08C0 DD 66 07           2000 	ld	h,7 (ix)
   08C3 E5                 2001 	push	hl
   08C4 DD 6E 04           2002 	ld	l,4 (ix)
   08C7 DD 66 05           2003 	ld	h,5 (ix)
   08CA E5                 2004 	push	hl
   08CB 3E 03              2005 	ld	a,#0x03
   08CD F5                 2006 	push	af
   08CE 33                 2007 	inc	sp
   08CF CDr1Fs09           2008 	call	_set_sprite_regs
   08D2 FD 21 09 00        2009 	ld	iy,#0x0009
   08D6 FD 39              2010 	add	iy,sp
   08D8 FD F9              2011 	ld	sp,iy
   08DA DD F9              2012 	ld	sp,ix
   08DC DD E1              2013 	pop	ix
   08DE C9                 2014 	ret
   08DF                    2015 _DrawBall_end::
                           2016 ;sprites.c:117: /*static inline*/ void set_sprite_regs_hw(byte sprite_number, byte x, byte misc, byte y, byte sprite_definition_number)
                           2017 ;	---------------------------------
                           2018 ; Function set_sprite_regs_hw
                           2019 ; ---------------------------------
   08DF                    2020 _set_sprite_regs_hw_start::
   08DF                    2021 _set_sprite_regs_hw:
   08DF DD E5              2022 	push	ix
   08E1 DD 21 00 00        2023 	ld	ix,#0
   08E5 DD 39              2024 	add	ix,sp
                           2025 ;sprites.c:122: if (game.shadow_sprite_register_bank == 0)
   08E7 01rF4s02           2026 	ld	bc,#_game + 12
   08EA 0A                 2027 	ld	a,(bc)
   08EB B7                 2028 	or	a,a
   08EC 20 05              2029 	jr	NZ,00102$
                           2030 ;sprites.c:123: p = (byte *) SPR_REGISTERS;
   08EE 01 00 04           2031 	ld	bc,#0x0400
   08F1 18 03              2032 	jr	00103$
   08F3                    2033 00102$:
                           2034 ;sprites.c:125: p = (byte *) SPR_REGISTERS + 0x100;     // add offset of shadow sprite register bank
   08F3 01 00 05           2035 	ld	bc,#0x0500
   08F6                    2036 00103$:
                           2037 ;sprites.c:127: p += ((sprite_number*4));
   08F6 DD 5E 04           2038 	ld	e,4 (ix)
   08F9 16 00              2039 	ld	d,#0x00
   08FB CB 23              2040 	sla	e
   08FD CB 12              2041 	rl	d
   08FF CB 23              2042 	sla	e
   0901 CB 12              2043 	rl	d
   0903 79                 2044 	ld	a,c
   0904 83                 2045 	add	a,e
   0905 4F                 2046 	ld	c,a
   0906 78                 2047 	ld	a,b
   0907 8A                 2048 	adc	a,d
   0908 47                 2049 	ld	b,a
                           2050 ;sprites.c:128: *p =  x;                            p++;
   0909 DD 7E 05           2051 	ld	a,5 (ix)
   090C 02                 2052 	ld	(bc),a
   090D 03                 2053 	inc	bc
                           2054 ;sprites.c:129: *p =  misc;                         p++;
   090E DD 7E 06           2055 	ld	a,6 (ix)
   0911 02                 2056 	ld	(bc),a
   0912 03                 2057 	inc	bc
                           2058 ;sprites.c:130: *p =  y;                            p++;
   0913 DD 7E 07           2059 	ld	a,7 (ix)
   0916 02                 2060 	ld	(bc),a
   0917 03                 2061 	inc	bc
                           2062 ;sprites.c:131: *p =  sprite_definition_number;
   0918 DD 7E 08           2063 	ld	a,8 (ix)
   091B 02                 2064 	ld	(bc),a
   091C DD E1              2065 	pop	ix
   091E C9                 2066 	ret
   091F                    2067 _set_sprite_regs_hw_end::
                           2068 ;sprites.c:136: void set_sprite_regs(byte sprite_number, int x, int y, byte height, word sprite_definition_number, BOOL x_flip)
                           2069 ;	---------------------------------
                           2070 ; Function set_sprite_regs
                           2071 ; ---------------------------------
   091F                    2072 _set_sprite_regs_start::
   091F                    2073 _set_sprite_regs:
   091F DD E5              2074 	push	ix
   0921 DD 21 00 00        2075 	ld	ix,#0
   0925 DD 39              2076 	add	ix,sp
                           2077 ;sprites.c:142: x =  x + X_WINDOW_START*16;
   0927 DD 7E 05           2078 	ld	a,5 (ix)
   092A C6 60              2079 	add	a,#0x60
   092C DD 77 05           2080 	ld	5 (ix),a
   092F DD 7E 06           2081 	ld	a,6 (ix)
   0932 CE 00              2082 	adc	a,#0x00
   0934 DD 77 06           2083 	ld	6 (ix),a
                           2084 ;sprites.c:143: x =  x + 16;  // + wide left border
   0937 DD 7E 05           2085 	ld	a,5 (ix)
   093A C6 10              2086 	add	a,#0x10
   093C DD 77 05           2087 	ld	5 (ix),a
   093F DD 7E 06           2088 	ld	a,6 (ix)
   0942 CE 00              2089 	adc	a,#0x00
   0944 DD 77 06           2090 	ld	6 (ix),a
                           2091 ;sprites.c:145: y =  y + Y_WINDOW_START*8 + 1;
   0947 DD 7E 07           2092 	ld	a,7 (ix)
   094A C6 19              2093 	add	a,#0x19
   094C DD 77 07           2094 	ld	7 (ix),a
   094F DD 7E 08           2095 	ld	a,8 (ix)
   0952 CE 00              2096 	adc	a,#0x00
   0954 DD 77 08           2097 	ld	8 (ix),a
                           2098 ;sprites.c:148: reg_misc = GET_WORD_9TH_BIT(x)                                  |
   0957 DD 4E 05           2099 	ld	c,5 (ix)
   095A DD 7E 06           2100 	ld	a,6 (ix)
   095D E6 01              2101 	and	a,#0x01
   095F 4F                 2102 	ld	c,a
   0960 06 00              2103 	ld	b,#0x00
                           2104 ;sprites.c:149: GET_WORD_9TH_BIT(y) << 1                             |
   0962 DD 5E 07           2105 	ld	e,7 (ix)
   0965 DD 7E 08           2106 	ld	a,8 (ix)
   0968 E6 01              2107 	and	a,#0x01
   096A 5F                 2108 	ld	e,a
   096B CB 23              2109 	sla	e
   096D 16 00              2110 	ld	d,#0x00
   096F 7B                 2111 	ld	a,e
   0970 B1                 2112 	or	a,c
   0971 5F                 2113 	ld	e,a
   0972 7A                 2114 	ld	a,d
   0973 B0                 2115 	or	a,b
   0974 57                 2116 	ld	d,a
                           2117 ;sprites.c:150: GET_WORD_9TH_BIT(sprite_definition_number) << 2      |
   0975 DD 7E 0B           2118 	ld	a,11 (ix)
   0978 E6 01              2119 	and	a,#0x01
   097A 4F                 2120 	ld	c,a
   097B CB 21              2121 	sla	c
   097D CB 21              2122 	sla	c
   097F 06 00              2123 	ld	b,#0x00
   0981 7B                 2124 	ld	a,e
   0982 B1                 2125 	or	a,c
   0983 5F                 2126 	ld	e,a
   0984 7A                 2127 	ld	a,d
   0985 B0                 2128 	or	a,b
   0986 57                 2129 	ld	d,a
                           2130 ;sprites.c:151: ((x_flip&1) << 3)                                    |
   0987 DD 7E 0C           2131 	ld	a,12 (ix)
   098A E6 01              2132 	and	a,#0x01
   098C 07                 2133 	rlca
   098D 07                 2134 	rlca
   098E 07                 2135 	rlca
   098F E6 F8              2136 	and	a,#0xF8
   0991 4F                 2137 	ld	c,a
   0992 06 00              2138 	ld	b,#0x00
   0994 7B                 2139 	ld	a,e
   0995 B1                 2140 	or	a,c
   0996 5F                 2141 	ld	e,a
   0997 7A                 2142 	ld	a,d
   0998 B0                 2143 	or	a,b
   0999 57                 2144 	ld	d,a
                           2145 ;sprites.c:152: (height << 4)
   099A DD 7E 09           2146 	ld	a,9 (ix)
   099D 07                 2147 	rlca
   099E 07                 2148 	rlca
   099F 07                 2149 	rlca
   09A0 07                 2150 	rlca
   09A1 E6 F0              2151 	and	a,#0xF0
   09A3 4F                 2152 	ld	c,a
   09A4 06 00              2153 	ld	b,#0x00
   09A6 7B                 2154 	ld	a,e
   09A7 B1                 2155 	or	a,c
   09A8 5F                 2156 	ld	e,a
   09A9 7A                 2157 	ld	a,d
   09AA B0                 2158 	or	a,b
                           2159 ;sprites.c:158: ,(byte)sprite_definition_number);
   09AB DD 4E 0A           2160 	ld	c,10 (ix)
   09AE DD 46 07           2161 	ld	b,7 (ix)
                           2162 ;sprites.c:155: (byte)x,
   09B1 DD 56 05           2163 	ld	d,5 (ix)
                           2164 ;sprites.c:154: set_sprite_regs_hw(sprite_number,
   09B4 79                 2165 	ld	a,c
   09B5 F5                 2166 	push	af
   09B6 33                 2167 	inc	sp
   09B7 C5                 2168 	push	bc
   09B8 33                 2169 	inc	sp
   09B9 7B                 2170 	ld	a,e
   09BA F5                 2171 	push	af
   09BB 33                 2172 	inc	sp
   09BC D5                 2173 	push	de
   09BD 33                 2174 	inc	sp
   09BE DD 7E 04           2175 	ld	a,4 (ix)
   09C1 F5                 2176 	push	af
   09C2 33                 2177 	inc	sp
   09C3 CDrDFs08           2178 	call	_set_sprite_regs_hw
   09C6 F1                 2179 	pop	af
   09C7 F1                 2180 	pop	af
   09C8 33                 2181 	inc	sp
   09C9 DD E1              2182 	pop	ix
   09CB C9                 2183 	ret
   09CC                    2184 _set_sprite_regs_end::
                           2185 ;sprites.c:178: void set_sprite_regs_optimized(void)
                           2186 ;	---------------------------------
                           2187 ; Function set_sprite_regs_optimized
                           2188 ; ---------------------------------
   09CC                    2189 _set_sprite_regs_optimized_start::
   09CC                    2190 _set_sprite_regs_optimized:
   09CC DD E5              2191 	push	ix
   09CE DD 21 00 00        2192 	ld	ix,#0
   09D2 DD 39              2193 	add	ix,sp
   09D4 21 FA FF           2194 	ld	hl,#-6
   09D7 39                 2195 	add	hl,sp
   09D8 F9                 2196 	ld	sp,hl
                           2197 ;sprites.c:183: spr_reg.x += X_WINDOW_START*16;
   09D9 01r2Cs03           2198 	ld	bc,#_spr_reg + 1
   09DC 69                 2199 	ld	l,c
   09DD 60                 2200 	ld	h,b
   09DE 5E                 2201 	ld	e,(hl)
   09DF 23                 2202 	inc	hl
   09E0 56                 2203 	ld	d,(hl)
   09E1 21 60 00           2204 	ld	hl,#0x0060
   09E4 19                 2205 	add	hl,de
   09E5 EB                 2206 	ex	de,hl
   09E6 69                 2207 	ld	l,c
   09E7 60                 2208 	ld	h,b
   09E8 73                 2209 	ld	(hl),e
   09E9 23                 2210 	inc	hl
   09EA 72                 2211 	ld	(hl),d
                           2212 ;sprites.c:184: spr_reg.x +=  16;  // + wide left border
   09EB 21 10 00           2213 	ld	hl,#0x0010
   09EE 19                 2214 	add	hl,de
   09EF EB                 2215 	ex	de,hl
   09F0 69                 2216 	ld	l,c
   09F1 60                 2217 	ld	h,b
   09F2 73                 2218 	ld	(hl),e
   09F3 23                 2219 	inc	hl
   09F4 72                 2220 	ld	(hl),d
                           2221 ;sprites.c:186: spr_reg.y +=  Y_WINDOW_START*8 + 1;
   09F5 21r2Es03           2222 	ld	hl,#_spr_reg + 3
   09F8 DD 75 FE           2223 	ld	-2 (ix),l
   09FB DD 74 FF           2224 	ld	-1 (ix),h
   09FE 4E                 2225 	ld	c,(hl)
   09FF 23                 2226 	inc	hl
   0A00 46                 2227 	ld	b,(hl)
   0A01 21 19 00           2228 	ld	hl,#0x0019
   0A04 09                 2229 	add	hl,bc
   0A05 DD 75 FC           2230 	ld	-4 (ix),l
   0A08 DD 74 FD           2231 	ld	-3 (ix),h
   0A0B DD 6E FE           2232 	ld	l,-2 (ix)
   0A0E DD 66 FF           2233 	ld	h,-1 (ix)
   0A11 DD 7E FC           2234 	ld	a,-4 (ix)
   0A14 77                 2235 	ld	(hl),a
   0A15 23                 2236 	inc	hl
   0A16 DD 7E FD           2237 	ld	a,-3 (ix)
   0A19 77                 2238 	ld	(hl),a
                           2239 ;sprites.c:189: spr_reg.reg_misc =
   0A1A 21r33s03           2240 	ld	hl,#_spr_reg + 8
   0A1D DD 75 FE           2241 	ld	-2 (ix),l
   0A20 DD 74 FF           2242 	ld	-1 (ix),h
                           2243 ;sprites.c:190: GET_WORD_9TH_BIT(spr_reg.x)      |
   0A23 7A                 2244 	ld	a,d
   0A24 E6 01              2245 	and	a,#0x01
   0A26 DD 77 FA           2246 	ld	-6 (ix),a
   0A29 DD 36 FB 00        2247 	ld	-5 (ix),#0x00
                           2248 ;sprites.c:191: GET_WORD_9TH_BIT(spr_reg.y) << 1 |
   0A2D DD 4E FC           2249 	ld	c,-4 (ix)
   0A30 DD 7E FD           2250 	ld	a,-3 (ix)
   0A33 E6 01              2251 	and	a,#0x01
   0A35 4F                 2252 	ld	c,a
   0A36 CB 21              2253 	sla	c
   0A38 06 00              2254 	ld	b,#0x00
   0A3A DD 7E FA           2255 	ld	a,-6 (ix)
   0A3D B1                 2256 	or	a,c
   0A3E DD 77 FA           2257 	ld	-6 (ix),a
   0A41 DD 7E FB           2258 	ld	a,-5 (ix)
   0A44 B0                 2259 	or	a,b
   0A45 DD 77 FB           2260 	ld	-5 (ix),a
                           2261 ;sprites.c:192: ((spr_reg.x_flip&1) << 3)        |
   0A48 01r32s03           2262 	ld	bc,#_spr_reg + 7
   0A4B 0A                 2263 	ld	a,(bc)
   0A4C E6 01              2264 	and	a,#0x01
   0A4E 07                 2265 	rlca
   0A4F 07                 2266 	rlca
   0A50 07                 2267 	rlca
   0A51 E6 F8              2268 	and	a,#0xF8
   0A53 4F                 2269 	ld	c,a
   0A54 06 00              2270 	ld	b,#0x00
   0A56 DD 7E FA           2271 	ld	a,-6 (ix)
   0A59 B1                 2272 	or	a,c
   0A5A DD 77 FA           2273 	ld	-6 (ix),a
   0A5D DD 7E FB           2274 	ld	a,-5 (ix)
   0A60 B0                 2275 	or	a,b
   0A61 DD 77 FB           2276 	ld	-5 (ix),a
                           2277 ;sprites.c:193: (spr_reg.height << 4)
   0A64 01r30s03           2278 	ld	bc,#_spr_reg + 5
   0A67 0A                 2279 	ld	a,(bc)
   0A68 07                 2280 	rlca
   0A69 07                 2281 	rlca
   0A6A 07                 2282 	rlca
   0A6B 07                 2283 	rlca
   0A6C E6 F0              2284 	and	a,#0xF0
   0A6E 06 00              2285 	ld	b,#0x00
   0A70 DD B6 FA           2286 	or	a,-6 (ix)
   0A73 4F                 2287 	ld	c,a
   0A74 78                 2288 	ld	a,b
   0A75 DD B6 FB           2289 	or	a,-5 (ix)
   0A78 DD 71 FA           2290 	ld	-6 (ix),c
   0A7B DD 6E FE           2291 	ld	l,-2 (ix)
   0A7E DD 66 FF           2292 	ld	h,-1 (ix)
   0A81 DD 7E FA           2293 	ld	a,-6 (ix)
   0A84 77                 2294 	ld	(hl),a
                           2295 ;sprites.c:203: p = (byte*)(SPR_REGISTERS + (spr_reg.sprite_number*4)
   0A85 21r2Bs03           2296 	ld	hl,#_spr_reg
   0A88 46                 2297 	ld	b,(hl)
   0A89 48                 2298 	ld	c,b
   0A8A 06 00              2299 	ld	b,#0x00
   0A8C CB 21              2300 	sla	c
   0A8E CB 10              2301 	rl	b
   0A90 CB 21              2302 	sla	c
   0A92 CB 10              2303 	rl	b
   0A94 21 00 04           2304 	ld	hl,#0x0400
   0A97 09                 2305 	add	hl,bc
   0A98 DD 75 FE           2306 	ld	-2 (ix),l
   0A9B DD 74 FF           2307 	ld	-1 (ix),h
                           2308 ;sprites.c:204: + (game.shadow_sprite_register_bank*0x100U));       // add offset of shadow sprite register bank
   0A9E 21rF4s02           2309 	ld	hl,#_game + 12
   0AA1 4E                 2310 	ld	c,(hl)
   0AA2 41                 2311 	ld	b,c
   0AA3 0E 00              2312 	ld	c,#0x00
   0AA5 DD 7E FE           2313 	ld	a,-2 (ix)
   0AA8 81                 2314 	add	a,c
   0AA9 4F                 2315 	ld	c,a
   0AAA DD 7E FF           2316 	ld	a,-1 (ix)
   0AAD 88                 2317 	adc	a,b
   0AAE 47                 2318 	ld	b,a
                           2319 ;sprites.c:206: *p =  (byte) spr_reg.x;                     p++;
   0AAF 7B                 2320 	ld	a,e
   0AB0 02                 2321 	ld	(bc),a
   0AB1 03                 2322 	inc	bc
                           2323 ;sprites.c:207: *p =         spr_reg.reg_misc;              p++;
   0AB2 DD 7E FA           2324 	ld	a,-6 (ix)
   0AB5 02                 2325 	ld	(bc),a
   0AB6 03                 2326 	inc	bc
                           2327 ;sprites.c:208: *p =  (byte) spr_reg.y;                     p++;
   0AB7 DD 7E FC           2328 	ld	a,-4 (ix)
   0ABA 02                 2329 	ld	(bc),a
   0ABB 03                 2330 	inc	bc
                           2331 ;sprites.c:209: *p =         spr_reg.sprite_definition_number;
   0ABC 11r31s03           2332 	ld	de,#_spr_reg + 6
   0ABF 1A                 2333 	ld	a,(de)
   0AC0 02                 2334 	ld	(bc),a
   0AC1 DD F9              2335 	ld	sp,ix
   0AC3 DD E1              2336 	pop	ix
   0AC5 C9                 2337 	ret
   0AC6                    2338 _set_sprite_regs_optimized_end::
                           2339 ;sprites.c:215: BOOL load_sprites(void)
                           2340 ;	---------------------------------
                           2341 ; Function load_sprites
                           2342 ; ---------------------------------
   0AC6                    2343 _load_sprites_start::
   0AC6                    2344 _load_sprites:
                           2345 ;sprites.c:218: char *pFilename = SPRITES_FILENAME;
                           2346 ;sprites.c:224: ChunkLoader_Init(pFilename, /*&myFile,*/ (byte*)BUF_FOR_LOADING_SPRITES_4KB, PONG_BANK);
   0AC6 3E 00              2347 	ld	a,#0x00
   0AC8 F5                 2348 	push	af
   0AC9 33                 2349 	inc	sp
   0ACA 21 00 F0           2350 	ld	hl,#0xF000
   0ACD E5                 2351 	push	hl
   0ACE 21r1As0B           2352 	ld	hl,#__str_7
   0AD1 E5                 2353 	push	hl
   0AD2 CDr05s04           2354 	call	_ChunkLoader_Init
   0AD5 F1                 2355 	pop	af
   0AD6 F1                 2356 	pop	af
   0AD7 33                 2357 	inc	sp
                           2358 ;sprites.c:226: while(!ChunkLoader_IsDone()) {
   0AD8 0E 00              2359 	ld	c,#0x00
   0ADA                    2360 00103$:
   0ADA C5                 2361 	push	bc
   0ADB CDr7Cs05           2362 	call	_ChunkLoader_IsDone
   0ADE 7D                 2363 	ld	a,l
   0ADF C1                 2364 	pop	bc
   0AE0 47                 2365 	ld	b,a
   0AE1 B7                 2366 	or	a,a
   0AE2 20 33              2367 	jr	NZ,00105$
                           2368 ;sprites.c:227: if(!ChunkLoader_LoadChunk())
   0AE4 C5                 2369 	push	bc
   0AE5 CDr4Es04           2370 	call	_ChunkLoader_LoadChunk
   0AE8 7D                 2371 	ld	a,l
   0AE9 C1                 2372 	pop	bc
   0AEA 47                 2373 	ld	b,a
                           2374 ;sprites.c:228: return FALSE;
   0AEB B7                 2375 	or	a,a
   0AEC 20 02              2376 	jr	NZ,00102$
   0AEE 6F                 2377 	ld	l,a
   0AEF C9                 2378 	ret
   0AF0                    2379 00102$:
                           2380 ;sprites.c:231: PAGE_IN_SPRITE_RAM();
   0AF0 DB 00              2381 	in	a,(_io__sys_mem_select)
   0AF2 F6 80              2382 	or	a,#0x80
   0AF4 D3 00              2383 	out	(_io__sys_mem_select),a
                           2384 ;sprites.c:232: SET_SPRITE_PAGE(sprite_page);
   0AF6 79                 2385 	ld	a,c
   0AF7 F6 80              2386 	or	a,#0x80
   0AF9 FD 21 06 02        2387 	ld	iy,#_mm__vreg_vidpage
   0AFD FD 77 00           2388 	ld	0 (iy),a
                           2389 ;sprites.c:233: memcpy((byte*)SPRITE_BASE, (byte*)BUF_FOR_LOADING_SPRITES_4KB, 0x1000);
   0B00 C5                 2390 	push	bc
   0B01 11 00 10           2391 	ld	de,#0x1000
   0B04 21 00 F0           2392 	ld	hl,#0xF000
   0B07 01 00 10           2393 	ld	bc,#0x1000
   0B0A ED B0              2394 	ldir
   0B0C C1                 2395 	pop	bc
                           2396 ;sprites.c:234: PAGE_OUT_SPRITE_RAM();
   0B0D DB 00              2397 	in	a,(_io__sys_mem_select)
   0B0F 47                 2398 	ld	b,a
   0B10 E6 7F              2399 	and	a,#0x7F
   0B12 D3 00              2400 	out	(_io__sys_mem_select),a
                           2401 ;sprites.c:236: sprite_page++;
   0B14 0C                 2402 	inc	c
   0B15 18 C3              2403 	jr	00103$
   0B17                    2404 00105$:
                           2405 ;sprites.c:239: return TRUE;
   0B17 2E 01              2406 	ld	l,#0x01
   0B19 C9                 2407 	ret
   0B1A                    2408 _load_sprites_end::
   0B1A                    2409 __str_7:
   0B1A 50 4F 4E 47 2E 53  2410 	.ascii "PONG.SPR"
        50 52
   0B22 00                 2411 	.db 0x00
                           2412 ;sprites.c:246: void wait_y_window(void)
                           2413 ;	---------------------------------
                           2414 ; Function wait_y_window
                           2415 ; ---------------------------------
   0B23                    2416 _wait_y_window_start::
   0B23                    2417 _wait_y_window:
                           2418 ;sprites.c:258: do{
   0B23                    2419 00101$:
                           2420 ;sprites.c:259: b = mm__vreg_read;
                           2421 ;sprites.c:260: } while( (b&4) == 0 );
   0B23 3A 00 07           2422 	ld	a,(#_mm__vreg_read+0)
   0B26 E6 04              2423 	and	a,#0x04
   0B28 28 F9              2424 	jr	Z,00101$
   0B2A C9                 2425 	ret
   0B2B                    2426 _wait_y_window_end::
                           2427 ;background.c:13: BOOL Background_LoadTiles(const char* pFilename, word vram_addr)
                           2428 ;	---------------------------------
                           2429 ; Function Background_LoadTiles
                           2430 ; ---------------------------------
   0B2B                    2431 _Background_LoadTiles_start::
   0B2B                    2432 _Background_LoadTiles:
   0B2B DD E5              2433 	push	ix
   0B2D DD 21 00 00        2434 	ld	ix,#0
   0B31 DD 39              2435 	add	ix,sp
   0B33 F5                 2436 	push	af
                           2437 ;background.c:15: byte video_page = vram_addr/0x20;
   0B34 DD 4E 06           2438 	ld	c,6 (ix)
   0B37 DD 46 07           2439 	ld	b,7 (ix)
   0B3A CB 38              2440 	srl	b
   0B3C CB 19              2441 	rr	c
   0B3E CB 38              2442 	srl	b
   0B40 CB 19              2443 	rr	c
   0B42 CB 38              2444 	srl	b
   0B44 CB 19              2445 	rr	c
   0B46 CB 38              2446 	srl	b
   0B48 CB 19              2447 	rr	c
   0B4A CB 38              2448 	srl	b
   0B4C CB 19              2449 	rr	c
                           2450 ;background.c:16: word video_offset = (vram_addr&0x1F) * 0x100;
   0B4E DD 7E 06           2451 	ld	a,6 (ix)
   0B51 E6 1F              2452 	and	a,#0x1F
   0B53 DD 77 FF           2453 	ld	-1 (ix),a
                           2454 ;background.c:17: if(video_offset!=0 && video_offset!=0x1000) return FALSE;
   0B56 DD 36 FE 00        2455 	ld	-2 (ix),#0x00
   0B5A 3E 00              2456 	ld	a, #0x00
   0B5C DD B6 FF           2457 	or	a,-1 (ix)
   0B5F 28 12              2458 	jr	Z,00102$
   0B61 DD 7E FE           2459 	ld	a,-2 (ix)
   0B64 B7                 2460 	or	a,a
   0B65 20 07              2461 	jr	NZ,00120$
   0B67 DD 7E FF           2462 	ld	a,-1 (ix)
   0B6A D6 10              2463 	sub	a,#0x10
   0B6C 28 05              2464 	jr	Z,00102$
   0B6E                    2465 00120$:
   0B6E 2E 00              2466 	ld	l,#0x00
   0B70 C3rFAs0B           2467 	jp	00111$
   0B73                    2468 00102$:
                           2469 ;background.c:22: ChunkLoader_Init(pFilename,/*&myFile,*/ (byte*)BUF_FOR_LOADING_BACKGROUND_4KB, 0);
   0B73 C5                 2470 	push	bc
   0B74 3E 00              2471 	ld	a,#0x00
   0B76 F5                 2472 	push	af
   0B77 33                 2473 	inc	sp
   0B78 21 00 F0           2474 	ld	hl,#0xF000
   0B7B E5                 2475 	push	hl
   0B7C DD 6E 04           2476 	ld	l,4 (ix)
   0B7F DD 66 05           2477 	ld	h,5 (ix)
   0B82 E5                 2478 	push	hl
   0B83 CDr05s04           2479 	call	_ChunkLoader_Init
   0B86 F1                 2480 	pop	af
   0B87 F1                 2481 	pop	af
   0B88 33                 2482 	inc	sp
   0B89 C1                 2483 	pop	bc
                           2484 ;background.c:24: while(!ChunkLoader_IsDone()) {
   0B8A                    2485 00108$:
   0B8A C5                 2486 	push	bc
   0B8B CDr7Cs05           2487 	call	_ChunkLoader_IsDone
   0B8E 7D                 2488 	ld	a,l
   0B8F C1                 2489 	pop	bc
   0B90 47                 2490 	ld	b,a
   0B91 B7                 2491 	or	a,a
   0B92 C2rF8s0B           2492 	jp	NZ,00110$
                           2493 ;background.c:25: if(!ChunkLoader_LoadChunk())
   0B95 C5                 2494 	push	bc
   0B96 CDr4Es04           2495 	call	_ChunkLoader_LoadChunk
   0B99 7D                 2496 	ld	a,l
   0B9A C1                 2497 	pop	bc
   0B9B 47                 2498 	ld	b,a
                           2499 ;background.c:26: return FALSE;
   0B9C B7                 2500 	or	a,a
   0B9D 20 03              2501 	jr	NZ,00105$
   0B9F 6F                 2502 	ld	l,a
   0BA0 18 58              2503 	jr	00111$
   0BA2                    2504 00105$:
                           2505 ;background.c:29: PAGE_IN_VIDEO_RAM();
   0BA2 DB 00              2506 	in	a,(_io__sys_mem_select)
   0BA4 F6 40              2507 	or	a,#0x40
   0BA6 D3 00              2508 	out	(_io__sys_mem_select),a
                           2509 ;background.c:30: SET_VIDEO_PAGE(video_page);
   0BA8 FD 21 06 02        2510 	ld	iy,#_mm__vreg_vidpage
   0BAC FD 71 00           2511 	ld	0 (iy),c
                           2512 ;background.c:31: memcpy((byte*)(VIDEO_BASE + video_offset), (byte*)BUF_FOR_LOADING_BACKGROUND_4KB, 0x1000);
   0BAF DD 7E FE           2513 	ld	a,-2 (ix)
   0BB2 C6 00              2514 	add	a,#0x00
   0BB4 47                 2515 	ld	b,a
   0BB5 DD 7E FF           2516 	ld	a,-1 (ix)
   0BB8 CE 20              2517 	adc	a,#0x20
   0BBA 5F                 2518 	ld	e,a
   0BBB 68                 2519 	ld	l,b
   0BBC 67                 2520 	ld	h,a
   0BBD C5                 2521 	push	bc
   0BBE EB                 2522 	ex	de,hl
   0BBF 21 00 F0           2523 	ld	hl,#0xF000
   0BC2 01 00 10           2524 	ld	bc,#0x1000
   0BC5 ED B0              2525 	ldir
   0BC7 C1                 2526 	pop	bc
                           2527 ;background.c:32: PAGE_OUT_VIDEO_RAM();
   0BC8 DB 00              2528 	in	a,(_io__sys_mem_select)
   0BCA 47                 2529 	ld	b,a
   0BCB E6 BF              2530 	and	a,#0xBF
   0BCD D3 00              2531 	out	(_io__sys_mem_select),a
                           2532 ;background.c:35: video_offset += 0x1000;
   0BCF DD 7E FE           2533 	ld	a,-2 (ix)
   0BD2 C6 00              2534 	add	a,#0x00
   0BD4 DD 77 FE           2535 	ld	-2 (ix),a
   0BD7 DD 7E FF           2536 	ld	a,-1 (ix)
   0BDA CE 10              2537 	adc	a,#0x10
   0BDC DD 77 FF           2538 	ld	-1 (ix),a
                           2539 ;background.c:36: if(video_offset >= 0x2000) {
   0BDF DD 7E FE           2540 	ld	a,-2 (ix)
   0BE2 D6 00              2541 	sub	a,#0x00
   0BE4 DD 7E FF           2542 	ld	a,-1 (ix)
   0BE7 DE 20              2543 	sbc	a,#0x20
   0BE9 DAr8As0B           2544 	jp	C,00108$
                           2545 ;background.c:37: video_offset = 0;
   0BEC DD 36 FE 00        2546 	ld	-2 (ix),#0x00
   0BF0 DD 36 FF 00        2547 	ld	-1 (ix),#0x00
                           2548 ;background.c:38: video_page++;
   0BF4 0C                 2549 	inc	c
   0BF5 C3r8As0B           2550 	jp	00108$
   0BF8                    2551 00110$:
                           2552 ;background.c:42: return TRUE;
   0BF8 2E 01              2553 	ld	l,#0x01
   0BFA                    2554 00111$:
   0BFA DD F9              2555 	ld	sp,ix
   0BFC DD E1              2556 	pop	ix
   0BFE C9                 2557 	ret
   0BFF                    2558 _Background_LoadTiles_end::
                           2559 ;background.c:45: void TileMap_FillTileDefinition(word tileNumber, byte fillValue)
                           2560 ;	---------------------------------
                           2561 ; Function TileMap_FillTileDefinition
                           2562 ; ---------------------------------
   0BFF                    2563 _TileMap_FillTileDefinition_start::
   0BFF                    2564 _TileMap_FillTileDefinition:
   0BFF DD E5              2565 	push	ix
   0C01 DD 21 00 00        2566 	ld	ix,#0
   0C05 DD 39              2567 	add	ix,sp
                           2568 ;background.c:48: byte video_page   = tileNumber/0x20;
   0C07 DD 4E 04           2569 	ld	c,4 (ix)
   0C0A DD 46 05           2570 	ld	b,5 (ix)
   0C0D CB 38              2571 	srl	b
   0C0F CB 19              2572 	rr	c
   0C11 CB 38              2573 	srl	b
   0C13 CB 19              2574 	rr	c
   0C15 CB 38              2575 	srl	b
   0C17 CB 19              2576 	rr	c
   0C19 CB 38              2577 	srl	b
   0C1B CB 19              2578 	rr	c
   0C1D CB 38              2579 	srl	b
   0C1F CB 19              2580 	rr	c
                           2581 ;background.c:49: word video_offset = (tileNumber&0x1F) * 0x100;
   0C21 DD 7E 04           2582 	ld	a,4 (ix)
   0C24 E6 1F              2583 	and	a,#0x1F
   0C26 5F                 2584 	ld	e,a
   0C27 53                 2585 	ld	d,e
   0C28 1E 00              2586 	ld	e,#0x00
                           2587 ;background.c:51: PAGE_IN_VIDEO_RAM();
   0C2A DB 00              2588 	in	a,(_io__sys_mem_select)
   0C2C F6 40              2589 	or	a,#0x40
   0C2E D3 00              2590 	out	(_io__sys_mem_select),a
                           2591 ;background.c:52: SET_VIDEO_PAGE(video_page);
   0C30 21 06 02           2592 	ld	hl,#_mm__vreg_vidpage + 0
   0C33 71                 2593 	ld	(hl), c
                           2594 ;background.c:53: memset((byte*)(VIDEO_BASE) + video_offset, fillValue, 0x100); //fill tile def
   0C34 21 00 20           2595 	ld	hl,#0x2000
   0C37 19                 2596 	add	hl,de
   0C38 4D                 2597 	ld	c,l
   0C39 44                 2598 	ld	b,h
   0C3A 21 00 01           2599 	ld	hl,#0x0100
   0C3D E5                 2600 	push	hl
   0C3E DD 7E 06           2601 	ld	a,6 (ix)
   0C41 F5                 2602 	push	af
   0C42 33                 2603 	inc	sp
   0C43 C5                 2604 	push	bc
   0C44 CDr00s00           2605 	call	_memset
   0C47 F1                 2606 	pop	af
   0C48 F1                 2607 	pop	af
   0C49 33                 2608 	inc	sp
                           2609 ;background.c:54: PAGE_OUT_VIDEO_RAM();
   0C4A DB 00              2610 	in	a,(_io__sys_mem_select)
   0C4C 4F                 2611 	ld	c,a
   0C4D E6 BF              2612 	and	a,#0xBF
   0C4F D3 00              2613 	out	(_io__sys_mem_select),a
   0C51 DD E1              2614 	pop	ix
   0C53 C9                 2615 	ret
   0C54                    2616 _TileMap_FillTileDefinition_end::
                           2617 ;background.c:58: void TileMap_Clear(void)
                           2618 ;	---------------------------------
                           2619 ; Function TileMap_Clear
                           2620 ; ---------------------------------
   0C54                    2621 _TileMap_Clear_start::
   0C54                    2622 _TileMap_Clear:
                           2623 ;background.c:66: TileMap_FillTileDefinition(2047, 0);
   0C54 3E 00              2624 	ld	a,#0x00
   0C56 F5                 2625 	push	af
   0C57 33                 2626 	inc	sp
   0C58 21 FF 07           2627 	ld	hl,#0x07FF
   0C5B E5                 2628 	push	hl
   0C5C CDrFFs0B           2629 	call	_TileMap_FillTileDefinition
   0C5F F1                 2630 	pop	af
   0C60 33                 2631 	inc	sp
                           2632 ;background.c:67: TileMap_Fill(2047);
   0C61 21 FF 07           2633 	ld	hl,#0x07FF
   0C64 E5                 2634 	push	hl
   0C65 CDr6As0C           2635 	call	_TileMap_Fill
   0C68 F1                 2636 	pop	af
   0C69 C9                 2637 	ret
   0C6A                    2638 _TileMap_Clear_end::
                           2639 ;background.c:73: void TileMap_Fill(word tileNumber)
                           2640 ;	---------------------------------
                           2641 ; Function TileMap_Fill
                           2642 ; ---------------------------------
   0C6A                    2643 _TileMap_Fill_start::
   0C6A                    2644 _TileMap_Fill:
   0C6A DD E5              2645 	push	ix
   0C6C DD 21 00 00        2646 	ld	ix,#0
   0C70 DD 39              2647 	add	ix,sp
                           2648 ;background.c:75: PAGE_IN_VIDEO_RAM();
   0C72 DB 00              2649 	in	a,(_io__sys_mem_select)
   0C74 F6 40              2650 	or	a,#0x40
   0C76 D3 00              2651 	out	(_io__sys_mem_select),a
                           2652 ;background.c:76: SET_VIDEO_PAGE(TILEMAPS_VIDEO_PAGE);
   0C78 21 06 02           2653 	ld	hl,#_mm__vreg_vidpage + 0
   0C7B 36 38              2654 	ld	(hl), #0x38
                           2655 ;background.c:77: memset((byte*)(VIDEO_BASE),         (byte)tileNumber,           0x200); //LSB
   0C7D DD 4E 04           2656 	ld	c,4 (ix)
   0C80 21 00 02           2657 	ld	hl,#0x0200
   0C83 E5                 2658 	push	hl
   0C84 79                 2659 	ld	a,c
   0C85 F5                 2660 	push	af
   0C86 33                 2661 	inc	sp
   0C87 26 20              2662 	ld	h, #0x20
   0C89 E5                 2663 	push	hl
   0C8A CDr00s00           2664 	call	_memset
   0C8D F1                 2665 	pop	af
   0C8E F1                 2666 	pop	af
   0C8F 33                 2667 	inc	sp
                           2668 ;background.c:78: memset((byte*)(VIDEO_BASE+0x800),   (byte)(tileNumber >> 8),    0x200); //MSB
   0C90 DD 4E 05           2669 	ld	c,5 (ix)
   0C93 21 00 02           2670 	ld	hl,#0x0200
   0C96 E5                 2671 	push	hl
   0C97 79                 2672 	ld	a,c
   0C98 F5                 2673 	push	af
   0C99 33                 2674 	inc	sp
   0C9A 26 28              2675 	ld	h, #0x28
   0C9C E5                 2676 	push	hl
   0C9D CDr00s00           2677 	call	_memset
   0CA0 F1                 2678 	pop	af
   0CA1 F1                 2679 	pop	af
   0CA2 33                 2680 	inc	sp
                           2681 ;background.c:79: PAGE_OUT_VIDEO_RAM();
   0CA3 DB 00              2682 	in	a,(_io__sys_mem_select)
   0CA5 4F                 2683 	ld	c,a
   0CA6 E6 BF              2684 	and	a,#0xBF
   0CA8 D3 00              2685 	out	(_io__sys_mem_select),a
   0CAA DD E1              2686 	pop	ix
   0CAC C9                 2687 	ret
   0CAD                    2688 _TileMap_Fill_end::
                           2689 ;background.c:85: void Background_InitTilemap(word firstTileDef)
                           2690 ;	---------------------------------
                           2691 ; Function Background_InitTilemap
                           2692 ; ---------------------------------
   0CAD                    2693 _Background_InitTilemap_start::
   0CAD                    2694 _Background_InitTilemap:
   0CAD DD E5              2695 	push	ix
   0CAF DD 21 00 00        2696 	ld	ix,#0
   0CB3 DD 39              2697 	add	ix,sp
   0CB5 21 F8 FF           2698 	ld	hl,#-8
   0CB8 39                 2699 	add	hl,sp
   0CB9 F9                 2700 	ld	sp,hl
                           2701 ;background.c:91: PAGE_IN_VIDEO_RAM();
   0CBA DB 00              2702 	in	a,(_io__sys_mem_select)
   0CBC F6 40              2703 	or	a,#0x40
   0CBE D3 00              2704 	out	(_io__sys_mem_select),a
                           2705 ;background.c:92: SET_VIDEO_PAGE(TILEMAPS_VIDEO_PAGE);
   0CC0 FD 21 06 02        2706 	ld	iy,#_mm__vreg_vidpage
   0CC4 FD 36 00 38        2707 	ld	0 (iy),#0x38
                           2708 ;background.c:94: for(y=0; y<240/16; y++)
   0CC8 DD 36 FE 00        2709 	ld	-2 (ix),#0x00
   0CCC DD 36 F8 00        2710 	ld	-8 (ix),#0x00
   0CD0 DD 36 F9 00        2711 	ld	-7 (ix),#0x00
   0CD4                    2712 00105$:
   0CD4 DD 7E FE           2713 	ld	a,-2 (ix)
   0CD7 D6 0F              2714 	sub	a,#0x0F
   0CD9 D2r61s0D           2715 	jp	NC,00108$
                           2716 ;background.c:95: for(x=0; x<368/16; x++) {
   0CDC DD 7E 04           2717 	ld	a,4 (ix)
   0CDF DD 86 F8           2718 	add	a,-8 (ix)
   0CE2 DD 77 FA           2719 	ld	-6 (ix),a
   0CE5 DD 7E 05           2720 	ld	a,5 (ix)
   0CE8 DD 8E F9           2721 	adc	a,-7 (ix)
   0CEB DD 77 FB           2722 	ld	-5 (ix),a
   0CEE DD 36 FF 00        2723 	ld	-1 (ix),#0x00
   0CF2                    2724 00101$:
   0CF2 DD 7E FF           2725 	ld	a,-1 (ix)
   0CF5 D6 17              2726 	sub	a,#0x17
   0CF7 D2r4Bs0D           2727 	jp	NC,00107$
                           2728 ;background.c:96: tile_num = firstTileDef + (y*(368/16)) + x;
   0CFA DD 4E FF           2729 	ld	c,-1 (ix)
   0CFD 06 00              2730 	ld	b,#0x00
   0CFF DD 7E FA           2731 	ld	a,-6 (ix)
   0D02 81                 2732 	add	a,c
   0D03 5F                 2733 	ld	e,a
   0D04 DD 7E FB           2734 	ld	a,-5 (ix)
   0D07 88                 2735 	adc	a,b
   0D08 57                 2736 	ld	d,a
   0D09 DD 73 FC           2737 	ld	-4 (ix),e
   0D0C DD 72 FD           2738 	ld	-3 (ix),d
                           2739 ;background.c:97: p = (byte*)(VIDEO_BASE + (y*TILE_MAP_WIDTH_IN_BLOCKS) + x);
   0D0F DD 5E FE           2740 	ld	e,-2 (ix)
   0D12 16 00              2741 	ld	d,#0x00
   0D14 CB 23              2742 	sla	e
   0D16 CB 12              2743 	rl	d
   0D18 CB 23              2744 	sla	e
   0D1A CB 12              2745 	rl	d
   0D1C CB 23              2746 	sla	e
   0D1E CB 12              2747 	rl	d
   0D20 CB 23              2748 	sla	e
   0D22 CB 12              2749 	rl	d
   0D24 CB 23              2750 	sla	e
   0D26 CB 12              2751 	rl	d
   0D28 21 00 20           2752 	ld	hl,#0x2000
   0D2B 19                 2753 	add	hl,de
   0D2C EB                 2754 	ex	de,hl
   0D2D 7B                 2755 	ld	a,e
   0D2E 81                 2756 	add	a,c
   0D2F 4F                 2757 	ld	c,a
   0D30 7A                 2758 	ld	a,d
   0D31 88                 2759 	adc	a,b
   0D32 47                 2760 	ld	b,a
                           2761 ;background.c:99: p++;
   0D33 03                 2762 	inc	bc
                           2763 ;background.c:101: *p         = tile_num & 0xFF;
   0D34 DD 7E FC           2764 	ld	a,-4 (ix)
   0D37 02                 2765 	ld	(bc),a
                           2766 ;background.c:102: *(p+0x800) = tile_num >> 8;
   0D38 21 00 08           2767 	ld	hl,#0x0800
   0D3B 09                 2768 	add	hl,bc
   0D3C 4D                 2769 	ld	c,l
   0D3D 44                 2770 	ld	b,h
   0D3E DD 5E FD           2771 	ld	e,-3 (ix)
   0D41 16 00              2772 	ld	d,#0x00
   0D43 7B                 2773 	ld	a,e
   0D44 02                 2774 	ld	(bc),a
                           2775 ;background.c:95: for(x=0; x<368/16; x++) {
   0D45 DD 34 FF           2776 	inc	-1 (ix)
   0D48 C3rF2s0C           2777 	jp	00101$
   0D4B                    2778 00107$:
                           2779 ;background.c:94: for(y=0; y<240/16; y++)
   0D4B DD 7E F8           2780 	ld	a,-8 (ix)
   0D4E C6 17              2781 	add	a,#0x17
   0D50 DD 77 F8           2782 	ld	-8 (ix),a
   0D53 DD 7E F9           2783 	ld	a,-7 (ix)
   0D56 CE 00              2784 	adc	a,#0x00
   0D58 DD 77 F9           2785 	ld	-7 (ix),a
   0D5B DD 34 FE           2786 	inc	-2 (ix)
   0D5E C3rD4s0C           2787 	jp	00105$
   0D61                    2788 00108$:
                           2789 ;background.c:105: PAGE_OUT_VIDEO_RAM();
   0D61 DB 00              2790 	in	a,(_io__sys_mem_select)
   0D63 4F                 2791 	ld	c,a
   0D64 E6 BF              2792 	and	a,#0xBF
   0D66 D3 00              2793 	out	(_io__sys_mem_select),a
   0D68 DD F9              2794 	ld	sp,ix
   0D6A DD E1              2795 	pop	ix
   0D6C C9                 2796 	ret
   0D6D                    2797 _Background_InitTilemap_end::
                           2798 ;keyboard.c:38: void Input_ClearPlayersInput(void)
                           2799 ;	---------------------------------
                           2800 ; Function Input_ClearPlayersInput
                           2801 ; ---------------------------------
   0D6D                    2802 _Input_ClearPlayersInput_start::
   0D6D                    2803 _Input_ClearPlayersInput:
                           2804 ;keyboard.c:40: player1_input.up = player1_input.down = player1_input.fire1 = FALSE;
   0D6D 01r35s03           2805 	ld	bc,#_player1_input + 1
   0D70 11r36s03           2806 	ld	de,#_player1_input + 2
   0D73 3E 00              2807 	ld	a,#0x00
   0D75 12                 2808 	ld	(de),a
   0D76 02                 2809 	ld	(bc),a
   0D77 21r34s03           2810 	ld	hl,#_player1_input
   0D7A 36 00              2811 	ld	(hl),#0x00
                           2812 ;keyboard.c:41: player2_input.up = player2_input.down = player2_input.fire1 = FALSE;
   0D7C 01r39s03           2813 	ld	bc,#_player2_input + 1
   0D7F 11r3As03           2814 	ld	de,#_player2_input + 2
   0D82 3E 00              2815 	ld	a,#0x00
   0D84 12                 2816 	ld	(de),a
   0D85 02                 2817 	ld	(bc),a
   0D86 21r38s03           2818 	ld	hl,#_player2_input
   0D89 36 00              2819 	ld	(hl),#0x00
   0D8B C9                 2820 	ret
   0D8C                    2821 _Input_ClearPlayersInput_end::
                           2822 ;keyboard.c:44: void Keyboard_Init(void)
                           2823 ;	---------------------------------
                           2824 ; Function Keyboard_Init
                           2825 ; ---------------------------------
   0D8C                    2826 _Keyboard_Init_start::
   0D8C                    2827 _Keyboard_Init:
                           2828 ;keyboard.c:46: DI();
   0D8C F3                 2829 		di 
                           2830 ;keyboard.c:47: keyboard.is_looking_for_second_byte_of_scancode = FALSE;
   0D8D 21r3Cs03           2831 	ld	hl,#_keyboard
   0D90 36 00              2832 	ld	(hl),#0x00
                           2833 ;keyboard.c:48: keyboard.prev_pressed_scancode = 0;
   0D92 01r3Es03           2834 	ld	bc,#_keyboard + 2
   0D95 3E 00              2835 	ld	a,#0x00
   0D97 02                 2836 	ld	(bc),a
                           2837 ;keyboard.c:49: EI();
   0D98 FB                 2838 		ei 
   0D99 C9                 2839 	ret
   0D9A                    2840 _Keyboard_Init_end::
                           2841 ;keyboard.c:52: byte Keyboard_GetLastPressedScancode(void)
                           2842 ;	---------------------------------
                           2843 ; Function Keyboard_GetLastPressedScancode
                           2844 ; ---------------------------------
   0D9A                    2845 _Keyboard_GetLastPressedScancode_start::
   0D9A                    2846 _Keyboard_GetLastPressedScancode:
                           2847 ;keyboard.c:54: return keyboard.prev_pressed_scancode;
   0D9A 21r3Es03           2848 	ld	hl,#_keyboard + 2
   0D9D 6E                 2849 	ld	l,(hl)
   0D9E C9                 2850 	ret
   0D9F                    2851 _Keyboard_GetLastPressedScancode_end::
                           2852 ;keyboard.c:57: void Keyboard_IRQ_Handler()
                           2853 ;	---------------------------------
                           2854 ; Function Keyboard_IRQ_Handler
                           2855 ; ---------------------------------
   0D9F                    2856 _Keyboard_IRQ_Handler_start::
   0D9F                    2857 _Keyboard_IRQ_Handler:
   0D9F DD E5              2858 	push	ix
   0DA1 DD 21 00 00        2859 	ld	ix,#0
   0DA5 DD 39              2860 	add	ix,sp
   0DA7 21 F2 FF           2861 	ld	hl,#-14
   0DAA 39                 2862 	add	hl,sp
   0DAB F9                 2863 	ld	sp,hl
                           2864 ;keyboard.c:63: scancode = io__sys_keyboard_data;
   0DAC DB 02              2865 	in	a,(_io__sys_keyboard_data)
                           2866 ;keyboard.c:65: if(scancode == 0xF0) {
   0DAE DD 77 FF           2867 	ld	-1 (ix),a
   0DB1 D6 F0              2868 	sub	a,#0xF0
   0DB3 20 08              2869 	jr	NZ,00102$
                           2870 ;keyboard.c:66: keyboard.is_looking_for_second_byte_of_scancode = TRUE;
   0DB5 21r3Cs03           2871 	ld	hl,#_keyboard
   0DB8 36 01              2872 	ld	(hl),#0x01
                           2873 ;keyboard.c:68: return;
   0DBA C3rF9s0E           2874 	jp	00129$
   0DBD                    2875 00102$:
                           2876 ;keyboard.c:71: if(keyboard.is_looking_for_second_byte_of_scancode) {
   0DBD 21r3Cs03           2877 	ld	hl,#_keyboard
   0DC0 7E                 2878 	ld	a,(hl)
   0DC1 B7                 2879 	or	a,a
   0DC2 CAr0Es0E           2880 	jp	Z,00108$
                           2881 ;keyboard.c:72: keyboard.is_looking_for_second_byte_of_scancode = FALSE;
   0DC5 36 00              2882 	ld	(hl),#0x00
                           2883 ;keyboard.c:74: table = keyboard_input_map;
   0DC7 0Er3F              2884 	ld	c,#<_keyboard_input_map
   0DC9 16s03              2885 	ld	d,#>_keyboard_input_map
                           2886 ;keyboard.c:75: for(i=0; i<sizeof(keyboard_input_map)/sizeof(keyboard_input_map[0]); i++) {
   0DCB 41                 2887 	ld	b,c
   0DCC 5A                 2888 	ld	e,d
   0DCD DD 36 FE 07        2889 	ld	-2 (ix),#0x07
   0DD1                    2890 00125$:
                           2891 ;keyboard.c:76: if(scancode == table->scancode)
   0DD1 68                 2892 	ld	l,b
   0DD2 63                 2893 	ld	h,e
   0DD3 56                 2894 	ld	d,(hl)
   0DD4 DD 7E FF           2895 	ld	a,-1 (ix)
   0DD7 92                 2896 	sub	d
   0DD8 20 0F              2897 	jr	NZ,00104$
                           2898 ;keyboard.c:77: *(table->pVar) = FALSE;
   0DDA 78                 2899 	ld	a,b
   0DDB C6 01              2900 	add	a,#0x01
   0DDD 6F                 2901 	ld	l,a
   0DDE 7B                 2902 	ld	a,e
   0DDF CE 00              2903 	adc	a,#0x00
   0DE1 67                 2904 	ld	h,a
   0DE2 56                 2905 	ld	d,(hl)
   0DE3 23                 2906 	inc	hl
   0DE4 4E                 2907 	ld	c,(hl)
   0DE5 6A                 2908 	ld	l,d
   0DE6 61                 2909 	ld	h,c
   0DE7 36 00              2910 	ld	(hl),#0x00
   0DE9                    2911 00104$:
                           2912 ;keyboard.c:78: table++;
   0DE9 78                 2913 	ld	a,b
   0DEA C6 03              2914 	add	a,#0x03
   0DEC 47                 2915 	ld	b,a
   0DED 7B                 2916 	ld	a,e
   0DEE CE 00              2917 	adc	a,#0x00
   0DF0 5F                 2918 	ld	e,a
   0DF1 DD 35 FE           2919 	dec	-2 (ix)
                           2920 ;keyboard.c:75: for(i=0; i<sizeof(keyboard_input_map)/sizeof(keyboard_input_map[0]); i++) {
   0DF4 AF                 2921 	xor	a,a
   0DF5 DD B6 FE           2922 	or	a,-2 (ix)
   0DF8 20 D7              2923 	jr	NZ,00125$
                           2924 ;keyboard.c:81: if(scancode == keyboard.prev_pressed_scancode)
   0DFA 21r3Es03           2925 	ld	hl,#_keyboard + 2
   0DFD 4E                 2926 	ld	c,(hl)
   0DFE DD 7E FF           2927 	ld	a,-1 (ix)
   0E01 91                 2928 	sub	c
   0E02 20 07              2929 	jr	NZ,00106$
                           2930 ;keyboard.c:82: keyboard.last_typed_scancode = scancode;
   0E04 01r3Ds03           2931 	ld	bc,#_keyboard + 1
   0E07 DD 7E FF           2932 	ld	a,-1 (ix)
   0E0A 02                 2933 	ld	(bc),a
   0E0B                    2934 00106$:
                           2935 ;keyboard.c:84: return;
   0E0B C3rF9s0E           2936 	jp	00129$
   0E0E                    2937 00108$:
                           2938 ;keyboard.c:88: table = keyboard_input_map;
   0E0E 0Er3F              2939 	ld	c,#<_keyboard_input_map
   0E10 16s03              2940 	ld	d,#>_keyboard_input_map
                           2941 ;keyboard.c:89: for(i=0; i<sizeof(keyboard_input_map)/sizeof(keyboard_input_map[0]); i++) {
   0E12 21r35s03           2942 	ld	hl,#_player1_input + 1
   0E15 DD 75 F2           2943 	ld	-14 (ix),l
   0E18 DD 74 F3           2944 	ld	-13 (ix),h
   0E1B 23                 2945 	inc	hl
   0E1C DD 75 F4           2946 	ld	-12 (ix),l
   0E1F DD 74 F5           2947 	ld	-11 (ix),h
   0E22 21r39s03           2948 	ld	hl,#_player2_input + 1
   0E25 DD 75 FC           2949 	ld	-4 (ix),l
   0E28 DD 74 FD           2950 	ld	-3 (ix),h
   0E2B 23                 2951 	inc	hl
   0E2C DD 75 FA           2952 	ld	-6 (ix),l
   0E2F DD 74 FB           2953 	ld	-5 (ix),h
   0E32 21rEBs02           2954 	ld	hl,#_game + 3
   0E35 DD 75 F8           2955 	ld	-8 (ix),l
   0E38 DD 74 F9           2956 	ld	-7 (ix),h
   0E3B DD 71 F6           2957 	ld	-10 (ix),c
   0E3E DD 72 F7           2958 	ld	-9 (ix),d
   0E41 DD 36 FE 07        2959 	ld	-2 (ix),#0x07
   0E45                    2960 00128$:
                           2961 ;keyboard.c:90: if(scancode == table->scancode) {
   0E45 DD 6E F6           2962 	ld	l,-10 (ix)
   0E48 DD 66 F7           2963 	ld	h,-9 (ix)
   0E4B 56                 2964 	ld	d,(hl)
   0E4C DD 7E FF           2965 	ld	a,-1 (ix)
   0E4F 92                 2966 	sub	d
   0E50 C2rCCs0E           2967 	jp	NZ,00120$
                           2968 ;keyboard.c:91: *(table->pVar) = TRUE;
   0E53 DD 5E F6           2969 	ld	e,-10 (ix)
   0E56 DD 56 F7           2970 	ld	d,-9 (ix)
   0E59 EB                 2971 	ex	de,hl
   0E5A 23                 2972 	inc	hl
   0E5B 5E                 2973 	ld	e,(hl)
   0E5C 23                 2974 	inc	hl
   0E5D 56                 2975 	ld	d,(hl)
   0E5E 3E 01              2976 	ld	a,#0x01
   0E60 12                 2977 	ld	(de),a
                           2978 ;keyboard.c:97: if(table->pVar == &player1_input.up || table->pVar == &player1_input.down ||
   0E61 C5                 2979 	push	bc
                           2980 ;	direct compare
   0E62 4B                 2981 	ld	c,e
   0E63 3Er34              2982 	ld	a,#<_player1_input
   0E65 91                 2983 	sub	c
   0E66 20 09              2984 	jr	NZ,00156$
                           2985 ;	direct compare
   0E68 4A                 2986 	ld	c,d
   0E69 3Es03              2987 	ld	a,#>_player1_input
   0E6B 91                 2988 	sub	c
   0E6C 20 03              2989 	jr	NZ,00156$
   0E6E C1                 2990 	pop	bc
   0E6F 18 1B              2991 	jr	00109$
   0E71                    2992 00156$:
   0E71 C1                 2993 	pop	bc
   0E72 7B                 2994 	ld	a,e
   0E73 DD 96 F2           2995 	sub	-14 (ix)
   0E76 20 06              2996 	jr	NZ,00157$
   0E78 7A                 2997 	ld	a,d
   0E79 DD 96 F3           2998 	sub	-13 (ix)
   0E7C 28 0E              2999 	jr	Z,00109$
   0E7E                    3000 00157$:
                           3001 ;keyboard.c:98: table->pVar == &player1_input.fire1)
   0E7E 7B                 3002 	ld	a,e
   0E7F DD 96 F4           3003 	sub	-12 (ix)
   0E82 20 06              3004 	jr	NZ,00158$
   0E84 7A                 3005 	ld	a,d
   0E85 DD 96 F5           3006 	sub	-11 (ix)
   0E88 28 02              3007 	jr	Z,00159$
   0E8A                    3008 00158$:
   0E8A 18 06              3009 	jr	00110$
   0E8C                    3010 00159$:
   0E8C                    3011 00109$:
                           3012 ;keyboard.c:99: player1_input.input_type = KEYBOARD;
   0E8C 01r37s03           3013 	ld	bc,#_player1_input + 3
   0E8F 3E 00              3014 	ld	a,#0x00
   0E91 02                 3015 	ld	(bc),a
   0E92                    3016 00110$:
                           3017 ;keyboard.c:101: if(!game.is_one_player_mode)
   0E92 DD 6E F8           3018 	ld	l,-8 (ix)
   0E95 DD 66 F9           3019 	ld	h,-7 (ix)
   0E98 7E                 3020 	ld	a,(hl)
   0E99 B7                 3021 	or	a,a
   0E9A 20 30              3022 	jr	NZ,00120$
                           3023 ;keyboard.c:102: if(table->pVar == &player2_input.up || table->pVar == &player2_input.down ||
   0E9C C5                 3024 	push	bc
                           3025 ;	direct compare
   0E9D 4B                 3026 	ld	c,e
   0E9E 3Er38              3027 	ld	a,#<_player2_input
   0EA0 91                 3028 	sub	c
   0EA1 20 09              3029 	jr	NZ,00160$
                           3030 ;	direct compare
   0EA3 4A                 3031 	ld	c,d
   0EA4 3Es03              3032 	ld	a,#>_player2_input
   0EA6 91                 3033 	sub	c
   0EA7 20 03              3034 	jr	NZ,00160$
   0EA9 C1                 3035 	pop	bc
   0EAA 18 1B              3036 	jr	00113$
   0EAC                    3037 00160$:
   0EAC C1                 3038 	pop	bc
   0EAD 7B                 3039 	ld	a,e
   0EAE DD 96 FC           3040 	sub	-4 (ix)
   0EB1 20 06              3041 	jr	NZ,00161$
   0EB3 7A                 3042 	ld	a,d
   0EB4 DD 96 FD           3043 	sub	-3 (ix)
   0EB7 28 0E              3044 	jr	Z,00113$
   0EB9                    3045 00161$:
                           3046 ;keyboard.c:103: table->pVar == &player2_input.fire1)
   0EB9 7B                 3047 	ld	a,e
   0EBA DD 96 FA           3048 	sub	-6 (ix)
   0EBD 20 06              3049 	jr	NZ,00162$
   0EBF 7A                 3050 	ld	a,d
   0EC0 DD 96 FB           3051 	sub	-5 (ix)
   0EC3 28 02              3052 	jr	Z,00163$
   0EC5                    3053 00162$:
   0EC5 18 05              3054 	jr	00120$
   0EC7                    3055 00163$:
   0EC7                    3056 00113$:
                           3057 ;keyboard.c:104: player2_input.input_type = KEYBOARD;
   0EC7 3E 00              3058 	ld	a,#0x00
   0EC9 32r3Bs03           3059 	ld	(#_player2_input + 3),a
   0ECC                    3060 00120$:
                           3061 ;keyboard.c:107: table++;
   0ECC DD 7E F6           3062 	ld	a,-10 (ix)
   0ECF C6 03              3063 	add	a,#0x03
   0ED1 DD 77 F6           3064 	ld	-10 (ix),a
   0ED4 DD 7E F7           3065 	ld	a,-9 (ix)
   0ED7 CE 00              3066 	adc	a,#0x00
   0ED9 DD 77 F7           3067 	ld	-9 (ix),a
                           3068 ;keyboard.c:108: keyboard.prev_pressed_scancode = scancode;   // remember last pressed scancode
   0EDC 01r3Es03           3069 	ld	bc,#_keyboard + 2
   0EDF DD 7E FF           3070 	ld	a,-1 (ix)
   0EE2 02                 3071 	ld	(bc),a
   0EE3 DD 35 FE           3072 	dec	-2 (ix)
                           3073 ;keyboard.c:89: for(i=0; i<sizeof(keyboard_input_map)/sizeof(keyboard_input_map[0]); i++) {
   0EE6 AF                 3074 	xor	a,a
   0EE7 DD B6 FE           3075 	or	a,-2 (ix)
   0EEA C2r45s0E           3076 	jp	NZ,00128$
                           3077 ;keyboard.c:112: if(scancode == SC_ESC)
   0EED DD 7E FF           3078 	ld	a,-1 (ix)
   0EF0 D6 76              3079 	sub	a,#0x76
   0EF2 20 05              3080 	jr	NZ,00129$
                           3081 ;keyboard.c:113: request_exit = TRUE;
   0EF4 21r1As03           3082 	ld	hl,#_request_exit + 0
   0EF7 36 01              3083 	ld	(hl), #0x01
   0EF9                    3084 00129$:
   0EF9 DD F9              3085 	ld	sp,ix
   0EFB DD E1              3086 	pop	ix
   0EFD C9                 3087 	ret
   0EFE                    3088 _Keyboard_IRQ_Handler_end::
                           3089 ;keyboard.c:120: void irq_handler() NAKED
                           3090 ;	---------------------------------
                           3091 ; Function irq_handler
                           3092 ; ---------------------------------
   0EFE                    3093 _irq_handler_start::
   0EFE                    3094 _irq_handler:
                           3095 ;keyboard.c:135: ENDASM()
                           3096 ;
   0EFE F5 C5 D5 E5 D9 F5  3097 		   push af push bc push de push hl exx push af push bc push de push hl exx push ix push iy
        C5 D5 E5 D9 DD E5
        FD E5
                           3098 	
   0F0C DB 01              3099 		   in a,(0x01) ; Read irq status flags
   0F0E CB 47              3100 		   bit 0,a ; keyboard irq set?
   0F10 C4r9Fs0D           3101 		   call nz,_Keyboard_IRQ_Handler ; call keyboard irq routine if so
                           3102 	
   0F13 3E 01              3103 		   ld a,#0x01
   0F15 D3 02              3104 		   out (0x02),a ; clear keyboard interrupt flag
                           3105 	
   0F17 FD E1 DD E1 D9 E1  3106 		   pop iy pop ix exx pop hl pop de pop bc pop af exx pop hl pop de pop bc pop af
        D1 C1 F1 D9 E1 D1
        C1 F1
   0F25 FB                 3107 		   ei
   0F26 ED 4D              3108 		   reti
                           3109 		   
                           3110 ;keyboard.c:139: void install_irq_handler(void)
                           3111 ;	---------------------------------
                           3112 ; Function install_irq_handler
                           3113 ; ---------------------------------
   0F28                    3114 _install_irq_handler_start::
   0F28                    3115 _install_irq_handler:
                           3116 ;keyboard.c:141: DI();
   0F28 F3                 3117 		di 
                           3118 ;keyboard.c:142: *((word*)IRQ_VECTOR) = (word)&irq_handler;
   0F29 FD 21 01 0A        3119 	ld	iy,#0x0A01
   0F2D 0ErFE              3120 	ld	c,#<_irq_handler
   0F2F 06s0E              3121 	ld	b,#>_irq_handler
   0F31 FD 71 00           3122 	ld	0 (iy),c
   0F34 FD 70 01           3123 	ld	1 (iy),b
                           3124 ;keyboard.c:143: io__sys_irq_enable = 0x81;      // enable: master irq, keyb
   0F37 3E 81              3125 	ld	a,#0x81
   0F39 D3 01              3126 	out	(_io__sys_irq_enable),a
                           3127 ;keyboard.c:144: EI();
   0F3B FB                 3128 		ei 
   0F3C C9                 3129 	ret
   0F3D                    3130 _install_irq_handler_end::
                           3131 ;joystick.c:10: void Joystick_SelectJoystickPort(byte portNumber)
                           3132 ;	---------------------------------
                           3133 ; Function Joystick_SelectJoystickPort
                           3134 ; ---------------------------------
   0F3D                    3135 _Joystick_SelectJoystickPort_start::
   0F3D                    3136 _Joystick_SelectJoystickPort:
   0F3D DD E5              3137 	push	ix
   0F3F DD 21 00 00        3138 	ld	ix,#0
   0F43 DD 39              3139 	add	ix,sp
                           3140 ;joystick.c:12: io__sys_ps2_joy_control = portNumber & 1;
   0F45 DD 7E 04           3141 	ld	a,4 (ix)
   0F48 E6 01              3142 	and	a,#0x01
   0F4A D3 03              3143 	out	(_io__sys_ps2_joy_control),a
   0F4C DD E1              3144 	pop	ix
   0F4E C9                 3145 	ret
   0F4F                    3146 _Joystick_SelectJoystickPort_end::
                           3147 ;joystick.c:15: void Joystick_GetInput(void)
                           3148 ;	---------------------------------
                           3149 ; Function Joystick_GetInput
                           3150 ; ---------------------------------
   0F4F                    3151 _Joystick_GetInput_start::
   0F4F                    3152 _Joystick_GetInput:
                           3153 ;joystick.c:19: Joystick_CheckInputAutoSwith();
   0F4F CDrEEs0F           3154 	call	_Joystick_CheckInputAutoSwith
                           3155 ;joystick.c:21: if(player1_input.input_type == JOY)
   0F52 01r37s03           3156 	ld	bc,#_player1_input + 3
   0F55 0A                 3157 	ld	a,(bc)
   0F56 D6 01              3158 	sub	a,#0x01
   0F58 20 08              3159 	jr	NZ,00102$
                           3160 ;joystick.c:22: Joystick_GetInputForPlayer(0);
   0F5A 3E 00              3161 	ld	a,#0x00
   0F5C F5                 3162 	push	af
   0F5D 33                 3163 	inc	sp
   0F5E CDr7As0F           3164 	call	_Joystick_GetInputForPlayer
   0F61 33                 3165 	inc	sp
   0F62                    3166 00102$:
                           3167 ;joystick.c:24: if(Joystick_IsSecondJoyNeedToBeReaded())
   0F62 CDr4As10           3168 	call	_Joystick_IsSecondJoyNeedToBeReaded
   0F65 AF                 3169 	xor	a,a
   0F66 B5                 3170 	or	a,l
   0F67 C8                 3171 	ret	Z
                           3172 ;joystick.c:25: if(player2_input.input_type == JOY)
   0F68 01r3Bs03           3173 	ld	bc,#_player2_input + 3
   0F6B 0A                 3174 	ld	a,(bc)
   0F6C D6 01              3175 	sub	a,#0x01
   0F6E 28 01              3176 	jr	Z,00115$
   0F70 C9                 3177 	ret
   0F71                    3178 00115$:
                           3179 ;joystick.c:26: Joystick_GetInputForPlayer(1);
   0F71 3E 01              3180 	ld	a,#0x01
   0F73 F5                 3181 	push	af
   0F74 33                 3182 	inc	sp
   0F75 CDr7As0F           3183 	call	_Joystick_GetInputForPlayer
   0F78 33                 3184 	inc	sp
   0F79 C9                 3185 	ret
   0F7A                    3186 _Joystick_GetInput_end::
                           3187 ;joystick.c:33: void Joystick_GetInputForPlayer(byte playerNumber)
                           3188 ;	---------------------------------
                           3189 ; Function Joystick_GetInputForPlayer
                           3190 ; ---------------------------------
   0F7A                    3191 _Joystick_GetInputForPlayer_start::
   0F7A                    3192 _Joystick_GetInputForPlayer:
   0F7A DD E5              3193 	push	ix
   0F7C DD 21 00 00        3194 	ld	ix,#0
   0F80 DD 39              3195 	add	ix,sp
   0F82 F5                 3196 	push	af
                           3197 ;joystick.c:38: Joystick_SelectJoystickPort(playerNumber);
   0F83 DD 7E 04           3198 	ld	a,4 (ix)
   0F86 F5                 3199 	push	af
   0F87 33                 3200 	inc	sp
   0F88 CDr3Ds0F           3201 	call	_Joystick_SelectJoystickPort
   0F8B 33                 3202 	inc	sp
                           3203 ;joystick.c:39: v = io__sys_joy_com_flags;
   0F8C DB 05              3204 	in	a,(_io__sys_joy_com_flags)
   0F8E DD 77 FF           3205 	ld	-1 (ix),a
                           3206 ;joystick.c:41: pPI = (playerNumber == 0) ? &player1_input : &player2_input;
   0F91 AF                 3207 	xor	a,a
   0F92 DD B6 04           3208 	or	a,4 (ix)
   0F95 D6 01              3209 	sub	a,#0x01
   0F97 3E 00              3210 	ld	a,#0x00
   0F99 17                 3211 	rla
   0F9A B7                 3212 	or	a,a
   0F9B 28 06              3213 	jr	Z,00103$
   0F9D 21r34s03           3214 	ld	hl,#_player1_input
   0FA0 EB                 3215 	ex	de,hl
   0FA1 18 04              3216 	jr	00104$
   0FA3                    3217 00103$:
   0FA3 21r38s03           3218 	ld	hl,#_player2_input
   0FA6 EB                 3219 	ex	de,hl
   0FA7                    3220 00104$:
                           3221 ;joystick.c:42: pPI->up    = (v & JOY_UP_MASK) ? TRUE : FALSE;
   0FA7 4B                 3222 	ld	c,e
   0FA8 42                 3223 	ld	b,d
   0FA9 DD 7E FF           3224 	ld	a,-1 (ix)
   0FAC E6 01              3225 	and	a,#0x01
   0FAE 28 06              3226 	jr	Z,00105$
   0FB0 DD 36 FE 01        3227 	ld	-2 (ix),#0x01
   0FB4 18 04              3228 	jr	00106$
   0FB6                    3229 00105$:
   0FB6 DD 36 FE 00        3230 	ld	-2 (ix),#0x00
   0FBA                    3231 00106$:
   0FBA DD 7E FE           3232 	ld	a,-2 (ix)
   0FBD 02                 3233 	ld	(bc),a
                           3234 ;joystick.c:43: pPI->down  = (v & JOY_DOWN_MASK) ? TRUE : FALSE;
   0FBE 4B                 3235 	ld	c,e
   0FBF 42                 3236 	ld	b,d
   0FC0 03                 3237 	inc	bc
   0FC1 DD 7E FF           3238 	ld	a,-1 (ix)
   0FC4 E6 02              3239 	and	a,#0x02
   0FC6 28 06              3240 	jr	Z,00107$
   0FC8 DD 36 FE 01        3241 	ld	-2 (ix),#0x01
   0FCC 18 04              3242 	jr	00108$
   0FCE                    3243 00107$:
   0FCE DD 36 FE 00        3244 	ld	-2 (ix),#0x00
   0FD2                    3245 00108$:
   0FD2 DD 7E FE           3246 	ld	a,-2 (ix)
   0FD5 02                 3247 	ld	(bc),a
                           3248 ;joystick.c:44: pPI->fire1 = (v & JOY_FIRE1_MASK) ? TRUE : FALSE;
   0FD6 4B                 3249 	ld	c,e
   0FD7 42                 3250 	ld	b,d
   0FD8 03                 3251 	inc	bc
   0FD9 03                 3252 	inc	bc
   0FDA DD 7E FF           3253 	ld	a,-1 (ix)
   0FDD E6 10              3254 	and	a,#0x10
   0FDF 28 04              3255 	jr	Z,00109$
   0FE1 1E 01              3256 	ld	e,#0x01
   0FE3 18 02              3257 	jr	00110$
   0FE5                    3258 00109$:
   0FE5 1E 00              3259 	ld	e,#0x00
   0FE7                    3260 00110$:
   0FE7 7B                 3261 	ld	a,e
   0FE8 02                 3262 	ld	(bc),a
   0FE9 DD F9              3263 	ld	sp,ix
   0FEB DD E1              3264 	pop	ix
   0FED C9                 3265 	ret
   0FEE                    3266 _Joystick_GetInputForPlayer_end::
                           3267 ;joystick.c:50: void Joystick_CheckInputAutoSwith(void)
                           3268 ;	---------------------------------
                           3269 ; Function Joystick_CheckInputAutoSwith
                           3270 ; ---------------------------------
   0FEE                    3271 _Joystick_CheckInputAutoSwith_start::
   0FEE                    3272 _Joystick_CheckInputAutoSwith:
                           3273 ;joystick.c:52: Joystick_CheckInputAutoSwithForPlayer(0);
   0FEE 3E 00              3274 	ld	a,#0x00
   0FF0 F5                 3275 	push	af
   0FF1 33                 3276 	inc	sp
   0FF2 CDr05s10           3277 	call	_Joystick_CheckInputAutoSwithForPlayer
   0FF5 33                 3278 	inc	sp
                           3279 ;joystick.c:54: if(Joystick_IsSecondJoyNeedToBeReaded()) {
   0FF6 CDr4As10           3280 	call	_Joystick_IsSecondJoyNeedToBeReaded
   0FF9 AF                 3281 	xor	a,a
   0FFA B5                 3282 	or	a,l
   0FFB C8                 3283 	ret	Z
                           3284 ;joystick.c:55: Joystick_CheckInputAutoSwithForPlayer(1);
   0FFC 3E 01              3285 	ld	a,#0x01
   0FFE F5                 3286 	push	af
   0FFF 33                 3287 	inc	sp
   1000 CDr05s10           3288 	call	_Joystick_CheckInputAutoSwithForPlayer
   1003 33                 3289 	inc	sp
   1004 C9                 3290 	ret
   1005                    3291 _Joystick_CheckInputAutoSwith_end::
                           3292 ;joystick.c:60: void Joystick_CheckInputAutoSwithForPlayer(byte playerNumber)
                           3293 ;	---------------------------------
                           3294 ; Function Joystick_CheckInputAutoSwithForPlayer
                           3295 ; ---------------------------------
   1005                    3296 _Joystick_CheckInputAutoSwithForPlayer_start::
   1005                    3297 _Joystick_CheckInputAutoSwithForPlayer:
   1005 DD E5              3298 	push	ix
   1007 DD 21 00 00        3299 	ld	ix,#0
   100B DD 39              3300 	add	ix,sp
                           3301 ;joystick.c:64: pPI = (playerNumber == 0) ? &player1_input : &player2_input;
   100D AF                 3302 	xor	a,a
   100E DD B6 04           3303 	or	a,4 (ix)
   1011 D6 01              3304 	sub	a,#0x01
   1013 3E 00              3305 	ld	a,#0x00
   1015 17                 3306 	rla
   1016 B7                 3307 	or	a,a
   1017 28 07              3308 	jr	Z,00107$
   1019 21r34s03           3309 	ld	hl,#_player1_input
   101C 4D                 3310 	ld	c,l
   101D 44                 3311 	ld	b,h
   101E 18 05              3312 	jr	00108$
   1020                    3313 00107$:
   1020 21r38s03           3314 	ld	hl,#_player2_input
   1023 4D                 3315 	ld	c,l
   1024 44                 3316 	ld	b,h
   1025                    3317 00108$:
                           3318 ;joystick.c:66: Joystick_SelectJoystickPort(playerNumber);
   1025 C5                 3319 	push	bc
   1026 DD 7E 04           3320 	ld	a,4 (ix)
   1029 F5                 3321 	push	af
   102A 33                 3322 	inc	sp
   102B CDr3Ds0F           3323 	call	_Joystick_SelectJoystickPort
   102E 33                 3324 	inc	sp
   102F C1                 3325 	pop	bc
                           3326 ;joystick.c:67: v = io__sys_joy_com_flags;
   1030 DB 05              3327 	in	a,(_io__sys_joy_com_flags)
                           3328 ;joystick.c:68: if(v & JOY_UP_MASK || v & JOY_DOWN_MASK || v & JOY_FIRE1_MASK)
   1032 5F                 3329 	ld	e,a
   1033 E6 01              3330 	and	a,#0x01
   1035 20 0A              3331 	jr	NZ,00101$
   1037 7B                 3332 	ld	a,e
   1038 E6 02              3333 	and	a,#0x02
   103A 20 05              3334 	jr	NZ,00101$
   103C 7B                 3335 	ld	a,e
   103D E6 10              3336 	and	a,#0x10
   103F 28 06              3337 	jr	Z,00105$
   1041                    3338 00101$:
                           3339 ;joystick.c:69: pPI->input_type = JOY;
   1041 03                 3340 	inc	bc
   1042 03                 3341 	inc	bc
   1043 03                 3342 	inc	bc
   1044 3E 01              3343 	ld	a,#0x01
   1046 02                 3344 	ld	(bc),a
   1047                    3345 00105$:
   1047 DD E1              3346 	pop	ix
   1049 C9                 3347 	ret
   104A                    3348 _Joystick_CheckInputAutoSwithForPlayer_end::
                           3349 ;joystick.c:73: BOOL Joystick_IsSecondJoyNeedToBeReaded(void)
                           3350 ;	---------------------------------
                           3351 ; Function Joystick_IsSecondJoyNeedToBeReaded
                           3352 ; ---------------------------------
   104A                    3353 _Joystick_IsSecondJoyNeedToBeReaded_start::
   104A                    3354 _Joystick_IsSecondJoyNeedToBeReaded:
                           3355 ;joystick.c:75: return (!game.is_one_player_mode || game.game_state == MENU || game.game_state == CREDITS);
   104A 21rEBs02           3356 	ld	hl,#_game + 3
   104D 4E                 3357 	ld	c,(hl)
   104E AF                 3358 	xor	a,a
   104F B1                 3359 	or	a,c
   1050 D6 01              3360 	sub	a,#0x01
   1052 3E 00              3361 	ld	a,#0x00
   1054 17                 3362 	rla
   1055 B7                 3363 	or	a,a
   1056 20 0C              3364 	jr	NZ,00107$
   1058 21rE8s02           3365 	ld	hl,#_game
   105B 7E                 3366 	ld	a,(hl)
   105C D6 01              3367 	sub	a,#0x01
   105E 28 04              3368 	jr	Z,00107$
   1060 0E 00              3369 	ld	c,#0x00
   1062 18 02              3370 	jr	00108$
   1064                    3371 00107$:
   1064 0E 01              3372 	ld	c,#0x01
   1066                    3373 00108$:
   1066 AF                 3374 	xor	a,a
   1067 B1                 3375 	or	a,c
   1068 20 0C              3376 	jr	NZ,00104$
   106A 21rE8s02           3377 	ld	hl,#_game
   106D 7E                 3378 	ld	a,(hl)
   106E D6 02              3379 	sub	a,#0x02
   1070 28 04              3380 	jr	Z,00104$
   1072 0E 00              3381 	ld	c,#0x00
   1074 18 02              3382 	jr	00105$
   1076                    3383 00104$:
   1076 0E 01              3384 	ld	c,#0x01
   1078                    3385 00105$:
   1078 69                 3386 	ld	l,c
   1079 C9                 3387 	ret
   107A                    3388 _Joystick_IsSecondJoyNeedToBeReaded_end::
                           3389 ;pool_sprites.c:22: void PoolSprites_Init(void)
                           3390 ;	---------------------------------
                           3391 ; Function PoolSprites_Init
                           3392 ; ---------------------------------
   107A                    3393 _PoolSprites_Init_start::
   107A                    3394 _PoolSprites_Init:
                           3395 ;pool_sprites.c:24: memset(&pool_sprites, 0, sizeof(pool_sprites));
   107A 21 01 00           3396 	ld	hl,#0x0001
   107D E5                 3397 	push	hl
   107E 3E 00              3398 	ld	a,#0x00
   1080 F5                 3399 	push	af
   1081 33                 3400 	inc	sp
   1082 21r54s03           3401 	ld	hl,#_pool_sprites
   1085 E5                 3402 	push	hl
   1086 CDr00s00           3403 	call	_memset
   1089 F1                 3404 	pop	af
   108A F1                 3405 	pop	af
   108B 33                 3406 	inc	sp
                           3407 ;pool_sprites.c:25: PoolSprites_FreeAllSprites();
   108C C3rD2s10           3408 	jp	_PoolSprites_FreeAllSprites
   108F                    3409 _PoolSprites_Init_end::
                           3410 ;pool_sprites.c:30: byte PoolSprites_AllocateSpriteNumber(byte count)
                           3411 ;	---------------------------------
                           3412 ; Function PoolSprites_AllocateSpriteNumber
                           3413 ; ---------------------------------
   108F                    3414 _PoolSprites_AllocateSpriteNumber_start::
   108F                    3415 _PoolSprites_AllocateSpriteNumber:
   108F DD E5              3416 	push	ix
   1091 DD 21 00 00        3417 	ld	ix,#0
   1095 DD 39              3418 	add	ix,sp
   1097 3B                 3419 	dec	sp
                           3420 ;pool_sprites.c:33: byte* pNumBuffer = allocatedSpriteNumbers;
                           3421 ;pool_sprites.c:36: for(i=0; i<count; i++) {
   1098 0E 00              3422 	ld	c,#0x00
   109A DD 36 FF 00        3423 	ld	-1 (ix),#0x00
   109E                    3424 00103$:
   109E DD 7E FF           3425 	ld	a,-1 (ix)
   10A1 DD 96 04           3426 	sub	a,4 (ix)
   10A4 30 26              3427 	jr	NC,00106$
                           3428 ;pool_sprites.c:37: if(pool_sprites.spr_number_offset >= POOL_SPR__LAST_SPRITE)
   10A6 21r54s03           3429 	ld	hl,#_pool_sprites
   10A9 5E                 3430 	ld	e,(hl)
   10AA 7B                 3431 	ld	a,e
   10AB D6 31              3432 	sub	a,#0x31
   10AD 38 03              3433 	jr	C,00102$
                           3434 ;pool_sprites.c:38: return i;
   10AF 69                 3435 	ld	l,c
   10B0 18 1B              3436 	jr	00107$
   10B2                    3437 00102$:
                           3438 ;pool_sprites.c:39: *(pNumBuffer+i) = pool_sprites.spr_number_offset;
   10B2 3Er55              3439 	ld	a,#<_allocatedSpriteNumbers
   10B4 DD 86 FF           3440 	add	a,-1 (ix)
   10B7 6F                 3441 	ld	l,a
   10B8 3Es03              3442 	ld	a,#>_allocatedSpriteNumbers
   10BA CE 00              3443 	adc	a,#0x00
   10BC 67                 3444 	ld	h,a
   10BD 73                 3445 	ld	(hl),e
                           3446 ;pool_sprites.c:40: pool_sprites.spr_number_offset++;
   10BE 21r54s03           3447 	ld	hl,#_pool_sprites
   10C1 7E                 3448 	ld	a,(hl)
   10C2 3C                 3449 	inc	a
   10C3 77                 3450 	ld	(hl),a
                           3451 ;pool_sprites.c:36: for(i=0; i<count; i++) {
   10C4 DD 34 FF           3452 	inc	-1 (ix)
   10C7 DD 4E FF           3453 	ld	c,-1 (ix)
   10CA 18 D2              3454 	jr	00103$
   10CC                    3455 00106$:
                           3456 ;pool_sprites.c:45: return i;
   10CC 69                 3457 	ld	l,c
   10CD                    3458 00107$:
   10CD DD F9              3459 	ld	sp,ix
   10CF DD E1              3460 	pop	ix
   10D1 C9                 3461 	ret
   10D2                    3462 _PoolSprites_AllocateSpriteNumber_end::
                           3463 ;pool_sprites.c:48: void PoolSprites_FreeAllSprites(void)
                           3464 ;	---------------------------------
                           3465 ; Function PoolSprites_FreeAllSprites
                           3466 ; ---------------------------------
   10D2                    3467 _PoolSprites_FreeAllSprites_start::
   10D2                    3468 _PoolSprites_FreeAllSprites:
                           3469 ;pool_sprites.c:50: pool_sprites.spr_number_offset = POOL_SPR__FIRST_SPRITE;
   10D2 21r54s03           3470 	ld	hl,#_pool_sprites
   10D5 36 0E              3471 	ld	(hl),#0x0E
   10D7 C9                 3472 	ret
   10D8                    3473 _PoolSprites_FreeAllSprites_end::
                           3474 ;pool_gameobj.c:30: void PoolGameObj_Init(void)
                           3475 ;	---------------------------------
                           3476 ; Function PoolGameObj_Init
                           3477 ; ---------------------------------
   10D8                    3478 _PoolGameObj_Init_start::
   10D8                    3479 _PoolGameObj_Init:
                           3480 ;pool_gameobj.c:32: memset(&pool_game_obj, 0, sizeof(pool_game_obj));
   10D8 21 B5 02           3481 	ld	hl,#0x02B5
   10DB E5                 3482 	push	hl
   10DC 3E 00              3483 	ld	a,#0x00
   10DE F5                 3484 	push	af
   10DF 33                 3485 	inc	sp
   10E0 21r78s03           3486 	ld	hl,#_pool_game_obj
   10E3 E5                 3487 	push	hl
   10E4 CDr00s00           3488 	call	_memset
   10E7 F1                 3489 	pop	af
   10E8 F1                 3490 	pop	af
   10E9 33                 3491 	inc	sp
   10EA C9                 3492 	ret
   10EB                    3493 _PoolGameObj_Init_end::
                           3494 ;pool_gameobj.c:36: GameObjAnim* PoolGameObj_AllocateGameObjAnim(void)
                           3495 ;	---------------------------------
                           3496 ; Function PoolGameObj_AllocateGameObjAnim
                           3497 ; ---------------------------------
   10EB                    3498 _PoolGameObj_AllocateGameObjAnim_start::
   10EB                    3499 _PoolGameObj_AllocateGameObjAnim:
                           3500 ;pool_gameobj.c:39: return (GameObjAnim*) PoolGameObj_AllocateGameObj((GameObj*)pool_game_obj.pool_GameObjAnim,
   10EB 3E 25              3501 	ld	a,#0x25
   10ED F5                 3502 	push	af
   10EE 33                 3503 	inc	sp
   10EF 21 0F 00           3504 	ld	hl,#0x000F
   10F2 E5                 3505 	push	hl
   10F3 21r78s03           3506 	ld	hl,#_pool_game_obj
   10F6 E5                 3507 	push	hl
   10F7 CDr34s11           3508 	call	_PoolGameObj_AllocateGameObj
   10FA F1                 3509 	pop	af
   10FB F1                 3510 	pop	af
   10FC 33                 3511 	inc	sp
   10FD C9                 3512 	ret
   10FE                    3513 _PoolGameObj_AllocateGameObjAnim_end::
                           3514 ;pool_gameobj.c:43: GameObjRocket* PoolGameObj_AllocateGameObjRocket(void)
                           3515 ;	---------------------------------
                           3516 ; Function PoolGameObj_AllocateGameObjRocket
                           3517 ; ---------------------------------
   10FE                    3518 _PoolGameObj_AllocateGameObjRocket_start::
   10FE                    3519 _PoolGameObj_AllocateGameObjRocket:
                           3520 ;pool_gameobj.c:45: return (GameObjRocket*) PoolGameObj_AllocateGameObj((GameObj*)pool_game_obj.pool_GameObjRocket,
   10FE 01rA3s05           3521 	ld	bc,#_pool_game_obj + 555
   1101 3E 24              3522 	ld	a,#0x24
   1103 F5                 3523 	push	af
   1104 33                 3524 	inc	sp
   1105 21 02 00           3525 	ld	hl,#0x0002
   1108 E5                 3526 	push	hl
   1109 C5                 3527 	push	bc
   110A CDr34s11           3528 	call	_PoolGameObj_AllocateGameObj
   110D F1                 3529 	pop	af
   110E F1                 3530 	pop	af
   110F 33                 3531 	inc	sp
   1110 C9                 3532 	ret
   1111                    3533 _PoolGameObj_AllocateGameObjRocket_end::
                           3534 ;pool_gameobj.c:53: void PoolGameObj_FreeGameObj(GameObj* gameObj)
                           3535 ;	---------------------------------
                           3536 ; Function PoolGameObj_FreeGameObj
                           3537 ; ---------------------------------
   1111                    3538 _PoolGameObj_FreeGameObj_start::
   1111                    3539 _PoolGameObj_FreeGameObj:
   1111 DD E5              3540 	push	ix
   1113 DD 21 00 00        3541 	ld	ix,#0
   1117 DD 39              3542 	add	ix,sp
                           3543 ;pool_gameobj.c:55: PoolGameObj_RemoveObjFromActiveObjects(gameObj);
   1119 DD 6E 04           3544 	ld	l,4 (ix)
   111C DD 66 05           3545 	ld	h,5 (ix)
   111F E5                 3546 	push	hl
   1120 CDrEEs11           3547 	call	_PoolGameObj_RemoveObjFromActiveObjects
   1123 F1                 3548 	pop	af
                           3549 ;pool_gameobj.c:56: gameObj->in_use = FALSE;
   1124 DD 4E 04           3550 	ld	c,4 (ix)
   1127 DD 46 05           3551 	ld	b,5 (ix)
   112A C5                 3552 	push	bc
   112B FD E1              3553 	pop	iy
   112D FD 36 00 00        3554 	ld	(iy),#0x00
   1131 DD E1              3555 	pop	ix
   1133 C9                 3556 	ret
   1134                    3557 _PoolGameObj_FreeGameObj_end::
                           3558 ;pool_gameobj.c:62: GameObj* PoolGameObj_AllocateGameObj(GameObj* pPool, word poolSize, byte objSize)
                           3559 ;	---------------------------------
                           3560 ; Function PoolGameObj_AllocateGameObj
                           3561 ; ---------------------------------
   1134                    3562 _PoolGameObj_AllocateGameObj_start::
   1134                    3563 _PoolGameObj_AllocateGameObj:
   1134 DD E5              3564 	push	ix
   1136 DD 21 00 00        3565 	ld	ix,#0
   113A DD 39              3566 	add	ix,sp
                           3567 ;pool_gameobj.c:67: for(i=0; i<poolSize; i++) {
   113C 01 00 00           3568 	ld	bc,#0x0000
   113F                    3569 00103$:
   113F 79                 3570 	ld	a,c
   1140 DD 96 06           3571 	sub	a,6 (ix)
   1143 78                 3572 	ld	a,b
   1144 DD 9E 07           3573 	sbc	a,7 (ix)
   1147 30 28              3574 	jr	NC,00106$
                           3575 ;pool_gameobj.c:68: gameObj = pPool;
   1149 DD 5E 04           3576 	ld	e,4 (ix)
   114C DD 56 05           3577 	ld	d,5 (ix)
                           3578 ;pool_gameobj.c:69: if(!gameObj->in_use) {
   114F 1A                 3579 	ld	a,(de)
   1150 B7                 3580 	or	a,a
   1151 20 0C              3581 	jr	NZ,00102$
                           3582 ;pool_gameobj.c:70: gameObj->in_use = TRUE;
   1153 3E 01              3583 	ld	a,#0x01
   1155 12                 3584 	ld	(de),a
                           3585 ;pool_gameobj.c:71: PoolGameObj_AddObjToActiveObjects(gameObj);
   1156 D5                 3586 	push	de
   1157 D5                 3587 	push	de
   1158 CDr77s11           3588 	call	_PoolGameObj_AddObjToActiveObjects
   115B F1                 3589 	pop	af
                           3590 ;pool_gameobj.c:72: return gameObj;
   115C E1                 3591 	pop	hl
   115D 18 15              3592 	jr	00107$
   115F                    3593 00102$:
                           3594 ;pool_gameobj.c:74: pPool = (GameObj*) ( ((byte*)pPool) + objSize );     // move ptr to next obj in pool
   115F 7B                 3595 	ld	a,e
   1160 DD 86 08           3596 	add	a,8 (ix)
   1163 5F                 3597 	ld	e,a
   1164 7A                 3598 	ld	a,d
   1165 CE 00              3599 	adc	a,#0x00
   1167 57                 3600 	ld	d,a
   1168 DD 73 04           3601 	ld	4 (ix),e
   116B DD 72 05           3602 	ld	5 (ix),d
                           3603 ;pool_gameobj.c:67: for(i=0; i<poolSize; i++) {
   116E 03                 3604 	inc	bc
   116F 18 CE              3605 	jr	00103$
   1171                    3606 00106$:
                           3607 ;pool_gameobj.c:76: return NULL;
   1171 21 00 00           3608 	ld	hl,#0x0000
   1174                    3609 00107$:
   1174 DD E1              3610 	pop	ix
   1176 C9                 3611 	ret
   1177                    3612 _PoolGameObj_AllocateGameObj_end::
                           3613 ;pool_gameobj.c:81: BOOL PoolGameObj_AddObjToActiveObjects(GameObj* obj)
                           3614 ;	---------------------------------
                           3615 ; Function PoolGameObj_AddObjToActiveObjects
                           3616 ; ---------------------------------
   1177                    3617 _PoolGameObj_AddObjToActiveObjects_start::
   1177                    3618 _PoolGameObj_AddObjToActiveObjects:
   1177 DD E5              3619 	push	ix
   1179 DD 21 00 00        3620 	ld	ix,#0
   117D DD 39              3621 	add	ix,sp
   117F F5                 3622 	push	af
   1180 F5                 3623 	push	af
                           3624 ;pool_gameobj.c:85: for(p = pool_game_obj.active_objects;
   1181 01rEDs05           3625 	ld	bc,#_pool_game_obj + 629
   1184 59                 3626 	ld	e,c
   1185 50                 3627 	ld	d,b
   1186 DD 73 FE           3628 	ld	-2 (ix),e
   1189 DD 72 FF           3629 	ld	-1 (ix),d
   118C 21 40 00           3630 	ld	hl,#0x0040
   118F 09                 3631 	add	hl,bc
   1190 4D                 3632 	ld	c,l
   1191 44                 3633 	ld	b,h
   1192 DD 7E FE           3634 	ld	a,-2 (ix)
   1195 DD 77 FC           3635 	ld	-4 (ix),a
   1198 DD 7E FF           3636 	ld	a,-1 (ix)
   119B DD 77 FD           3637 	ld	-3 (ix),a
   119E                    3638 00103$:
                           3639 ;pool_gameobj.c:86: p < pool_game_obj.active_objects + (sizeof(pool_game_obj.active_objects) / sizeof(p));
   119E DD 7E FC           3640 	ld	a,-4 (ix)
   11A1 91                 3641 	sub	a,c
   11A2 DD 7E FD           3642 	ld	a,-3 (ix)
   11A5 98                 3643 	sbc	a,b
   11A6 F2rE7s11           3644 	jp	P,00106$
                           3645 ;pool_gameobj.c:88: if(*p == NULL) {
   11A9 DD 6E FC           3646 	ld	l,-4 (ix)
   11AC DD 66 FD           3647 	ld	h,-3 (ix)
   11AF 5E                 3648 	ld	e,(hl)
   11B0 23                 3649 	inc	hl
   11B1 56                 3650 	ld	d,(hl)
   11B2 7B                 3651 	ld	a,e
   11B3 B2                 3652 	or	a,d
   11B4 20 13              3653 	jr	NZ,00105$
                           3654 ;pool_gameobj.c:89: *p = obj;
   11B6 DD 6E FE           3655 	ld	l,-2 (ix)
   11B9 DD 66 FF           3656 	ld	h,-1 (ix)
   11BC DD 7E 04           3657 	ld	a,4 (ix)
   11BF 77                 3658 	ld	(hl),a
   11C0 23                 3659 	inc	hl
   11C1 DD 7E 05           3660 	ld	a,5 (ix)
   11C4 77                 3661 	ld	(hl),a
                           3662 ;pool_gameobj.c:90: return TRUE;
   11C5 2E 01              3663 	ld	l,#0x01
   11C7 18 20              3664 	jr	00107$
   11C9                    3665 00105$:
                           3666 ;pool_gameobj.c:87: p++)
   11C9 DD 7E FC           3667 	ld	a,-4 (ix)
   11CC C6 02              3668 	add	a,#0x02
   11CE DD 77 FC           3669 	ld	-4 (ix),a
   11D1 DD 7E FD           3670 	ld	a,-3 (ix)
   11D4 CE 00              3671 	adc	a,#0x00
   11D6 DD 77 FD           3672 	ld	-3 (ix),a
   11D9 DD 7E FC           3673 	ld	a,-4 (ix)
   11DC DD 77 FE           3674 	ld	-2 (ix),a
   11DF DD 7E FD           3675 	ld	a,-3 (ix)
   11E2 DD 77 FF           3676 	ld	-1 (ix),a
   11E5 18 B7              3677 	jr	00103$
   11E7                    3678 00106$:
                           3679 ;pool_gameobj.c:93: return FALSE;
   11E7 2E 00              3680 	ld	l,#0x00
   11E9                    3681 00107$:
   11E9 DD F9              3682 	ld	sp,ix
   11EB DD E1              3683 	pop	ix
   11ED C9                 3684 	ret
   11EE                    3685 _PoolGameObj_AddObjToActiveObjects_end::
                           3686 ;pool_gameobj.c:98: BOOL PoolGameObj_RemoveObjFromActiveObjects(GameObj* obj)
                           3687 ;	---------------------------------
                           3688 ; Function PoolGameObj_RemoveObjFromActiveObjects
                           3689 ; ---------------------------------
   11EE                    3690 _PoolGameObj_RemoveObjFromActiveObjects_start::
   11EE                    3691 _PoolGameObj_RemoveObjFromActiveObjects:
   11EE DD E5              3692 	push	ix
   11F0 DD 21 00 00        3693 	ld	ix,#0
   11F4 DD 39              3694 	add	ix,sp
   11F6 F5                 3695 	push	af
   11F7 F5                 3696 	push	af
                           3697 ;pool_gameobj.c:102: for(p = pool_game_obj.active_objects;
   11F8 01rEDs05           3698 	ld	bc,#_pool_game_obj + 629
   11FB 59                 3699 	ld	e,c
   11FC 50                 3700 	ld	d,b
   11FD DD 73 FE           3701 	ld	-2 (ix),e
   1200 DD 72 FF           3702 	ld	-1 (ix),d
   1203 21 40 00           3703 	ld	hl,#0x0040
   1206 09                 3704 	add	hl,bc
   1207 4D                 3705 	ld	c,l
   1208 44                 3706 	ld	b,h
   1209 DD 7E FE           3707 	ld	a,-2 (ix)
   120C DD 77 FC           3708 	ld	-4 (ix),a
   120F DD 7E FF           3709 	ld	a,-1 (ix)
   1212 DD 77 FD           3710 	ld	-3 (ix),a
   1215                    3711 00103$:
                           3712 ;pool_gameobj.c:103: p < pool_game_obj.active_objects + (sizeof(pool_game_obj.active_objects) / sizeof(p));
   1215 DD 7E FC           3713 	ld	a,-4 (ix)
   1218 91                 3714 	sub	a,c
   1219 DD 7E FD           3715 	ld	a,-3 (ix)
   121C 98                 3716 	sbc	a,b
   121D F2r64s12           3717 	jp	P,00106$
                           3718 ;pool_gameobj.c:105: if(*p == obj) {
   1220 DD 6E FC           3719 	ld	l,-4 (ix)
   1223 DD 66 FD           3720 	ld	h,-3 (ix)
   1226 5E                 3721 	ld	e,(hl)
   1227 23                 3722 	inc	hl
   1228 56                 3723 	ld	d,(hl)
   1229 7B                 3724 	ld	a,e
   122A DD 96 04           3725 	sub	4 (ix)
   122D 20 06              3726 	jr	NZ,00112$
   122F 7A                 3727 	ld	a,d
   1230 DD 96 05           3728 	sub	5 (ix)
   1233 28 02              3729 	jr	Z,00113$
   1235                    3730 00112$:
   1235 18 0F              3731 	jr	00105$
   1237                    3732 00113$:
                           3733 ;pool_gameobj.c:106: *p = NULL;
   1237 DD 6E FE           3734 	ld	l,-2 (ix)
   123A DD 66 FF           3735 	ld	h,-1 (ix)
   123D 36 00              3736 	ld	(hl),#0x00
   123F 23                 3737 	inc	hl
   1240 36 00              3738 	ld	(hl),#0x00
                           3739 ;pool_gameobj.c:107: return TRUE;
   1242 2E 01              3740 	ld	l,#0x01
   1244 18 20              3741 	jr	00107$
   1246                    3742 00105$:
                           3743 ;pool_gameobj.c:104: p++)
   1246 DD 7E FC           3744 	ld	a,-4 (ix)
   1249 C6 02              3745 	add	a,#0x02
   124B DD 77 FC           3746 	ld	-4 (ix),a
   124E DD 7E FD           3747 	ld	a,-3 (ix)
   1251 CE 00              3748 	adc	a,#0x00
   1253 DD 77 FD           3749 	ld	-3 (ix),a
   1256 DD 7E FC           3750 	ld	a,-4 (ix)
   1259 DD 77 FE           3751 	ld	-2 (ix),a
   125C DD 7E FD           3752 	ld	a,-3 (ix)
   125F DD 77 FF           3753 	ld	-1 (ix),a
   1262 18 B1              3754 	jr	00103$
   1264                    3755 00106$:
                           3756 ;pool_gameobj.c:110: return FALSE;
   1264 2E 00              3757 	ld	l,#0x00
   1266                    3758 00107$:
   1266 DD F9              3759 	ld	sp,ix
   1268 DD E1              3760 	pop	ix
   126A C9                 3761 	ret
   126B                    3762 _PoolGameObj_RemoveObjFromActiveObjects_end::
                           3763 ;pool_gameobj.c:121: void PoolGameObj_ApplyFuncMoveToObjects()
                           3764 ;	---------------------------------
                           3765 ; Function PoolGameObj_ApplyFuncMoveToObjects
                           3766 ; ---------------------------------
   126B                    3767 _PoolGameObj_ApplyFuncMoveToObjects_start::
   126B                    3768 _PoolGameObj_ApplyFuncMoveToObjects:
   126B DD E5              3769 	push	ix
   126D DD 21 00 00        3770 	ld	ix,#0
   1271 DD 39              3771 	add	ix,sp
   1273 F5                 3772 	push	af
   1274 F5                 3773 	push	af
                           3774 ;pool_gameobj.c:127: APPLY_FUNC_TO_ACTIVE_OBJECTS(pMoveFunc);
   1275 01rEDs05           3775 	ld	bc,#_pool_game_obj + 629
   1278 DD 36 FE 00        3776 	ld	-2 (ix),#0x00
   127C DD 36 FF 00        3777 	ld	-1 (ix),#0x00
   1280                    3778 00103$:
   1280 DD 7E FE           3779 	ld	a,-2 (ix)
   1283 D6 20              3780 	sub	a,#0x20
   1285 DD 7E FF           3781 	ld	a,-1 (ix)
   1288 DE 00              3782 	sbc	a,#0x00
   128A D2rDBs12           3783 	jp	NC,00107$
   128D DD 5E FE           3784 	ld	e,-2 (ix)
   1290 DD 56 FF           3785 	ld	d,-1 (ix)
   1293 CB 23              3786 	sla	e
   1295 CB 12              3787 	rl	d
   1297 79                 3788 	ld	a,c
   1298 83                 3789 	add	a,e
   1299 5F                 3790 	ld	e,a
   129A 78                 3791 	ld	a,b
   129B 8A                 3792 	adc	a,d
   129C 6B                 3793 	ld	l,e
   129D 67                 3794 	ld	h,a
   129E 5E                 3795 	ld	e,(hl)
   129F 23                 3796 	inc	hl
   12A0 56                 3797 	ld	d,(hl)
   12A1 DD 73 FC           3798 	ld	-4 (ix),e
   12A4 DD 72 FD           3799 	ld	-3 (ix),d
   12A7 DD 7E FC           3800 	ld	a,-4 (ix)
   12AA DD B6 FD           3801 	or	a,-3 (ix)
   12AD 28 21              3802 	jr	Z,00105$
   12AF DD 7E FC           3803 	ld	a,-4 (ix)
   12B2 C6 13              3804 	add	a,#0x13
   12B4 6F                 3805 	ld	l, a
   12B5 DD 7E FD           3806 	ld	a, -3 (ix)
   12B8 CE 00              3807 	adc	a, #0x00
   12BA 67                 3808 	ld	h,a
   12BB 5E                 3809 	ld	e,(hl)
   12BC 23                 3810 	inc	hl
   12BD 56                 3811 	ld	d,(hl)
   12BE C5                 3812 	push	bc
   12BF D5                 3813 	push	de
   12C0 DD 6E FC           3814 	ld	l,-4 (ix)
   12C3 DD 66 FD           3815 	ld	h,-3 (ix)
   12C6 E5                 3816 	push	hl
   12C7 EB                 3817 	ex	de,hl
   12C8 11rCDs12           3818 	ld	de,#00115$
   12CB D5                 3819 	push	de
   12CC E9                 3820 	jp	(hl)
   12CD                    3821 00115$:
   12CD F1                 3822 	pop	af
   12CE D1                 3823 	pop	de
   12CF C1                 3824 	pop	bc
   12D0                    3825 00105$:
   12D0 DD 34 FE           3826 	inc	-2 (ix)
   12D3 20 03              3827 	jr	NZ,00116$
   12D5 DD 34 FF           3828 	inc	-1 (ix)
   12D8                    3829 00116$:
   12D8 C3r80s12           3830 	jp	00103$
   12DB                    3831 00107$:
   12DB DD F9              3832 	ld	sp,ix
   12DD DD E1              3833 	pop	ix
   12DF C9                 3834 	ret
   12E0                    3835 _PoolGameObj_ApplyFuncMoveToObjects_end::
                           3836 ;pool_gameobj.c:130: void PoolGameObj_ApplyFuncDrawToObjects()
                           3837 ;	---------------------------------
                           3838 ; Function PoolGameObj_ApplyFuncDrawToObjects
                           3839 ; ---------------------------------
   12E0                    3840 _PoolGameObj_ApplyFuncDrawToObjects_start::
   12E0                    3841 _PoolGameObj_ApplyFuncDrawToObjects:
   12E0 DD E5              3842 	push	ix
   12E2 DD 21 00 00        3843 	ld	ix,#0
   12E6 DD 39              3844 	add	ix,sp
   12E8 F5                 3845 	push	af
   12E9 F5                 3846 	push	af
                           3847 ;pool_gameobj.c:136: APPLY_FUNC_TO_ACTIVE_OBJECTS(pDrawFunc);
   12EA 01rEDs05           3848 	ld	bc,#_pool_game_obj + 629
   12ED DD 36 FE 00        3849 	ld	-2 (ix),#0x00
   12F1 DD 36 FF 00        3850 	ld	-1 (ix),#0x00
   12F5                    3851 00103$:
   12F5 DD 7E FE           3852 	ld	a,-2 (ix)
   12F8 D6 20              3853 	sub	a,#0x20
   12FA DD 7E FF           3854 	ld	a,-1 (ix)
   12FD DE 00              3855 	sbc	a,#0x00
   12FF D2r50s13           3856 	jp	NC,00107$
   1302 DD 5E FE           3857 	ld	e,-2 (ix)
   1305 DD 56 FF           3858 	ld	d,-1 (ix)
   1308 CB 23              3859 	sla	e
   130A CB 12              3860 	rl	d
   130C 79                 3861 	ld	a,c
   130D 83                 3862 	add	a,e
   130E 5F                 3863 	ld	e,a
   130F 78                 3864 	ld	a,b
   1310 8A                 3865 	adc	a,d
   1311 6B                 3866 	ld	l,e
   1312 67                 3867 	ld	h,a
   1313 5E                 3868 	ld	e,(hl)
   1314 23                 3869 	inc	hl
   1315 56                 3870 	ld	d,(hl)
   1316 DD 73 FC           3871 	ld	-4 (ix),e
   1319 DD 72 FD           3872 	ld	-3 (ix),d
   131C DD 7E FC           3873 	ld	a,-4 (ix)
   131F DD B6 FD           3874 	or	a,-3 (ix)
   1322 28 21              3875 	jr	Z,00105$
   1324 DD 7E FC           3876 	ld	a,-4 (ix)
   1327 C6 15              3877 	add	a,#0x15
   1329 6F                 3878 	ld	l, a
   132A DD 7E FD           3879 	ld	a, -3 (ix)
   132D CE 00              3880 	adc	a, #0x00
   132F 67                 3881 	ld	h,a
   1330 5E                 3882 	ld	e,(hl)
   1331 23                 3883 	inc	hl
   1332 56                 3884 	ld	d,(hl)
   1333 C5                 3885 	push	bc
   1334 D5                 3886 	push	de
   1335 DD 6E FC           3887 	ld	l,-4 (ix)
   1338 DD 66 FD           3888 	ld	h,-3 (ix)
   133B E5                 3889 	push	hl
   133C EB                 3890 	ex	de,hl
   133D 11r42s13           3891 	ld	de,#00115$
   1340 D5                 3892 	push	de
   1341 E9                 3893 	jp	(hl)
   1342                    3894 00115$:
   1342 F1                 3895 	pop	af
   1343 D1                 3896 	pop	de
   1344 C1                 3897 	pop	bc
   1345                    3898 00105$:
   1345 DD 34 FE           3899 	inc	-2 (ix)
   1348 20 03              3900 	jr	NZ,00116$
   134A DD 34 FF           3901 	inc	-1 (ix)
   134D                    3902 00116$:
   134D C3rF5s12           3903 	jp	00103$
   1350                    3904 00107$:
   1350 DD F9              3905 	ld	sp,ix
   1352 DD E1              3906 	pop	ix
   1354 C9                 3907 	ret
   1355                    3908 _PoolGameObj_ApplyFuncDrawToObjects_end::
                           3909 ;obj_.c:1: void GameObj_Init(GameObj* this)
                           3910 ;	---------------------------------
                           3911 ; Function GameObj_Init
                           3912 ; ---------------------------------
   1355                    3913 _GameObj_Init_start::
   1355                    3914 _GameObj_Init:
   1355 DD E5              3915 	push	ix
   1357 DD 21 00 00        3916 	ld	ix,#0
   135B DD 39              3917 	add	ix,sp
                           3918 ;obj_.c:3: this->extra_field1 = 0;
   135D DD 4E 04           3919 	ld	c,4 (ix)
   1360 DD 46 05           3920 	ld	b,5 (ix)
   1363 21 11 00           3921 	ld	hl,#0x0011
   1366 09                 3922 	add	hl,bc
   1367 36 00              3923 	ld	(hl),#0x00
   1369 23                 3924 	inc	hl
   136A 36 00              3925 	ld	(hl),#0x00
   136C DD E1              3926 	pop	ix
   136E C9                 3927 	ret
   136F                    3928 _GameObj_Init_end::
                           3929 ;obj_.c:6: void GameObj_InitCollideBox(GameObj* this)
                           3930 ;	---------------------------------
                           3931 ; Function GameObj_InitCollideBox
                           3932 ; ---------------------------------
   136F                    3933 _GameObj_InitCollideBox_start::
   136F                    3934 _GameObj_InitCollideBox:
   136F DD E5              3935 	push	ix
   1371 DD 21 00 00        3936 	ld	ix,#0
   1375 DD 39              3937 	add	ix,sp
   1377 21 F6 FF           3938 	ld	hl,#-10
   137A 39                 3939 	add	hl,sp
   137B F9                 3940 	ld	sp,hl
                           3941 ;obj_.c:11: this->col_width  = HW_MATH_MUL(0.8 * 16384, this->width);
   137C DD 4E 04           3942 	ld	c,4 (ix)
   137F DD 46 05           3943 	ld	b,5 (ix)
   1382 21 09 00           3944 	ld	hl,#0x0009
   1385 09                 3945 	add	hl,bc
   1386 DD 75 FA           3946 	ld	-6 (ix),l
   1389 DD 74 FB           3947 	ld	-5 (ix),h
   138C 21 05 00           3948 	ld	hl,#0x0005
   138F 09                 3949 	add	hl,bc
   1390 7E                 3950 	ld	a,(hl)
   1391 DD 77 F8           3951 	ld	-8 (ix),a
   1394 23                 3952 	inc	hl
   1395 7E                 3953 	ld	a,(hl)
   1396 DD 77 F9           3954 	ld	-7 (ix),a
   1399 DD 5E F8           3955 	ld	e,-8 (ix)
   139C DD 56 F9           3956 	ld	d,-7 (ix)
                           3957 ;math.c:48: mm__mult_table = n1;
   139F FD 21 00 06        3958 	ld	iy,#_mm__mult_table
   13A3 FD 36 00 33        3959 	ld	0 (iy),#0x33
   13A7 FD 21 00 06        3960 	ld	iy,#_mm__mult_table
   13AB FD 36 01 33        3961 	ld	1 (iy),#0x33
                           3962 ;math.c:49: mm__mult_index = 0;
   13AF FD 21 0A 02        3963 	ld	iy,#_mm__mult_index
   13B3 FD 36 00 00        3964 	ld	0 (iy),#0x00
                           3965 ;math.c:50: mm__mult_write = n2;
   13B7 FD 21 08 02        3966 	ld	iy,#_mm__mult_write
   13BB FD 73 00           3967 	ld	0 (iy),e
   13BE FD 21 08 02        3968 	ld	iy,#_mm__mult_write
   13C2 FD 72 01           3969 	ld	1 (iy),d
                           3970 ;math.c:52: a = mm__mult_read;
   13C5 2A 04 07           3971 	ld	hl,(_mm__mult_read)
   13C8 DD 75 FE           3972 	ld	-2 (ix),l
   13CB DD 74 FF           3973 	ld	-1 (ix),h
                           3974 ;math.c:53: mm__mult_table = 0;     // restore sin table first entry
   13CE 21 00 06           3975 	ld	hl,#_mm__mult_table + 0
   13D1 36 00              3976 	ld	(hl), #0x00
   13D3 21 01 06           3977 	ld	hl,#_mm__mult_table + 1
   13D6 36 00              3978 	ld	(hl), #0x00
                           3979 ;obj_.c:11: this->col_width  = HW_MATH_MUL(0.8 * 16384, this->width);
   13D8 DD 6E FA           3980 	ld	l,-6 (ix)
   13DB DD 66 FB           3981 	ld	h,-5 (ix)
   13DE DD 7E FE           3982 	ld	a,-2 (ix)
   13E1 77                 3983 	ld	(hl),a
   13E2 23                 3984 	inc	hl
   13E3 DD 7E FF           3985 	ld	a,-1 (ix)
   13E6 77                 3986 	ld	(hl),a
                           3987 ;obj_.c:12: this->col_height = HW_MATH_MUL(0.8 * 16384, this->height);
   13E7 21 0B 00           3988 	ld	hl,#0x000B
   13EA 09                 3989 	add	hl,bc
   13EB DD 75 FA           3990 	ld	-6 (ix),l
   13EE DD 74 FB           3991 	ld	-5 (ix),h
   13F1 21 07 00           3992 	ld	hl,#0x0007
   13F4 09                 3993 	add	hl,bc
   13F5 7E                 3994 	ld	a,(hl)
   13F6 DD 77 F6           3995 	ld	-10 (ix),a
   13F9 23                 3996 	inc	hl
   13FA 7E                 3997 	ld	a,(hl)
   13FB DD 77 F7           3998 	ld	-9 (ix),a
   13FE DD 5E F6           3999 	ld	e,-10 (ix)
   1401 DD 56 F7           4000 	ld	d,-9 (ix)
                           4001 ;math.c:48: mm__mult_table = n1;
   1404 FD 21 00 06        4002 	ld	iy,#_mm__mult_table
   1408 FD 36 00 33        4003 	ld	0 (iy),#0x33
   140C FD 21 00 06        4004 	ld	iy,#_mm__mult_table
   1410 FD 36 01 33        4005 	ld	1 (iy),#0x33
                           4006 ;math.c:49: mm__mult_index = 0;
   1414 FD 21 0A 02        4007 	ld	iy,#_mm__mult_index
   1418 FD 36 00 00        4008 	ld	0 (iy),#0x00
                           4009 ;math.c:50: mm__mult_write = n2;
   141C FD 21 08 02        4010 	ld	iy,#_mm__mult_write
   1420 FD 73 00           4011 	ld	0 (iy),e
   1423 FD 21 08 02        4012 	ld	iy,#_mm__mult_write
   1427 FD 72 01           4013 	ld	1 (iy),d
                           4014 ;math.c:52: a = mm__mult_read;
   142A 2A 04 07           4015 	ld	hl,(_mm__mult_read)
   142D DD 75 FC           4016 	ld	-4 (ix),l
   1430 DD 74 FD           4017 	ld	-3 (ix),h
                           4018 ;math.c:53: mm__mult_table = 0;     // restore sin table first entry
   1433 21 00 06           4019 	ld	hl,#_mm__mult_table + 0
   1436 36 00              4020 	ld	(hl), #0x00
   1438 21 01 06           4021 	ld	hl,#_mm__mult_table + 1
   143B 36 00              4022 	ld	(hl), #0x00
                           4023 ;obj_.c:12: this->col_height = HW_MATH_MUL(0.8 * 16384, this->height);
   143D DD 6E FA           4024 	ld	l,-6 (ix)
   1440 DD 66 FB           4025 	ld	h,-5 (ix)
   1443 DD 7E FC           4026 	ld	a,-4 (ix)
   1446 77                 4027 	ld	(hl),a
   1447 23                 4028 	inc	hl
   1448 DD 7E FD           4029 	ld	a,-3 (ix)
   144B 77                 4030 	ld	(hl),a
                           4031 ;obj_.c:14: this->col_x_offset = (this->width - this->col_width) / 2;
   144C 21 0D 00           4032 	ld	hl,#0x000D
   144F 09                 4033 	add	hl,bc
   1450 DD 75 FA           4034 	ld	-6 (ix),l
   1453 DD 74 FB           4035 	ld	-5 (ix),h
   1456 DD 7E F8           4036 	ld	a,-8 (ix)
   1459 DD 96 FE           4037 	sub	a,-2 (ix)
   145C 5F                 4038 	ld	e,a
   145D DD 7E F9           4039 	ld	a,-7 (ix)
   1460 DD 9E FF           4040 	sbc	a,-1 (ix)
   1463 57                 4041 	ld	d,a
   1464 CB 3A              4042 	srl	d
   1466 CB 1B              4043 	rr	e
   1468 DD 6E FA           4044 	ld	l,-6 (ix)
   146B DD 66 FB           4045 	ld	h,-5 (ix)
   146E 73                 4046 	ld	(hl),e
   146F 23                 4047 	inc	hl
   1470 72                 4048 	ld	(hl),d
                           4049 ;obj_.c:15: this->col_y_offset = (this->height - this->col_height) / 2;
   1471 21 0F 00           4050 	ld	hl,#0x000F
   1474 09                 4051 	add	hl,bc
   1475 4D                 4052 	ld	c,l
   1476 44                 4053 	ld	b,h
   1477 DD 7E F6           4054 	ld	a,-10 (ix)
   147A DD 96 FC           4055 	sub	a,-4 (ix)
   147D 5F                 4056 	ld	e,a
   147E DD 7E F7           4057 	ld	a,-9 (ix)
   1481 DD 9E FD           4058 	sbc	a,-3 (ix)
   1484 57                 4059 	ld	d,a
   1485 CB 3A              4060 	srl	d
   1487 CB 1B              4061 	rr	e
   1489 69                 4062 	ld	l,c
   148A 60                 4063 	ld	h,b
   148B 73                 4064 	ld	(hl),e
   148C 23                 4065 	inc	hl
   148D 72                 4066 	ld	(hl),d
   148E DD F9              4067 	ld	sp,ix
   1490 DD E1              4068 	pop	ix
   1492 C9                 4069 	ret
   1493                    4070 _GameObj_InitCollideBox_end::
                           4071 ;obj_.c:25: BOOL GameObj_Collide(GameObj* this, GameObj* other)
                           4072 ;	---------------------------------
                           4073 ; Function GameObj_Collide
                           4074 ; ---------------------------------
   1493                    4075 _GameObj_Collide_start::
   1493                    4076 _GameObj_Collide:
   1493 DD E5              4077 	push	ix
   1495 DD 21 00 00        4078 	ld	ix,#0
   1499 DD 39              4079 	add	ix,sp
   149B 21 EE FF           4080 	ld	hl,#-18
   149E 39                 4081 	add	hl,sp
   149F F9                 4082 	ld	sp,hl
                           4083 ;obj_.c:33: left1 = this->x + this->col_x_offset;
   14A0 DD 4E 04           4084 	ld	c,4 (ix)
   14A3 DD 46 05           4085 	ld	b,5 (ix)
   14A6 69                 4086 	ld	l,c
   14A7 60                 4087 	ld	h,b
   14A8 23                 4088 	inc	hl
   14A9 7E                 4089 	ld	a,(hl)
   14AA DD 77 F2           4090 	ld	-14 (ix),a
   14AD 23                 4091 	inc	hl
   14AE 7E                 4092 	ld	a,(hl)
   14AF DD 77 F3           4093 	ld	-13 (ix),a
   14B2 21 0D 00           4094 	ld	hl,#0x000D
   14B5 09                 4095 	add	hl,bc
   14B6 5E                 4096 	ld	e,(hl)
   14B7 23                 4097 	inc	hl
   14B8 56                 4098 	ld	d,(hl)
   14B9 DD 7E F2           4099 	ld	a,-14 (ix)
   14BC 83                 4100 	add	a,e
   14BD 5F                 4101 	ld	e,a
   14BE DD 7E F3           4102 	ld	a,-13 (ix)
   14C1 8A                 4103 	adc	a,d
   14C2 57                 4104 	ld	d,a
   14C3 DD 73 FE           4105 	ld	-2 (ix),e
   14C6 DD 72 FF           4106 	ld	-1 (ix),d
                           4107 ;obj_.c:34: left2 = other->x + other->col_x_offset;
   14C9 DD 7E 06           4108 	ld	a,6 (ix)
   14CC DD 77 F2           4109 	ld	-14 (ix),a
   14CF DD 7E 07           4110 	ld	a,7 (ix)
   14D2 DD 77 F3           4111 	ld	-13 (ix),a
   14D5 DD 5E F2           4112 	ld	e,-14 (ix)
   14D8 DD 56 F3           4113 	ld	d,-13 (ix)
   14DB EB                 4114 	ex	de,hl
   14DC 23                 4115 	inc	hl
   14DD 7E                 4116 	ld	a,(hl)
   14DE DD 77 F0           4117 	ld	-16 (ix),a
   14E1 23                 4118 	inc	hl
   14E2 7E                 4119 	ld	a,(hl)
   14E3 DD 77 F1           4120 	ld	-15 (ix),a
   14E6 DD 7E F2           4121 	ld	a,-14 (ix)
   14E9 C6 0D              4122 	add	a,#0x0D
   14EB 6F                 4123 	ld	l, a
   14EC DD 7E F3           4124 	ld	a, -13 (ix)
   14EF CE 00              4125 	adc	a, #0x00
   14F1 67                 4126 	ld	h,a
   14F2 5E                 4127 	ld	e,(hl)
   14F3 23                 4128 	inc	hl
   14F4 56                 4129 	ld	d,(hl)
   14F5 DD 7E F0           4130 	ld	a,-16 (ix)
   14F8 83                 4131 	add	a,e
   14F9 5F                 4132 	ld	e,a
   14FA DD 7E F1           4133 	ld	a,-15 (ix)
   14FD 8A                 4134 	adc	a,d
   14FE 57                 4135 	ld	d,a
   14FF DD 73 FC           4136 	ld	-4 (ix),e
   1502 DD 72 FD           4137 	ld	-3 (ix),d
                           4138 ;obj_.c:35: right1 = left1 + this->col_width;
   1505 21 09 00           4139 	ld	hl,#0x0009
   1508 09                 4140 	add	hl,bc
   1509 5E                 4141 	ld	e,(hl)
   150A 23                 4142 	inc	hl
   150B 56                 4143 	ld	d,(hl)
   150C DD 7E FE           4144 	ld	a,-2 (ix)
   150F 83                 4145 	add	a,e
   1510 5F                 4146 	ld	e,a
   1511 DD 7E FF           4147 	ld	a,-1 (ix)
   1514 8A                 4148 	adc	a,d
   1515 57                 4149 	ld	d,a
   1516 DD 73 FA           4150 	ld	-6 (ix),e
   1519 DD 72 FB           4151 	ld	-5 (ix),d
                           4152 ;obj_.c:36: right2 = left2 + other->col_width;
   151C DD 7E F2           4153 	ld	a,-14 (ix)
   151F C6 09              4154 	add	a,#0x09
   1521 6F                 4155 	ld	l, a
   1522 DD 7E F3           4156 	ld	a, -13 (ix)
   1525 CE 00              4157 	adc	a, #0x00
   1527 67                 4158 	ld	h,a
   1528 5E                 4159 	ld	e,(hl)
   1529 23                 4160 	inc	hl
   152A 56                 4161 	ld	d,(hl)
   152B DD 7E FC           4162 	ld	a,-4 (ix)
   152E 83                 4163 	add	a,e
   152F 5F                 4164 	ld	e,a
   1530 DD 7E FD           4165 	ld	a,-3 (ix)
   1533 8A                 4166 	adc	a,d
   1534 57                 4167 	ld	d,a
   1535 DD 73 F8           4168 	ld	-8 (ix),e
   1538 DD 72 F9           4169 	ld	-7 (ix),d
                           4170 ;obj_.c:37: top1 = this->y + this->col_y_offset;
   153B 21 03 00           4171 	ld	hl,#0x0003
   153E 09                 4172 	add	hl,bc
   153F 7E                 4173 	ld	a,(hl)
   1540 DD 77 F0           4174 	ld	-16 (ix),a
   1543 23                 4175 	inc	hl
   1544 7E                 4176 	ld	a,(hl)
   1545 DD 77 F1           4177 	ld	-15 (ix),a
   1548 21 0F 00           4178 	ld	hl,#0x000F
   154B 09                 4179 	add	hl,bc
   154C 7E                 4180 	ld	a,(hl)
   154D DD 77 EE           4181 	ld	-18 (ix),a
   1550 23                 4182 	inc	hl
   1551 7E                 4183 	ld	a,(hl)
   1552 DD 77 EF           4184 	ld	-17 (ix),a
   1555 DD 7E F0           4185 	ld	a,-16 (ix)
   1558 DD 86 EE           4186 	add	a,-18 (ix)
   155B 5F                 4187 	ld	e,a
   155C DD 7E F1           4188 	ld	a,-15 (ix)
   155F DD 8E EF           4189 	adc	a,-17 (ix)
   1562 57                 4190 	ld	d,a
   1563 DD 73 F6           4191 	ld	-10 (ix),e
   1566 DD 72 F7           4192 	ld	-9 (ix),d
                           4193 ;obj_.c:38: top2 = other->y + this->col_y_offset;
   1569 DD 7E F2           4194 	ld	a,-14 (ix)
   156C C6 03              4195 	add	a,#0x03
   156E 6F                 4196 	ld	l, a
   156F DD 7E F3           4197 	ld	a, -13 (ix)
   1572 CE 00              4198 	adc	a, #0x00
   1574 67                 4199 	ld	h,a
   1575 5E                 4200 	ld	e,(hl)
   1576 23                 4201 	inc	hl
   1577 56                 4202 	ld	d,(hl)
   1578 7B                 4203 	ld	a,e
   1579 DD 86 EE           4204 	add	a,-18 (ix)
   157C 5F                 4205 	ld	e,a
   157D 7A                 4206 	ld	a,d
   157E DD 8E EF           4207 	adc	a,-17 (ix)
   1581 57                 4208 	ld	d,a
                           4209 ;obj_.c:39: bottom1 = top1 + this->col_height;
   1582 21 0B 00           4210 	ld	hl,#0x000B
   1585 09                 4211 	add	hl,bc
   1586 4E                 4212 	ld	c,(hl)
   1587 23                 4213 	inc	hl
   1588 46                 4214 	ld	b,(hl)
   1589 DD 7E F6           4215 	ld	a,-10 (ix)
   158C 81                 4216 	add	a,c
   158D 4F                 4217 	ld	c,a
   158E DD 7E F7           4218 	ld	a,-9 (ix)
   1591 88                 4219 	adc	a,b
   1592 47                 4220 	ld	b,a
   1593 DD 71 F4           4221 	ld	-12 (ix),c
   1596 DD 70 F5           4222 	ld	-11 (ix),b
                           4223 ;obj_.c:40: bottom2 = top2 + other->col_height;
   1599 DD 7E F2           4224 	ld	a,-14 (ix)
   159C C6 0B              4225 	add	a,#0x0B
   159E 6F                 4226 	ld	l, a
   159F DD 7E F3           4227 	ld	a, -13 (ix)
   15A2 CE 00              4228 	adc	a, #0x00
   15A4 67                 4229 	ld	h,a
   15A5 4E                 4230 	ld	c,(hl)
   15A6 23                 4231 	inc	hl
   15A7 46                 4232 	ld	b,(hl)
   15A8 7B                 4233 	ld	a,e
   15A9 81                 4234 	add	a,c
   15AA 4F                 4235 	ld	c,a
   15AB 7A                 4236 	ld	a,d
   15AC 88                 4237 	adc	a,b
   15AD 47                 4238 	ld	b,a
                           4239 ;obj_.c:42: if (bottom1 < top2) return(FALSE);
   15AE DD 7E F4           4240 	ld	a,-12 (ix)
   15B1 93                 4241 	sub	a,e
   15B2 DD 7E F5           4242 	ld	a,-11 (ix)
   15B5 9A                 4243 	sbc	a,d
   15B6 F2rBDs15           4244 	jp	P,00102$
   15B9 2E 00              4245 	ld	l,#0x00
   15BB 18 37              4246 	jr	00109$
   15BD                    4247 00102$:
                           4248 ;obj_.c:43: if (top1 > bottom2) return(FALSE);
   15BD 79                 4249 	ld	a,c
   15BE DD 96 F6           4250 	sub	a,-10 (ix)
   15C1 78                 4251 	ld	a,b
   15C2 DD 9E F7           4252 	sbc	a,-9 (ix)
   15C5 F2rCCs15           4253 	jp	P,00104$
   15C8 2E 00              4254 	ld	l,#0x00
   15CA 18 28              4255 	jr	00109$
   15CC                    4256 00104$:
                           4257 ;obj_.c:45: if (right1 < left2) return(FALSE);
   15CC DD 7E FA           4258 	ld	a,-6 (ix)
   15CF DD 96 FC           4259 	sub	a,-4 (ix)
   15D2 DD 7E FB           4260 	ld	a,-5 (ix)
   15D5 DD 9E FD           4261 	sbc	a,-3 (ix)
   15D8 F2rDFs15           4262 	jp	P,00106$
   15DB 2E 00              4263 	ld	l,#0x00
   15DD 18 15              4264 	jr	00109$
   15DF                    4265 00106$:
                           4266 ;obj_.c:46: if (left1 > right2) return(FALSE);
   15DF DD 7E F8           4267 	ld	a,-8 (ix)
   15E2 DD 96 FE           4268 	sub	a,-2 (ix)
   15E5 DD 7E F9           4269 	ld	a,-7 (ix)
   15E8 DD 9E FF           4270 	sbc	a,-1 (ix)
   15EB F2rF2s15           4271 	jp	P,00108$
   15EE 2E 00              4272 	ld	l,#0x00
   15F0 18 02              4273 	jr	00109$
   15F2                    4274 00108$:
                           4275 ;obj_.c:48: return(TRUE);
   15F2 2E 01              4276 	ld	l,#0x01
   15F4                    4277 00109$:
   15F4 DD F9              4278 	ld	sp,ix
   15F6 DD E1              4279 	pop	ix
   15F8 C9                 4280 	ret
   15F9                    4281 _GameObj_Collide_end::
                           4282 ;obj_anim.c:6: void GameObjAnim_Init(GameObjAnim* this, int x, int y/*, byte offset*/)
                           4283 ;	---------------------------------
                           4284 ; Function GameObjAnim_Init
                           4285 ; ---------------------------------
   15F9                    4286 _GameObjAnim_Init_start::
   15F9                    4287 _GameObjAnim_Init:
   15F9 DD E5              4288 	push	ix
   15FB DD 21 00 00        4289 	ld	ix,#0
   15FF DD 39              4290 	add	ix,sp
                           4291 ;obj_anim.c:8: this->gobj.x = x;
   1601 DD 4E 04           4292 	ld	c,4 (ix)
   1604 DD 46 05           4293 	ld	b,5 (ix)
   1607 69                 4294 	ld	l,c
   1608 60                 4295 	ld	h,b
   1609 23                 4296 	inc	hl
   160A DD 7E 06           4297 	ld	a,6 (ix)
   160D 77                 4298 	ld	(hl),a
   160E 23                 4299 	inc	hl
   160F DD 7E 07           4300 	ld	a,7 (ix)
   1612 77                 4301 	ld	(hl),a
                           4302 ;obj_anim.c:9: this->gobj.y = y;
   1613 21 03 00           4303 	ld	hl,#0x0003
   1616 09                 4304 	add	hl,bc
   1617 DD 7E 08           4305 	ld	a,8 (ix)
   161A 77                 4306 	ld	(hl),a
   161B 23                 4307 	inc	hl
   161C DD 7E 09           4308 	ld	a,9 (ix)
   161F 77                 4309 	ld	(hl),a
                           4310 ;obj_anim.c:11: this->is_Xflip = FALSE;
   1620 21 1E 00           4311 	ld	hl,#0x001E
   1623 09                 4312 	add	hl,bc
   1624 EB                 4313 	ex	de,hl
   1625 3E 00              4314 	ld	a,#0x00
   1627 12                 4315 	ld	(de),a
                           4316 ;obj_anim.c:12: this->isLoopAnim = TRUE;
   1628 21 24 00           4317 	ld	hl,#0x0024
   162B 09                 4318 	add	hl,bc
   162C EB                 4319 	ex	de,hl
   162D 3E 01              4320 	ld	a,#0x01
   162F 12                 4321 	ld	(de),a
                           4322 ;obj_anim.c:15: this->gobj.pMoveFunc = &GameObjAnim_Move;
   1630 21 13 00           4323 	ld	hl,#0x0013
   1633 09                 4324 	add	hl,bc
   1634 5D                 4325 	ld	e,l
   1635 36r47              4326 	ld	(hl),#<_GameObjAnim_Move
   1637 23                 4327 	inc	hl
   1638 36s16              4328 	ld	(hl),#>_GameObjAnim_Move
                           4329 ;obj_anim.c:16: this->gobj.pDrawFunc = &GameObjAnim_Draw;
   163A 21 15 00           4330 	ld	hl,#0x0015
   163D 09                 4331 	add	hl,bc
   163E 44                 4332 	ld	b,h
   163F 36r52              4333 	ld	(hl),#<_GameObjAnim_Draw
   1641 23                 4334 	inc	hl
   1642 36s16              4335 	ld	(hl),#>_GameObjAnim_Draw
   1644 DD E1              4336 	pop	ix
   1646 C9                 4337 	ret
   1647                    4338 _GameObjAnim_Init_end::
                           4339 ;obj_anim.c:21: void GameObjAnim_Move(GameObjAnim* this)
                           4340 ;	---------------------------------
                           4341 ; Function GameObjAnim_Move
                           4342 ; ---------------------------------
   1647                    4343 _GameObjAnim_Move_start::
   1647                    4344 _GameObjAnim_Move:
   1647 DD E5              4345 	push	ix
   1649 DD 21 00 00        4346 	ld	ix,#0
   164D DD 39              4347 	add	ix,sp
                           4348 ;obj_anim.c:24: }
   164F DD E1              4349 	pop	ix
   1651 C9                 4350 	ret
   1652                    4351 _GameObjAnim_Move_end::
                           4352 ;obj_anim.c:26: void GameObjAnim_Draw(GameObjAnim* this)
                           4353 ;	---------------------------------
                           4354 ; Function GameObjAnim_Draw
                           4355 ; ---------------------------------
   1652                    4356 _GameObjAnim_Draw_start::
   1652                    4357 _GameObjAnim_Draw:
   1652 DD E5              4358 	push	ix
   1654 DD 21 00 00        4359 	ld	ix,#0
   1658 DD 39              4360 	add	ix,sp
   165A 21 E3 FF           4361 	ld	hl,#-29
   165D 39                 4362 	add	hl,sp
   165E F9                 4363 	ld	sp,hl
                           4364 ;obj_anim.c:30: byte def_pitch = 0;
   165F DD 36 FC 00        4365 	ld	-4 (ix),#0x00
                           4366 ;obj_anim.c:32: if(!this->isAnimEnabled)
   1663 DD 5E 04           4367 	ld	e,4 (ix)
   1666 DD 56 05           4368 	ld	d,5 (ix)
   1669 21 23 00           4369 	ld	hl,#0x0023
   166C 19                 4370 	add	hl,de
   166D 7E                 4371 	ld	a,(hl)
   166E B7                 4372 	or	a,a
                           4373 ;obj_anim.c:33: return;
   166F CAr47s18           4374 	jp	Z,00114$
                           4375 ;obj_anim.c:34: Game_MarkFrameTime(0x0f0);
   1672 D5                 4376 	push	de
   1673 21 F0 00           4377 	ld	hl,#0x00F0
   1676 E5                 4378 	push	hl
   1677 CDrB9s3E           4379 	call	_Game_MarkFrameTime
   167A F1                 4380 	pop	af
   167B D1                 4381 	pop	de
                           4382 ;obj_anim.c:38: if(this->spr_count != PoolSprites_AllocateSpriteNumber(this->spr_count))
   167C 21 19 00           4383 	ld	hl,#0x0019
   167F 19                 4384 	add	hl,de
   1680 DD 75 FA           4385 	ld	-6 (ix),l
   1683 DD 74 FB           4386 	ld	-5 (ix),h
   1686 4E                 4387 	ld	c,(hl)
   1687 C5                 4388 	push	bc
   1688 D5                 4389 	push	de
   1689 79                 4390 	ld	a,c
   168A F5                 4391 	push	af
   168B 33                 4392 	inc	sp
   168C CDr8Fs10           4393 	call	_PoolSprites_AllocateSpriteNumber
   168F 33                 4394 	inc	sp
   1690 45                 4395 	ld	b,l
   1691 D1                 4396 	pop	de
   1692 78                 4397 	ld	a,b
   1693 C1                 4398 	pop	bc
   1694 47                 4399 	ld	b,a
   1695 79                 4400 	ld	a,c
   1696 90                 4401 	sub	b
                           4402 ;obj_anim.c:39: return;
                           4403 ;obj_anim.c:44: for(i=0;i<this->spr_count;i++)  {
   1697 C2r47s18           4404 	jp	NZ,00114$
   169A 21 21 00           4405 	ld	hl,#0x0021
   169D 19                 4406 	add	hl,de
   169E DD 75 EC           4407 	ld	-20 (ix),l
   16A1 DD 74 ED           4408 	ld	-19 (ix),h
   16A4 21 1A 00           4409 	ld	hl,#0x001A
   16A7 19                 4410 	add	hl,de
   16A8 DD 75 F8           4411 	ld	-8 (ix),l
   16AB DD 74 F9           4412 	ld	-7 (ix),h
   16AE 21 1E 00           4413 	ld	hl,#0x001E
   16B1 19                 4414 	add	hl,de
   16B2 DD 75 F6           4415 	ld	-10 (ix),l
   16B5 DD 74 F7           4416 	ld	-9 (ix),h
   16B8 21 1B 00           4417 	ld	hl,#0x001B
   16BB 19                 4418 	add	hl,de
   16BC DD 75 F4           4419 	ld	-12 (ix),l
   16BF DD 74 F5           4420 	ld	-11 (ix),h
   16C2 21 03 00           4421 	ld	hl,#0x0003
   16C5 19                 4422 	add	hl,de
   16C6 DD 75 F2           4423 	ld	-14 (ix),l
   16C9 DD 74 F3           4424 	ld	-13 (ix),h
   16CC 21 01 00           4425 	ld	hl,#0x0001
   16CF 19                 4426 	add	hl,de
   16D0 DD 75 F0           4427 	ld	-16 (ix),l
   16D3 DD 74 F1           4428 	ld	-15 (ix),h
   16D6 21 1D 00           4429 	ld	hl,#0x001D
   16D9 19                 4430 	add	hl,de
   16DA DD 75 EE           4431 	ld	-18 (ix),l
   16DD DD 74 EF           4432 	ld	-17 (ix),h
   16E0 DD 36 FF 00        4433 	ld	-1 (ix),#0x00
   16E4                    4434 00110$:
   16E4 DD 6E FA           4435 	ld	l,-6 (ix)
   16E7 DD 66 FB           4436 	ld	h,-5 (ix)
   16EA DD 7E FF           4437 	ld	a,-1 (ix)
   16ED 96                 4438 	sub	a,(hl)
   16EE D2rE9s17           4439 	jp	NC,00113$
                           4440 ;obj_anim.c:45: def = ((this->spr_anim_def_offset/256U) * this->spr_height)  + def_pitch;
   16F1 DD 6E EC           4441 	ld	l,-20 (ix)
   16F4 DD 66 ED           4442 	ld	h,-19 (ix)
   16F7 23                 4443 	inc	hl
   16F8 46                 4444 	ld	b,(hl)
   16F9 DD 70 EA           4445 	ld	-22 (ix),b
   16FC DD 36 EB 00        4446 	ld	-21 (ix),#0x00
   1700 DD 6E F8           4447 	ld	l,-8 (ix)
   1703 DD 66 F9           4448 	ld	h,-7 (ix)
   1706 7E                 4449 	ld	a,(hl)
   1707 DD 77 E9           4450 	ld	-23 (ix),a
   170A 4F                 4451 	ld	c, a
   170B 06 00              4452 	ld	b,#0x00
   170D D5                 4453 	push	de
   170E C5                 4454 	push	bc
   170F DD 6E EA           4455 	ld	l,-22 (ix)
   1712 DD 66 EB           4456 	ld	h,-21 (ix)
   1715 E5                 4457 	push	hl
   1716 CDr00s00           4458 	call	__mulint_rrx_s
   1719 F1                 4459 	pop	af
   171A F1                 4460 	pop	af
   171B DD 74 EB           4461 	ld	-21 (ix),h
   171E DD 75 EA           4462 	ld	-22 (ix),l
   1721 D1                 4463 	pop	de
   1722 DD 4E FC           4464 	ld	c,-4 (ix)
   1725 06 00              4465 	ld	b,#0x00
   1727 DD 7E EA           4466 	ld	a,-22 (ix)
   172A 81                 4467 	add	a,c
   172B 4F                 4468 	ld	c,a
   172C DD 7E EB           4469 	ld	a,-21 (ix)
   172F 88                 4470 	adc	a,b
   1730 47                 4471 	ld	b,a
   1731 DD 71 FD           4472 	ld	-3 (ix),c
   1734 DD 70 FE           4473 	ld	-2 (ix),b
                           4474 ;obj_anim.c:49: /*FALSE*/this->is_Xflip);
   1737 DD 6E F6           4475 	ld	l,-10 (ix)
   173A DD 66 F7           4476 	ld	h,-9 (ix)
   173D 7E                 4477 	ld	a,(hl)
   173E DD 77 EA           4478 	ld	-22 (ix),a
                           4479 ;obj_anim.c:48: this->spr_def_start + def,
   1741 DD 6E F4           4480 	ld	l,-12 (ix)
   1744 DD 66 F5           4481 	ld	h,-11 (ix)
   1747 4E                 4482 	ld	c,(hl)
   1748 23                 4483 	inc	hl
   1749 46                 4484 	ld	b,(hl)
   174A 79                 4485 	ld	a,c
   174B DD 86 FD           4486 	add	a,-3 (ix)
   174E DD 77 E7           4487 	ld	-25 (ix),a
   1751 78                 4488 	ld	a,b
   1752 DD 8E FE           4489 	adc	a,-2 (ix)
   1755 DD 77 E8           4490 	ld	-24 (ix),a
                           4491 ;obj_anim.c:46: set_sprite_regs(allocatedSpriteNumbers[i], this->gobj.x + i*16,  this->gobj.y,
   1758 DD 6E F2           4492 	ld	l,-14 (ix)
   175B DD 66 F3           4493 	ld	h,-13 (ix)
   175E 7E                 4494 	ld	a,(hl)
   175F DD 77 E5           4495 	ld	-27 (ix),a
   1762 23                 4496 	inc	hl
   1763 7E                 4497 	ld	a,(hl)
   1764 DD 77 E6           4498 	ld	-26 (ix),a
   1767 DD 6E F0           4499 	ld	l,-16 (ix)
   176A DD 66 F1           4500 	ld	h,-15 (ix)
   176D 7E                 4501 	ld	a,(hl)
   176E DD 77 E3           4502 	ld	-29 (ix),a
   1771 23                 4503 	inc	hl
   1772 7E                 4504 	ld	a,(hl)
   1773 DD 77 E4           4505 	ld	-28 (ix),a
   1776 DD 4E FF           4506 	ld	c,-1 (ix)
   1779 06 00              4507 	ld	b,#0x00
   177B CB 21              4508 	sla	c
   177D CB 10              4509 	rl	b
   177F CB 21              4510 	sla	c
   1781 CB 10              4511 	rl	b
   1783 CB 21              4512 	sla	c
   1785 CB 10              4513 	rl	b
   1787 CB 21              4514 	sla	c
   1789 CB 10              4515 	rl	b
   178B DD 7E E3           4516 	ld	a,-29 (ix)
   178E 81                 4517 	add	a,c
   178F DD 77 E3           4518 	ld	-29 (ix),a
   1792 DD 7E E4           4519 	ld	a,-28 (ix)
   1795 88                 4520 	adc	a,b
   1796 DD 77 E4           4521 	ld	-28 (ix),a
   1799 3Er55              4522 	ld	a,#<_allocatedSpriteNumbers
   179B DD 86 FF           4523 	add	a,-1 (ix)
   179E 4F                 4524 	ld	c,a
   179F 3Es03              4525 	ld	a,#>_allocatedSpriteNumbers
   17A1 CE 00              4526 	adc	a,#0x00
   17A3 47                 4527 	ld	b,a
   17A4 0A                 4528 	ld	a,(bc)
   17A5 4F                 4529 	ld	c,a
   17A6 D5                 4530 	push	de
   17A7 DD 7E EA           4531 	ld	a,-22 (ix)
   17AA F5                 4532 	push	af
   17AB 33                 4533 	inc	sp
   17AC DD 6E E7           4534 	ld	l,-25 (ix)
   17AF DD 66 E8           4535 	ld	h,-24 (ix)
   17B2 E5                 4536 	push	hl
   17B3 DD 7E E9           4537 	ld	a,-23 (ix)
   17B6 F5                 4538 	push	af
   17B7 33                 4539 	inc	sp
   17B8 DD 6E E5           4540 	ld	l,-27 (ix)
   17BB DD 66 E6           4541 	ld	h,-26 (ix)
   17BE E5                 4542 	push	hl
   17BF DD 6E E3           4543 	ld	l,-29 (ix)
   17C2 DD 66 E4           4544 	ld	h,-28 (ix)
   17C5 E5                 4545 	push	hl
   17C6 79                 4546 	ld	a,c
   17C7 F5                 4547 	push	af
   17C8 33                 4548 	inc	sp
   17C9 CDr1Fs09           4549 	call	_set_sprite_regs
   17CC FD 21 09 00        4550 	ld	iy,#0x0009
   17D0 FD 39              4551 	add	iy,sp
   17D2 FD F9              4552 	ld	sp,iy
   17D4 D1                 4553 	pop	de
                           4554 ;obj_anim.c:63: def_pitch += this->spr_def_pitch;
   17D5 DD 6E EE           4555 	ld	l,-18 (ix)
   17D8 DD 66 EF           4556 	ld	h,-17 (ix)
   17DB 4E                 4557 	ld	c,(hl)
   17DC DD 7E FC           4558 	ld	a,-4 (ix)
   17DF 81                 4559 	add	a,c
   17E0 DD 77 FC           4560 	ld	-4 (ix),a
                           4561 ;obj_anim.c:44: for(i=0;i<this->spr_count;i++)  {
   17E3 DD 34 FF           4562 	inc	-1 (ix)
   17E6 C3rE4s16           4563 	jp	00110$
   17E9                    4564 00113$:
                           4565 ;obj_anim.c:66: this->spr_anim_def_offset += this->spr_anim_def_step;
   17E9 DD 6E EC           4566 	ld	l,-20 (ix)
   17EC DD 66 ED           4567 	ld	h,-19 (ix)
   17EF 7E                 4568 	ld	a,(hl)
   17F0 DD 77 E3           4569 	ld	-29 (ix),a
   17F3 23                 4570 	inc	hl
   17F4 7E                 4571 	ld	a,(hl)
   17F5 DD 77 E4           4572 	ld	-28 (ix),a
   17F8 21 1F 00           4573 	ld	hl,#0x001F
   17FB 19                 4574 	add	hl,de
   17FC 4E                 4575 	ld	c,(hl)
   17FD 23                 4576 	inc	hl
   17FE 46                 4577 	ld	b,(hl)
   17FF DD 7E E3           4578 	ld	a,-29 (ix)
   1802 81                 4579 	add	a,c
   1803 4F                 4580 	ld	c,a
   1804 DD 7E E4           4581 	ld	a,-28 (ix)
   1807 88                 4582 	adc	a,b
   1808 47                 4583 	ld	b,a
   1809 DD 6E EC           4584 	ld	l,-20 (ix)
   180C DD 66 ED           4585 	ld	h,-19 (ix)
   180F 71                 4586 	ld	(hl),c
   1810 23                 4587 	inc	hl
   1811 70                 4588 	ld	(hl),b
                           4589 ;obj_anim.c:72: if( (this->spr_anim_def_offset/256U) >= this->spr_anim_frames)
   1812 DD 70 E3           4590 	ld	-29 (ix),b
   1815 DD 36 E4 00        4591 	ld	-28 (ix),#0x00
   1819 21 18 00           4592 	ld	hl,#0x0018
   181C 19                 4593 	add	hl,de
   181D 7E                 4594 	ld	a,(hl)
   181E 4F                 4595 	ld	c,a
   181F 06 00              4596 	ld	b,#0x00
   1821 DD 7E E3           4597 	ld	a,-29 (ix)
   1824 91                 4598 	sub	a,c
   1825 DD 7E E4           4599 	ld	a,-28 (ix)
   1828 98                 4600 	sbc	a,b
   1829 38 14              4601 	jr	C,00109$
                           4602 ;obj_anim.c:73: if(this->isLoopAnim)
   182B 21 24 00           4603 	ld	hl,#0x0024
   182E 19                 4604 	add	hl,de
   182F 7E                 4605 	ld	a,(hl)
   1830 B7                 4606 	or	a,a
   1831 28 07              4607 	jr	Z,00106$
                           4608 ;obj_anim.c:74: GameObjAnim_init_animation(this);
   1833 D5                 4609 	push	de
   1834 CDrA5s18           4610 	call	_GameObjAnim_init_animation
   1837 F1                 4611 	pop	af
   1838 18 05              4612 	jr	00109$
   183A                    4613 00106$:
                           4614 ;obj_anim.c:76: GameObjAnim_Free(this);
   183A D5                 4615 	push	de
   183B CDrEAs18           4616 	call	_GameObjAnim_Free
   183E F1                 4617 	pop	af
   183F                    4618 00109$:
                           4619 ;obj_anim.c:79: Game_MarkFrameTime(0xf00);
   183F 21 00 0F           4620 	ld	hl,#0x0F00
   1842 E5                 4621 	push	hl
   1843 CDrB9s3E           4622 	call	_Game_MarkFrameTime
   1846 F1                 4623 	pop	af
   1847                    4624 00114$:
   1847 DD F9              4625 	ld	sp,ix
   1849 DD E1              4626 	pop	ix
   184B C9                 4627 	ret
   184C                    4628 _GameObjAnim_Draw_end::
                           4629 ;obj_anim.c:82: void GameObjAnim_EnableAnimation(GameObjAnim* this, BOOL isEnable)
                           4630 ;	---------------------------------
                           4631 ; Function GameObjAnim_EnableAnimation
                           4632 ; ---------------------------------
   184C                    4633 _GameObjAnim_EnableAnimation_start::
   184C                    4634 _GameObjAnim_EnableAnimation:
   184C DD E5              4635 	push	ix
   184E DD 21 00 00        4636 	ld	ix,#0
   1852 DD 39              4637 	add	ix,sp
   1854 F5                 4638 	push	af
   1855 F5                 4639 	push	af
                           4640 ;obj_anim.c:85: this->isAnimEnabled = isEnable;
   1856 DD 4E 04           4641 	ld	c,4 (ix)
   1859 DD 46 05           4642 	ld	b,5 (ix)
   185C 21 23 00           4643 	ld	hl,#0x0023
   185F 09                 4644 	add	hl,bc
   1860 EB                 4645 	ex	de,hl
   1861 DD 7E 06           4646 	ld	a,6 (ix)
   1864 12                 4647 	ld	(de),a
                           4648 ;obj_anim.c:86: this->spr_anim_def_step = this->spr_anim_frames*256U / this->spr_anim_time;
   1865 21 1F 00           4649 	ld	hl,#0x001F
   1868 09                 4650 	add	hl,bc
   1869 DD 75 FE           4651 	ld	-2 (ix),l
   186C DD 74 FF           4652 	ld	-1 (ix),h
   186F 21 18 00           4653 	ld	hl,#0x0018
   1872 09                 4654 	add	hl,bc
   1873 7E                 4655 	ld	a,(hl)
   1874 DD 77 FD           4656 	ld	-3 (ix),a
   1877 DD 36 FC 00        4657 	ld	-4 (ix),#0x00
   187B 21 17 00           4658 	ld	hl,#0x0017
   187E 09                 4659 	add	hl,bc
   187F 5E                 4660 	ld	e,(hl)
   1880 16 00              4661 	ld	d,#0x00
   1882 C5                 4662 	push	bc
   1883 D5                 4663 	push	de
   1884 DD 6E FC           4664 	ld	l,-4 (ix)
   1887 DD 66 FD           4665 	ld	h,-3 (ix)
   188A E5                 4666 	push	hl
   188B CDr00s00           4667 	call	__divuint_rrx_s
   188E F1                 4668 	pop	af
   188F F1                 4669 	pop	af
   1890 EB                 4670 	ex	de,hl
   1891 C1                 4671 	pop	bc
   1892 DD 6E FE           4672 	ld	l,-2 (ix)
   1895 DD 66 FF           4673 	ld	h,-1 (ix)
   1898 73                 4674 	ld	(hl),e
   1899 23                 4675 	inc	hl
   189A 72                 4676 	ld	(hl),d
                           4677 ;obj_anim.c:88: GameObjAnim_init_animation(this);
   189B C5                 4678 	push	bc
   189C CDrA5s18           4679 	call	_GameObjAnim_init_animation
   189F F1                 4680 	pop	af
   18A0 DD F9              4681 	ld	sp,ix
   18A2 DD E1              4682 	pop	ix
   18A4 C9                 4683 	ret
   18A5                    4684 _GameObjAnim_EnableAnimation_end::
                           4685 ;obj_anim.c:92: void GameObjAnim_init_animation(GameObjAnim* this)
                           4686 ;	---------------------------------
                           4687 ; Function GameObjAnim_init_animation
                           4688 ; ---------------------------------
   18A5                    4689 _GameObjAnim_init_animation_start::
   18A5                    4690 _GameObjAnim_init_animation:
   18A5 DD E5              4691 	push	ix
   18A7 DD 21 00 00        4692 	ld	ix,#0
   18AB DD 39              4693 	add	ix,sp
                           4694 ;obj_anim.c:96: this->spr_anim_def_offset = 0 ;
   18AD DD 4E 04           4695 	ld	c,4 (ix)
   18B0 DD 46 05           4696 	ld	b,5 (ix)
   18B3 21 21 00           4697 	ld	hl,#0x0021
   18B6 09                 4698 	add	hl,bc
   18B7 36 00              4699 	ld	(hl),#0x00
   18B9 23                 4700 	inc	hl
   18BA 36 00              4701 	ld	(hl),#0x00
   18BC DD E1              4702 	pop	ix
   18BE C9                 4703 	ret
   18BF                    4704 _GameObjAnim_init_animation_end::
                           4705 ;obj_anim.c:101: void GameObjAnim_ShowOnlyFirstFrame(GameObjAnim* this)
                           4706 ;	---------------------------------
                           4707 ; Function GameObjAnim_ShowOnlyFirstFrame
                           4708 ; ---------------------------------
   18BF                    4709 _GameObjAnim_ShowOnlyFirstFrame_start::
   18BF                    4710 _GameObjAnim_ShowOnlyFirstFrame:
   18BF DD E5              4711 	push	ix
   18C1 DD 21 00 00        4712 	ld	ix,#0
   18C5 DD 39              4713 	add	ix,sp
                           4714 ;obj_anim.c:103: this->spr_anim_time      = 0;
   18C7 DD 4E 04           4715 	ld	c,4 (ix)
   18CA DD 46 05           4716 	ld	b,5 (ix)
   18CD 21 17 00           4717 	ld	hl,#0x0017
   18D0 09                 4718 	add	hl,bc
   18D1 EB                 4719 	ex	de,hl
   18D2 3E 00              4720 	ld	a,#0x00
   18D4 12                 4721 	ld	(de),a
                           4722 ;obj_anim.c:104: this->spr_anim_frames    = 0;
   18D5 21 18 00           4723 	ld	hl,#0x0018
   18D8 09                 4724 	add	hl,bc
   18D9 EB                 4725 	ex	de,hl
   18DA 3E 00              4726 	ld	a,#0x00
   18DC 12                 4727 	ld	(de),a
                           4728 ;obj_anim.c:105: GameObjAnim_EnableAnimation(this,TRUE);
   18DD 3E 01              4729 	ld	a,#0x01
   18DF F5                 4730 	push	af
   18E0 33                 4731 	inc	sp
   18E1 C5                 4732 	push	bc
   18E2 CDr4Cs18           4733 	call	_GameObjAnim_EnableAnimation
   18E5 F1                 4734 	pop	af
   18E6 33                 4735 	inc	sp
   18E7 DD E1              4736 	pop	ix
   18E9 C9                 4737 	ret
   18EA                    4738 _GameObjAnim_ShowOnlyFirstFrame_end::
                           4739 ;obj_anim.c:109: void GameObjAnim_Free(GameObjAnim* this)
                           4740 ;	---------------------------------
                           4741 ; Function GameObjAnim_Free
                           4742 ; ---------------------------------
   18EA                    4743 _GameObjAnim_Free_start::
   18EA                    4744 _GameObjAnim_Free:
   18EA DD E5              4745 	push	ix
   18EC DD 21 00 00        4746 	ld	ix,#0
   18F0 DD 39              4747 	add	ix,sp
                           4748 ;obj_anim.c:111: PoolGameObj_FreeGameObj( (GameObj*)this );
   18F2 DD 4E 04           4749 	ld	c,4 (ix)
   18F5 DD 46 05           4750 	ld	b,5 (ix)
   18F8 C5                 4751 	push	bc
   18F9 CDr11s11           4752 	call	_PoolGameObj_FreeGameObj
   18FC F1                 4753 	pop	af
   18FD DD E1              4754 	pop	ix
   18FF C9                 4755 	ret
   1900                    4756 _GameObjAnim_Free_end::
                           4757 ;obj_score.c:2: void GameObjScore_Init(GameObjScore* this, int x, int y)
                           4758 ;	---------------------------------
                           4759 ; Function GameObjScore_Init
                           4760 ; ---------------------------------
   1900                    4761 _GameObjScore_Init_start::
   1900                    4762 _GameObjScore_Init:
   1900 DD E5              4763 	push	ix
   1902 DD 21 00 00        4764 	ld	ix,#0
   1906 DD 39              4765 	add	ix,sp
                           4766 ;obj_score.c:4: this->gobj.x = x;
   1908 DD 4E 04           4767 	ld	c,4 (ix)
   190B DD 46 05           4768 	ld	b,5 (ix)
   190E 69                 4769 	ld	l,c
   190F 60                 4770 	ld	h,b
   1910 23                 4771 	inc	hl
   1911 DD 7E 06           4772 	ld	a,6 (ix)
   1914 77                 4773 	ld	(hl),a
   1915 23                 4774 	inc	hl
   1916 DD 7E 07           4775 	ld	a,7 (ix)
   1919 77                 4776 	ld	(hl),a
                           4777 ;obj_score.c:5: this->gobj.y = y;
   191A 21 03 00           4778 	ld	hl,#0x0003
   191D 09                 4779 	add	hl,bc
   191E DD 7E 08           4780 	ld	a,8 (ix)
   1921 77                 4781 	ld	(hl),a
   1922 23                 4782 	inc	hl
   1923 DD 7E 09           4783 	ld	a,9 (ix)
   1926 77                 4784 	ld	(hl),a
                           4785 ;obj_score.c:7: this->gobj.pMoveFunc = &GameObjScore_Move;
   1927 21 13 00           4786 	ld	hl,#0x0013
   192A 09                 4787 	add	hl,bc
   192B 5D                 4788 	ld	e,l
   192C 36r5E              4789 	ld	(hl),#<_GameObjScore_Move
   192E 23                 4790 	inc	hl
   192F 36s19              4791 	ld	(hl),#>_GameObjScore_Move
                           4792 ;obj_score.c:8: this->gobj.pDrawFunc = &GameObjScore_Draw;
   1931 21 15 00           4793 	ld	hl,#0x0015
   1934 09                 4794 	add	hl,bc
   1935 5D                 4795 	ld	e,l
   1936 54                 4796 	ld	d,h
   1937 36r27              4797 	ld	(hl),#<_GameObjScore_Draw
   1939 23                 4798 	inc	hl
   193A 36s1A              4799 	ld	(hl),#>_GameObjScore_Draw
                           4800 ;obj_score.c:10: this->state = NORMAL;
   193C 21 17 00           4801 	ld	hl,#0x0017
   193F 09                 4802 	add	hl,bc
   1940 EB                 4803 	ex	de,hl
   1941 3E 00              4804 	ld	a,#0x00
   1943 12                 4805 	ld	(de),a
                           4806 ;obj_score.c:12: this->is_show = TRUE;
   1944 21 20 00           4807 	ld	hl,#0x0020
   1947 09                 4808 	add	hl,bc
   1948 EB                 4809 	ex	de,hl
   1949 3E 01              4810 	ld	a,#0x01
   194B 12                 4811 	ld	(de),a
                           4812 ;obj_score.c:13: this->off_time_counter = this->off_num_switches = 0;
   194C 21 1E 00           4813 	ld	hl,#0x001E
   194F 09                 4814 	add	hl,bc
   1950 EB                 4815 	ex	de,hl
   1951 21 1F 00           4816 	ld	hl,#0x001F
   1954 09                 4817 	add	hl,bc
   1955 4D                 4818 	ld	c,l
   1956 44                 4819 	ld	b,h
   1957 3E 00              4820 	ld	a,#0x00
   1959 02                 4821 	ld	(bc),a
   195A 12                 4822 	ld	(de),a
   195B DD E1              4823 	pop	ix
   195D C9                 4824 	ret
   195E                    4825 _GameObjScore_Init_end::
                           4826 ;obj_score.c:18: void GameObjScore_Move(GameObjScore* this)
                           4827 ;	---------------------------------
                           4828 ; Function GameObjScore_Move
                           4829 ; ---------------------------------
   195E                    4830 _GameObjScore_Move_start::
   195E                    4831 _GameObjScore_Move:
   195E DD E5              4832 	push	ix
   1960 DD 21 00 00        4833 	ld	ix,#0
   1964 DD 39              4834 	add	ix,sp
   1966 21 FA FF           4835 	ld	hl,#-6
   1969 39                 4836 	add	hl,sp
   196A F9                 4837 	ld	sp,hl
                           4838 ;obj_score.c:20: if(this->state == BLINKING) {
   196B DD 4E 04           4839 	ld	c,4 (ix)
   196E DD 46 05           4840 	ld	b,5 (ix)
   1971 21 17 00           4841 	ld	hl,#0x0017
   1974 09                 4842 	add	hl,bc
   1975 DD 75 FE           4843 	ld	-2 (ix),l
   1978 DD 74 FF           4844 	ld	-1 (ix),h
   197B 7E                 4845 	ld	a,(hl)
   197C D6 03              4846 	sub	a,#0x03
   197E C2rDAs19           4847 	jp	NZ,00106$
                           4848 ;obj_score.c:21: if(this->off_time_counter > 25) {
   1981 21 1E 00           4849 	ld	hl,#0x001E
   1984 09                 4850 	add	hl,bc
   1985 DD 75 FC           4851 	ld	-4 (ix),l
   1988 DD 74 FD           4852 	ld	-3 (ix),h
   198B 5E                 4853 	ld	e,(hl)
   198C 3E 19              4854 	ld	a,#0x19
   198E 93                 4855 	sub	a,e
   198F 30 2A              4856 	jr	NC,00104$
                           4857 ;obj_score.c:22: this->off_num_switches++;
   1991 21 1F 00           4858 	ld	hl,#0x001F
   1994 09                 4859 	add	hl,bc
   1995 DD 75 FA           4860 	ld	-6 (ix),l
   1998 DD 74 FB           4861 	ld	-5 (ix),h
   199B 5E                 4862 	ld	e,(hl)
   199C 1C                 4863 	inc	e
   199D DD 6E FA           4864 	ld	l,-6 (ix)
   19A0 DD 66 FB           4865 	ld	h,-5 (ix)
   19A3 73                 4866 	ld	(hl),e
                           4867 ;obj_score.c:23: this->off_time_counter = 0;
   19A4 DD 6E FC           4868 	ld	l,-4 (ix)
   19A7 DD 66 FD           4869 	ld	h,-3 (ix)
   19AA 36 00              4870 	ld	(hl),#0x00
                           4871 ;obj_score.c:25: if(this->off_num_switches & 1)
   19AC 7B                 4872 	ld	a,e
   19AD E6 01              4873 	and	a,#0x01
   19AF 28 0A              4874 	jr	Z,00104$
                           4875 ;obj_score.c:26: Sound_NewFx(SOUND_FX_LASER_SHOT);
   19B1 C5                 4876 	push	bc
   19B2 3E 07              4877 	ld	a,#0x07
   19B4 F5                 4878 	push	af
   19B5 33                 4879 	inc	sp
   19B6 CDr00s00           4880 	call	_Sound_NewFx
   19B9 33                 4881 	inc	sp
   19BA C1                 4882 	pop	bc
   19BB                    4883 00104$:
                           4884 ;obj_score.c:28: this->off_time_counter++;
   19BB DD 6E FC           4885 	ld	l,-4 (ix)
   19BE DD 66 FD           4886 	ld	h,-3 (ix)
   19C1 34                 4887 	inc	(hl)
                           4888 ;obj_score.c:30: this->is_show = this->off_num_switches & 1;
   19C2 21 20 00           4889 	ld	hl,#0x0020
   19C5 09                 4890 	add	hl,bc
   19C6 DD 75 FA           4891 	ld	-6 (ix),l
   19C9 DD 74 FB           4892 	ld	-5 (ix),h
   19CC 21 1F 00           4893 	ld	hl,#0x001F
   19CF 09                 4894 	add	hl,bc
   19D0 7E                 4895 	ld	a,(hl)
   19D1 E6 01              4896 	and	a,#0x01
   19D3 DD 6E FA           4897 	ld	l,-6 (ix)
   19D6 DD 66 FB           4898 	ld	h,-5 (ix)
   19D9 77                 4899 	ld	(hl),a
   19DA                    4900 00106$:
                           4901 ;obj_score.c:34: if(this->score >= MAX_SCORE_FOR_LEVEL &&
   19DA 21 18 00           4902 	ld	hl,#0x0018
   19DD 09                 4903 	add	hl,bc
   19DE 5E                 4904 	ld	e,(hl)
   19DF 23                 4905 	inc	hl
   19E0 56                 4906 	ld	d,(hl)
   19E1 7B                 4907 	ld	a,e
   19E2 D6 0A              4908 	sub	a,#0x0A
   19E4 7A                 4909 	ld	a,d
   19E5 DE 00              4910 	sbc	a,#0x00
   19E7 FAr22s1A           4911 	jp	M,00114$
                           4912 ;obj_score.c:35: this->state == BLINKING && this->off_num_switches >= 8) {
   19EA DD 6E FE           4913 	ld	l,-2 (ix)
   19ED DD 66 FF           4914 	ld	h,-1 (ix)
   19F0 7E                 4915 	ld	a,(hl)
   19F1 D6 03              4916 	sub	a,#0x03
   19F3 20 2D              4917 	jr	NZ,00114$
   19F5 21 1F 00           4918 	ld	hl,#0x001F
   19F8 09                 4919 	add	hl,bc
   19F9 7E                 4920 	ld	a,(hl)
   19FA D6 08              4921 	sub	a,#0x08
   19FC 38 24              4922 	jr	C,00114$
                           4923 ;obj_score.c:36: if(this == &scoreA)
   19FE C5                 4924 	push	bc
                           4925 ;	direct compare
   19FF 3Er01              4926 	ld	a,#<_scoreA
   1A01 91                 4927 	sub	c
   1A02 20 09              4928 	jr	NZ,00128$
                           4929 ;	direct compare
   1A04 48                 4930 	ld	c,b
   1A05 3Es02              4931 	ld	a,#>_scoreA
   1A07 91                 4932 	sub	c
   1A08 20 03              4933 	jr	NZ,00128$
   1A0A C1                 4934 	pop	bc
   1A0B 18 03              4935 	jr	00129$
   1A0D                    4936 00128$:
   1A0D C1                 4937 	pop	bc
   1A0E 18 0A              4938 	jr	00108$
   1A10                    4939 00129$:
                           4940 ;obj_score.c:37: helper_GameObjYouWin_StartAnimation(0);
   1A10 3E 00              4941 	ld	a,#0x00
   1A12 F5                 4942 	push	af
   1A13 33                 4943 	inc	sp
   1A14 CDr55s30           4944 	call	_helper_GameObjYouWin_StartAnimation
   1A17 33                 4945 	inc	sp
   1A18 18 08              4946 	jr	00114$
   1A1A                    4947 00108$:
                           4948 ;obj_score.c:39: helper_GameObjYouWin_StartAnimation(1);
   1A1A 3E 01              4949 	ld	a,#0x01
   1A1C F5                 4950 	push	af
   1A1D 33                 4951 	inc	sp
   1A1E CDr55s30           4952 	call	_helper_GameObjYouWin_StartAnimation
   1A21 33                 4953 	inc	sp
   1A22                    4954 00114$:
   1A22 DD F9              4955 	ld	sp,ix
   1A24 DD E1              4956 	pop	ix
   1A26 C9                 4957 	ret
   1A27                    4958 _GameObjScore_Move_end::
                           4959 ;obj_score.c:44: void GameObjScore_Draw(GameObjScore* this)
                           4960 ;	---------------------------------
                           4961 ; Function GameObjScore_Draw
                           4962 ; ---------------------------------
   1A27                    4963 _GameObjScore_Draw_start::
   1A27                    4964 _GameObjScore_Draw:
   1A27 DD E5              4965 	push	ix
   1A29 DD 21 00 00        4966 	ld	ix,#0
   1A2D DD 39              4967 	add	ix,sp
                           4968 ;obj_score.c:46: if(this->is_show) {
   1A2F DD 4E 04           4969 	ld	c,4 (ix)
   1A32 DD 46 05           4970 	ld	b,5 (ix)
   1A35 21 20 00           4971 	ld	hl,#0x0020
   1A38 09                 4972 	add	hl,bc
   1A39 7E                 4973 	ld	a,(hl)
   1A3A B7                 4974 	or	a,a
   1A3B 28 07              4975 	jr	Z,00102$
                           4976 ;obj_score.c:47: GameObjScore_draw_score(this);
   1A3D C5                 4977 	push	bc
   1A3E C5                 4978 	push	bc
   1A3F CDr4Cs1A           4979 	call	_GameObjScore_draw_score
   1A42 F1                 4980 	pop	af
   1A43 C1                 4981 	pop	bc
   1A44                    4982 00102$:
                           4983 ;obj_score.c:50: GameObjScore_Draw_PlayerRocketsIndicator(this);
   1A44 C5                 4984 	push	bc
   1A45 CDr2Fs1C           4985 	call	_GameObjScore_Draw_PlayerRocketsIndicator
   1A48 F1                 4986 	pop	af
   1A49 DD E1              4987 	pop	ix
   1A4B C9                 4988 	ret
   1A4C                    4989 _GameObjScore_Draw_end::
                           4990 ;obj_score.c:56: void GameObjScore_draw_score(GameObjScore* this)
                           4991 ;	---------------------------------
                           4992 ; Function GameObjScore_draw_score
                           4993 ; ---------------------------------
   1A4C                    4994 _GameObjScore_draw_score_start::
   1A4C                    4995 _GameObjScore_draw_score:
   1A4C DD E5              4996 	push	ix
   1A4E DD 21 00 00        4997 	ld	ix,#0
   1A52 DD 39              4998 	add	ix,sp
   1A54 21 F7 FF           4999 	ld	hl,#-9
   1A57 39                 5000 	add	hl,sp
   1A58 F9                 5001 	ld	sp,hl
                           5002 ;obj_score.c:60: char* p = this->score_str;
   1A59 DD 4E 04           5003 	ld	c,4 (ix)
   1A5C DD 46 05           5004 	ld	b,5 (ix)
   1A5F 21 1A 00           5005 	ld	hl,#0x001A
   1A62 09                 5006 	add	hl,bc
   1A63 DD 75 FD           5007 	ld	-3 (ix),l
   1A66 DD 74 FE           5008 	ld	-2 (ix),h
                           5009 ;obj_score.c:61: int x = this->gobj.x; int y =  this->gobj.y;
   1A69 69                 5010 	ld	l,c
   1A6A 60                 5011 	ld	h,b
   1A6B 23                 5012 	inc	hl
   1A6C 5E                 5013 	ld	e,(hl)
   1A6D 23                 5014 	inc	hl
   1A6E 56                 5015 	ld	d,(hl)
   1A6F DD 73 FB           5016 	ld	-5 (ix),e
   1A72 DD 72 FC           5017 	ld	-4 (ix),d
   1A75 21 03 00           5018 	ld	hl,#0x0003
   1A78 09                 5019 	add	hl,bc
   1A79 5E                 5020 	ld	e,(hl)
   1A7A 23                 5021 	inc	hl
   1A7B 56                 5022 	ld	d,(hl)
   1A7C DD 73 F9           5023 	ld	-7 (ix),e
   1A7F DD 72 FA           5024 	ld	-6 (ix),d
                           5025 ;obj_score.c:65: spr1_def = SPRITE_DEF_NUM_DIGIT + (p[0] - 0x30);
   1A82 DD 6E FD           5026 	ld	l,-3 (ix)
   1A85 DD 66 FE           5027 	ld	h,-2 (ix)
   1A88 7E                 5028 	ld	a,(hl)
   1A89 C6 D4              5029 	add	a,#0xD4
   1A8B DD 77 FF           5030 	ld	-1 (ix),a
                           5031 ;obj_score.c:66: if(p[1] != 0)
   1A8E DD 5E FD           5032 	ld	e,-3 (ix)
   1A91 DD 56 FE           5033 	ld	d,-2 (ix)
   1A94 13                 5034 	inc	de
   1A95 1A                 5035 	ld	a,(de)
   1A96 5F                 5036 	ld	e,a
   1A97 B7                 5037 	or	a,a
   1A98 28 06              5038 	jr	Z,00102$
                           5039 ;obj_score.c:67: spr2_def = SPRITE_DEF_NUM_DIGIT + (p[1] - 0x30);
   1A9A 7B                 5040 	ld	a,e
   1A9B C6 D4              5041 	add	a,#0xD4
   1A9D 57                 5042 	ld	d,a
   1A9E 18 02              5043 	jr	00103$
   1AA0                    5044 00102$:
                           5045 ;obj_score.c:69: spr2_def = 0xff;
   1AA0 16 FF              5046 	ld	d,#0xFF
   1AA2                    5047 00103$:
                           5048 ;obj_score.c:74: set_sprite_regs(this->sprite_num  , x,      y, spr_height, spr1_def, FALSE);
   1AA2 DD 7E FF           5049 	ld	a,-1 (ix)
   1AA5 DD 77 F7           5050 	ld	-9 (ix),a
   1AA8 DD 36 F8 00        5051 	ld	-8 (ix),#0x00
   1AAC 21 1D 00           5052 	ld	hl,#0x001D
   1AAF 09                 5053 	add	hl,bc
   1AB0 4D                 5054 	ld	c,l
   1AB1 44                 5055 	ld	b,h
   1AB2 0A                 5056 	ld	a,(bc)
   1AB3 5F                 5057 	ld	e,a
   1AB4 C5                 5058 	push	bc
   1AB5 D5                 5059 	push	de
   1AB6 3E 00              5060 	ld	a,#0x00
   1AB8 F5                 5061 	push	af
   1AB9 33                 5062 	inc	sp
   1ABA DD 6E F7           5063 	ld	l,-9 (ix)
   1ABD DD 66 F8           5064 	ld	h,-8 (ix)
   1AC0 E5                 5065 	push	hl
   1AC1 3E 01              5066 	ld	a,#0x01
   1AC3 F5                 5067 	push	af
   1AC4 33                 5068 	inc	sp
   1AC5 DD 6E F9           5069 	ld	l,-7 (ix)
   1AC8 DD 66 FA           5070 	ld	h,-6 (ix)
   1ACB E5                 5071 	push	hl
   1ACC DD 6E FB           5072 	ld	l,-5 (ix)
   1ACF DD 66 FC           5073 	ld	h,-4 (ix)
   1AD2 E5                 5074 	push	hl
   1AD3 7B                 5075 	ld	a,e
   1AD4 F5                 5076 	push	af
   1AD5 33                 5077 	inc	sp
   1AD6 CDr1Fs09           5078 	call	_set_sprite_regs
   1AD9 FD 21 09 00        5079 	ld	iy,#0x0009
   1ADD FD 39              5080 	add	iy,sp
   1ADF FD F9              5081 	ld	sp,iy
   1AE1 D1                 5082 	pop	de
   1AE2 C1                 5083 	pop	bc
                           5084 ;obj_score.c:75: if(spr2_def == 0xff)
   1AE3 7A                 5085 	ld	a,d
   1AE4 3C                 5086 	inc	a
   1AE5 20 08              5087 	jr	NZ,00105$
                           5088 ;obj_score.c:76: y = 256;        // put sprite off-screen
   1AE7 DD 36 F9 00        5089 	ld	-7 (ix),#0x00
   1AEB DD 36 FA 01        5090 	ld	-6 (ix),#0x01
   1AEF                    5091 00105$:
                           5092 ;obj_score.c:77: set_sprite_regs(this->sprite_num+1, x+16,   y, spr_height, spr2_def, FALSE);
   1AEF DD 72 F7           5093 	ld	-9 (ix),d
   1AF2 DD 36 F8 00        5094 	ld	-8 (ix),#0x00
   1AF6 DD 7E FB           5095 	ld	a,-5 (ix)
   1AF9 C6 10              5096 	add	a,#0x10
   1AFB 5F                 5097 	ld	e,a
   1AFC DD 7E FC           5098 	ld	a,-4 (ix)
   1AFF CE 00              5099 	adc	a,#0x00
   1B01 57                 5100 	ld	d,a
   1B02 0A                 5101 	ld	a,(bc)
   1B03 4F                 5102 	ld	c,a
   1B04 0C                 5103 	inc	c
   1B05 3E 00              5104 	ld	a,#0x00
   1B07 F5                 5105 	push	af
   1B08 33                 5106 	inc	sp
   1B09 DD 6E F7           5107 	ld	l,-9 (ix)
   1B0C DD 66 F8           5108 	ld	h,-8 (ix)
   1B0F E5                 5109 	push	hl
   1B10 3E 01              5110 	ld	a,#0x01
   1B12 F5                 5111 	push	af
   1B13 33                 5112 	inc	sp
   1B14 DD 6E F9           5113 	ld	l,-7 (ix)
   1B17 DD 66 FA           5114 	ld	h,-6 (ix)
   1B1A E5                 5115 	push	hl
   1B1B D5                 5116 	push	de
   1B1C 79                 5117 	ld	a,c
   1B1D F5                 5118 	push	af
   1B1E 33                 5119 	inc	sp
   1B1F CDr1Fs09           5120 	call	_set_sprite_regs
   1B22 FD 21 09 00        5121 	ld	iy,#0x0009
   1B26 FD 39              5122 	add	iy,sp
   1B28 FD F9              5123 	ld	sp,iy
   1B2A DD F9              5124 	ld	sp,ix
   1B2C DD E1              5125 	pop	ix
   1B2E C9                 5126 	ret
   1B2F                    5127 _GameObjScore_draw_score_end::
                           5128 ;obj_score.c:84: void GameObjScore_UpdateScore(GameObjScore* this)
                           5129 ;	---------------------------------
                           5130 ; Function GameObjScore_UpdateScore
                           5131 ; ---------------------------------
   1B2F                    5132 _GameObjScore_UpdateScore_start::
   1B2F                    5133 _GameObjScore_UpdateScore:
   1B2F DD E5              5134 	push	ix
   1B31 DD 21 00 00        5135 	ld	ix,#0
   1B35 DD 39              5136 	add	ix,sp
                           5137 ;obj_score.c:87: _uitoa(this->score, this->score_str, 10);
   1B37 DD 4E 04           5138 	ld	c,4 (ix)
   1B3A DD 46 05           5139 	ld	b,5 (ix)
   1B3D 21 1A 00           5140 	ld	hl,#0x001A
   1B40 09                 5141 	add	hl,bc
   1B41 EB                 5142 	ex	de,hl
   1B42 21 18 00           5143 	ld	hl,#0x0018
   1B45 09                 5144 	add	hl,bc
   1B46 4E                 5145 	ld	c,(hl)
   1B47 23                 5146 	inc	hl
   1B48 46                 5147 	ld	b,(hl)
   1B49 3E 0A              5148 	ld	a,#0x0A
   1B4B F5                 5149 	push	af
   1B4C 33                 5150 	inc	sp
   1B4D D5                 5151 	push	de
   1B4E C5                 5152 	push	bc
   1B4F CDr00s00           5153 	call	__uitoa
   1B52 F1                 5154 	pop	af
   1B53 F1                 5155 	pop	af
   1B54 33                 5156 	inc	sp
   1B55 DD E1              5157 	pop	ix
   1B57 C9                 5158 	ret
   1B58                    5159 _GameObjScore_UpdateScore_end::
                           5160 ;obj_score.c:91: void GameObjScore_SetState(GameObjScore* this, ObjState state)
                           5161 ;	---------------------------------
                           5162 ; Function GameObjScore_SetState
                           5163 ; ---------------------------------
   1B58                    5164 _GameObjScore_SetState_start::
   1B58                    5165 _GameObjScore_SetState:
   1B58 DD E5              5166 	push	ix
   1B5A DD 21 00 00        5167 	ld	ix,#0
   1B5E DD 39              5168 	add	ix,sp
   1B60 F5                 5169 	push	af
                           5170 ;obj_score.c:95: if(state == this->state)
   1B61 DD 4E 04           5171 	ld	c,4 (ix)
   1B64 DD 46 05           5172 	ld	b,5 (ix)
   1B67 21 17 00           5173 	ld	hl,#0x0017
   1B6A 09                 5174 	add	hl,bc
   1B6B DD 75 FE           5175 	ld	-2 (ix),l
   1B6E DD 74 FF           5176 	ld	-1 (ix),h
   1B71 5E                 5177 	ld	e,(hl)
   1B72 DD 7E 06           5178 	ld	a,6 (ix)
   1B75 93                 5179 	sub	e
   1B76 20 02              5180 	jr	NZ,00102$
                           5181 ;obj_score.c:96: return;
   1B78 18 32              5182 	jr	00105$
   1B7A                    5183 00102$:
                           5184 ;obj_score.c:97: this->state = state;
   1B7A DD 6E FE           5185 	ld	l,-2 (ix)
   1B7D DD 66 FF           5186 	ld	h,-1 (ix)
   1B80 DD 7E 06           5187 	ld	a,6 (ix)
   1B83 77                 5188 	ld	(hl),a
                           5189 ;obj_score.c:99: if(this->state == BLINKING) {
   1B84 DD 7E 06           5190 	ld	a,6 (ix)
   1B87 D6 03              5191 	sub	a,#0x03
   1B89 20 21              5192 	jr	NZ,00105$
                           5193 ;obj_score.c:101: this->off_time_counter = this->off_num_switches = this->is_show = 0;
   1B8B 21 1E 00           5194 	ld	hl,#0x001E
   1B8E 09                 5195 	add	hl,bc
   1B8F DD 75 FE           5196 	ld	-2 (ix),l
   1B92 DD 74 FF           5197 	ld	-1 (ix),h
   1B95 21 1F 00           5198 	ld	hl,#0x001F
   1B98 09                 5199 	add	hl,bc
   1B99 EB                 5200 	ex	de,hl
   1B9A 21 20 00           5201 	ld	hl,#0x0020
   1B9D 09                 5202 	add	hl,bc
   1B9E 4D                 5203 	ld	c,l
   1B9F 44                 5204 	ld	b,h
   1BA0 3E 00              5205 	ld	a,#0x00
   1BA2 02                 5206 	ld	(bc),a
   1BA3 12                 5207 	ld	(de),a
   1BA4 DD 6E FE           5208 	ld	l,-2 (ix)
   1BA7 DD 66 FF           5209 	ld	h,-1 (ix)
   1BAA 36 00              5210 	ld	(hl),#0x00
   1BAC                    5211 00105$:
   1BAC DD F9              5212 	ld	sp,ix
   1BAE DD E1              5213 	pop	ix
   1BB0 C9                 5214 	ret
   1BB1                    5215 _GameObjScore_SetState_end::
                           5216 ;obj_score.c:106: void GameObjScore_SetScore(GameObjScore* this, short score)
                           5217 ;	---------------------------------
                           5218 ; Function GameObjScore_SetScore
                           5219 ; ---------------------------------
   1BB1                    5220 _GameObjScore_SetScore_start::
   1BB1                    5221 _GameObjScore_SetScore:
   1BB1 DD E5              5222 	push	ix
   1BB3 DD 21 00 00        5223 	ld	ix,#0
   1BB7 DD 39              5224 	add	ix,sp
                           5225 ;obj_score.c:108: this->score = score;
   1BB9 DD 4E 04           5226 	ld	c,4 (ix)
   1BBC DD 46 05           5227 	ld	b,5 (ix)
   1BBF 21 18 00           5228 	ld	hl,#0x0018
   1BC2 09                 5229 	add	hl,bc
   1BC3 DD 7E 06           5230 	ld	a,6 (ix)
   1BC6 77                 5231 	ld	(hl),a
   1BC7 23                 5232 	inc	hl
   1BC8 DD 7E 07           5233 	ld	a,7 (ix)
   1BCB 77                 5234 	ld	(hl),a
                           5235 ;obj_score.c:109: GameObjScore_UpdateScore(this);
   1BCC C5                 5236 	push	bc
   1BCD CDr2Fs1B           5237 	call	_GameObjScore_UpdateScore
   1BD0 F1                 5238 	pop	af
   1BD1 DD E1              5239 	pop	ix
   1BD3 C9                 5240 	ret
   1BD4                    5241 _GameObjScore_SetScore_end::
                           5242 ;obj_score.c:121: BOOL helper_GameObjScore_IsScoreBlinkedAtLeast(byte num)
                           5243 ;	---------------------------------
                           5244 ; Function helper_GameObjScore_IsScoreBlinkedAtLeast
                           5245 ; ---------------------------------
   1BD4                    5246 _helper_GameObjScore_IsScoreBlinkedAtLeast_start::
   1BD4                    5247 _helper_GameObjScore_IsScoreBlinkedAtLeast:
   1BD4 DD E5              5248 	push	ix
   1BD6 DD 21 00 00        5249 	ld	ix,#0
   1BDA DD 39              5250 	add	ix,sp
                           5251 ;obj_score.c:123: return ((scoreA.state == BLINKING  && scoreA.off_num_switches >= num) ||
   1BDC 01r18s02           5252 	ld	bc,#_scoreA + 23
   1BDF 0A                 5253 	ld	a,(bc)
   1BE0 D6 03              5254 	sub	a,#0x03
   1BE2 20 13              5255 	jr	NZ,00106$
   1BE4 01r20s02           5256 	ld	bc,#_scoreA + 31
   1BE7 0A                 5257 	ld	a,(bc)
   1BE8 DD 96 04           5258 	sub	a,4 (ix)
   1BEB 3E 00              5259 	ld	a,#0x00
   1BED 17                 5260 	rla
   1BEE B7                 5261 	or	a,a
   1BEF D6 01              5262 	sub	a,#0x01
   1BF1 3E 00              5263 	ld	a,#0x00
   1BF3 17                 5264 	rla
   1BF4 B7                 5265 	or	a,a
   1BF5 20 04              5266 	jr	NZ,00107$
   1BF7                    5267 00106$:
   1BF7 0E 00              5268 	ld	c,#0x00
   1BF9 18 02              5269 	jr	00108$
   1BFB                    5270 00107$:
   1BFB 0E 01              5271 	ld	c,#0x01
   1BFD                    5272 00108$:
   1BFD AF                 5273 	xor	a,a
   1BFE B1                 5274 	or	a,c
   1BFF 20 28              5275 	jr	NZ,00104$
                           5276 ;obj_score.c:124: (scoreB.state == BLINKING  && scoreB.off_num_switches >= num));
   1C01 01r3Bs02           5277 	ld	bc,#_scoreB + 23
   1C04 0A                 5278 	ld	a,(bc)
   1C05 D6 03              5279 	sub	a,#0x03
   1C07 20 13              5280 	jr	NZ,00109$
   1C09 01r43s02           5281 	ld	bc,#_scoreB + 31
   1C0C 0A                 5282 	ld	a,(bc)
   1C0D DD 96 04           5283 	sub	a,4 (ix)
   1C10 3E 00              5284 	ld	a,#0x00
   1C12 17                 5285 	rla
   1C13 B7                 5286 	or	a,a
   1C14 D6 01              5287 	sub	a,#0x01
   1C16 3E 00              5288 	ld	a,#0x00
   1C18 17                 5289 	rla
   1C19 B7                 5290 	or	a,a
   1C1A 20 04              5291 	jr	NZ,00110$
   1C1C                    5292 00109$:
   1C1C 0E 00              5293 	ld	c,#0x00
   1C1E 18 02              5294 	jr	00111$
   1C20                    5295 00110$:
   1C20 0E 01              5296 	ld	c,#0x01
   1C22                    5297 00111$:
   1C22 AF                 5298 	xor	a,a
   1C23 B1                 5299 	or	a,c
   1C24 20 03              5300 	jr	NZ,00104$
   1C26 4F                 5301 	ld	c,a
   1C27 18 02              5302 	jr	00105$
   1C29                    5303 00104$:
   1C29 0E 01              5304 	ld	c,#0x01
   1C2B                    5305 00105$:
   1C2B 69                 5306 	ld	l,c
   1C2C DD E1              5307 	pop	ix
   1C2E C9                 5308 	ret
   1C2F                    5309 _helper_GameObjScore_IsScoreBlinkedAtLeast_end::
                           5310 ;obj_score.c:136: void GameObjScore_Draw_PlayerRocketsIndicator(GameObjScore* this)
                           5311 ;	---------------------------------
                           5312 ; Function GameObjScore_Draw_PlayerRocketsIndicator
                           5313 ; ---------------------------------
   1C2F                    5314 _GameObjScore_Draw_PlayerRocketsIndicator_start::
   1C2F                    5315 _GameObjScore_Draw_PlayerRocketsIndicator:
   1C2F DD E5              5316 	push	ix
   1C31 DD 21 00 00        5317 	ld	ix,#0
   1C35 DD 39              5318 	add	ix,sp
   1C37 21 F9 FF           5319 	ld	hl,#-7
   1C3A 39                 5320 	add	hl,sp
   1C3B F9                 5321 	ld	sp,hl
                           5322 ;obj_score.c:142: for(i=0; i<this->num_rockets; i++)
   1C3C DD 4E 04           5323 	ld	c,4 (ix)
   1C3F DD 46 05           5324 	ld	b,5 (ix)
   1C42 21 22 00           5325 	ld	hl,#0x0022
   1C45 09                 5326 	add	hl,bc
   1C46 DD 75 FD           5327 	ld	-3 (ix),l
   1C49 DD 74 FE           5328 	ld	-2 (ix),h
   1C4C DD 36 FF 00        5329 	ld	-1 (ix),#0x00
   1C50                    5330 00101$:
   1C50 DD 6E FD           5331 	ld	l,-3 (ix)
   1C53 DD 66 FE           5332 	ld	h,-2 (ix)
   1C56 DD 7E FF           5333 	ld	a,-1 (ix)
   1C59 96                 5334 	sub	a,(hl)
   1C5A D2rD2s1C           5335 	jp	NC,00105$
                           5336 ;obj_score.c:144: this->gobj.x + i*8, this->gobj.y + 16, spr_height,
   1C5D 21 03 00           5337 	ld	hl,#0x0003
   1C60 09                 5338 	add	hl,bc
   1C61 5E                 5339 	ld	e,(hl)
   1C62 23                 5340 	inc	hl
   1C63 56                 5341 	ld	d,(hl)
   1C64 21 10 00           5342 	ld	hl,#0x0010
   1C67 19                 5343 	add	hl,de
   1C68 DD 75 FB           5344 	ld	-5 (ix),l
   1C6B DD 74 FC           5345 	ld	-4 (ix),h
   1C6E 69                 5346 	ld	l,c
   1C6F 60                 5347 	ld	h,b
   1C70 23                 5348 	inc	hl
   1C71 7E                 5349 	ld	a,(hl)
   1C72 DD 77 F9           5350 	ld	-7 (ix),a
   1C75 23                 5351 	inc	hl
   1C76 7E                 5352 	ld	a,(hl)
   1C77 DD 77 FA           5353 	ld	-6 (ix),a
   1C7A DD 5E FF           5354 	ld	e,-1 (ix)
   1C7D 16 00              5355 	ld	d,#0x00
   1C7F CB 23              5356 	sla	e
   1C81 CB 12              5357 	rl	d
   1C83 CB 23              5358 	sla	e
   1C85 CB 12              5359 	rl	d
   1C87 CB 23              5360 	sla	e
   1C89 CB 12              5361 	rl	d
   1C8B DD 7E F9           5362 	ld	a,-7 (ix)
   1C8E 83                 5363 	add	a,e
   1C8F DD 77 F9           5364 	ld	-7 (ix),a
   1C92 DD 7E FA           5365 	ld	a,-6 (ix)
   1C95 8A                 5366 	adc	a,d
   1C96 DD 77 FA           5367 	ld	-6 (ix),a
                           5368 ;obj_score.c:143: set_sprite_regs(this->sprite_num_RocketsIndicator + i,
   1C99 21 21 00           5369 	ld	hl,#0x0021
   1C9C 09                 5370 	add	hl,bc
   1C9D 7E                 5371 	ld	a,(hl)
   1C9E DD 86 FF           5372 	add	a,-1 (ix)
   1CA1 5F                 5373 	ld	e,a
   1CA2 C5                 5374 	push	bc
   1CA3 3E 00              5375 	ld	a,#0x00
   1CA5 F5                 5376 	push	af
   1CA6 33                 5377 	inc	sp
   1CA7 21 3A 00           5378 	ld	hl,#0x003A
   1CAA E5                 5379 	push	hl
   1CAB 3E 01              5380 	ld	a,#0x01
   1CAD F5                 5381 	push	af
   1CAE 33                 5382 	inc	sp
   1CAF DD 6E FB           5383 	ld	l,-5 (ix)
   1CB2 DD 66 FC           5384 	ld	h,-4 (ix)
   1CB5 E5                 5385 	push	hl
   1CB6 DD 6E F9           5386 	ld	l,-7 (ix)
   1CB9 DD 66 FA           5387 	ld	h,-6 (ix)
   1CBC E5                 5388 	push	hl
   1CBD 7B                 5389 	ld	a,e
   1CBE F5                 5390 	push	af
   1CBF 33                 5391 	inc	sp
   1CC0 CDr1Fs09           5392 	call	_set_sprite_regs
   1CC3 FD 21 09 00        5393 	ld	iy,#0x0009
   1CC7 FD 39              5394 	add	iy,sp
   1CC9 FD F9              5395 	ld	sp,iy
   1CCB C1                 5396 	pop	bc
                           5397 ;obj_score.c:142: for(i=0; i<this->num_rockets; i++)
   1CCC DD 34 FF           5398 	inc	-1 (ix)
   1CCF C3r50s1C           5399 	jp	00101$
   1CD2                    5400 00105$:
   1CD2 DD F9              5401 	ld	sp,ix
   1CD4 DD E1              5402 	pop	ix
   1CD6 C9                 5403 	ret
   1CD7                    5404 _GameObjScore_Draw_PlayerRocketsIndicator_end::
                           5405 ;obj_rocket.c:13: void GameObjRocket_Init(GameObjRocket* this, int x, int y)
                           5406 ;	---------------------------------
                           5407 ; Function GameObjRocket_Init
                           5408 ; ---------------------------------
   1CD7                    5409 _GameObjRocket_Init_start::
   1CD7                    5410 _GameObjRocket_Init:
   1CD7 DD E5              5411 	push	ix
   1CD9 DD 21 00 00        5412 	ld	ix,#0
   1CDD DD 39              5413 	add	ix,sp
   1CDF F5                 5414 	push	af
   1CE0 F5                 5415 	push	af
                           5416 ;obj_rocket.c:16: GameObj_Init((GameObj*)this);
   1CE1 DD 4E 04           5417 	ld	c,4 (ix)
   1CE4 DD 46 05           5418 	ld	b,5 (ix)
   1CE7 C5                 5419 	push	bc
   1CE8 CDr55s13           5420 	call	_GameObj_Init
   1CEB F1                 5421 	pop	af
                           5422 ;obj_rocket.c:18: this->gobj.x = x;
   1CEC DD 7E 04           5423 	ld	a,4 (ix)
   1CEF DD 77 FC           5424 	ld	-4 (ix),a
   1CF2 DD 7E 05           5425 	ld	a,5 (ix)
   1CF5 DD 77 FD           5426 	ld	-3 (ix),a
   1CF8 DD 5E FC           5427 	ld	e,-4 (ix)
   1CFB DD 56 FD           5428 	ld	d,-3 (ix)
   1CFE EB                 5429 	ex	de,hl
   1CFF 23                 5430 	inc	hl
   1D00 DD 7E 06           5431 	ld	a,6 (ix)
   1D03 77                 5432 	ld	(hl),a
   1D04 23                 5433 	inc	hl
   1D05 DD 7E 07           5434 	ld	a,7 (ix)
   1D08 77                 5435 	ld	(hl),a
                           5436 ;obj_rocket.c:19: this->gobj.y = y;
   1D09 DD 7E FC           5437 	ld	a,-4 (ix)
   1D0C C6 03              5438 	add	a,#0x03
   1D0E 6F                 5439 	ld	l, a
   1D0F DD 7E FD           5440 	ld	a, -3 (ix)
   1D12 CE 00              5441 	adc	a, #0x00
   1D14 67                 5442 	ld	h,a
   1D15 DD 7E 08           5443 	ld	a,8 (ix)
   1D18 77                 5444 	ld	(hl),a
   1D19 23                 5445 	inc	hl
   1D1A DD 7E 09           5446 	ld	a,9 (ix)
   1D1D 77                 5447 	ld	(hl),a
                           5448 ;obj_rocket.c:20: this->gobj.width  = 16*2;
   1D1E DD 7E FC           5449 	ld	a,-4 (ix)
   1D21 C6 05              5450 	add	a,#0x05
   1D23 6F                 5451 	ld	l, a
   1D24 DD 7E FD           5452 	ld	a, -3 (ix)
   1D27 CE 00              5453 	adc	a, #0x00
   1D29 67                 5454 	ld	h,a
   1D2A 36 20              5455 	ld	(hl),#0x20
   1D2C 23                 5456 	inc	hl
   1D2D 36 00              5457 	ld	(hl),#0x00
                           5458 ;obj_rocket.c:21: this->gobj.height = 16;
   1D2F DD 7E FC           5459 	ld	a,-4 (ix)
   1D32 C6 07              5460 	add	a,#0x07
   1D34 6F                 5461 	ld	l, a
   1D35 DD 7E FD           5462 	ld	a, -3 (ix)
   1D38 CE 00              5463 	adc	a, #0x00
   1D3A 67                 5464 	ld	h,a
   1D3B 36 10              5465 	ld	(hl),#0x10
   1D3D 23                 5466 	inc	hl
   1D3E 36 00              5467 	ld	(hl),#0x00
                           5468 ;obj_rocket.c:23: this->my_x = (dword)x << 8;
   1D40 DD 7E FC           5469 	ld	a,-4 (ix)
   1D43 C6 1B              5470 	add	a,#0x1B
   1D45 DD 77 FE           5471 	ld	-2 (ix),a
   1D48 DD 7E FD           5472 	ld	a,-3 (ix)
   1D4B CE 00              5473 	adc	a,#0x00
   1D4D DD 77 FF           5474 	ld	-1 (ix),a
   1D50 DD 5E 06           5475 	ld	e,6 (ix)
   1D53 DD 56 07           5476 	ld	d,7 (ix)
   1D56 DD 7E 07           5477 	ld	a,7 (ix)
   1D59 17                 5478 	rla	
   1D5A 9F                 5479 	sbc	a,a
   1D5B 4F                 5480 	ld	c,a
   1D5C 47                 5481 	ld	b,a
   1D5D 3E 08              5482 	ld	a,#0x08
   1D5F F5                 5483 	push	af
   1D60 33                 5484 	inc	sp
   1D61 C5                 5485 	push	bc
   1D62 D5                 5486 	push	de
   1D63 CDr00s00           5487 	call	__rlulong_rrx_s
   1D66 F1                 5488 	pop	af
   1D67 F1                 5489 	pop	af
   1D68 33                 5490 	inc	sp
   1D69 44                 5491 	ld	b,h
   1D6A 4D                 5492 	ld	c,l
   1D6B DD 6E FE           5493 	ld	l,-2 (ix)
   1D6E DD 66 FF           5494 	ld	h,-1 (ix)
   1D71 71                 5495 	ld	(hl),c
   1D72 23                 5496 	inc	hl
   1D73 70                 5497 	ld	(hl),b
   1D74 23                 5498 	inc	hl
   1D75 73                 5499 	ld	(hl),e
   1D76 23                 5500 	inc	hl
   1D77 72                 5501 	ld	(hl),d
                           5502 ;obj_rocket.c:25: GameObj_InitCollideBox((GameObj*)this);
   1D78 DD 4E FC           5503 	ld	c,-4 (ix)
   1D7B DD 46 FD           5504 	ld	b,-3 (ix)
   1D7E C5                 5505 	push	bc
   1D7F CDr6Fs13           5506 	call	_GameObj_InitCollideBox
   1D82 F1                 5507 	pop	af
                           5508 ;obj_rocket.c:27: this->gobj.pMoveFunc = &GameObjRocket_Move;
   1D83 DD 7E FC           5509 	ld	a,-4 (ix)
   1D86 C6 13              5510 	add	a,#0x13
   1D88 4F                 5511 	ld	c,a
   1D89 DD 7E FD           5512 	ld	a,-3 (ix)
   1D8C CE 00              5513 	adc	a,#0x00
   1D8E 47                 5514 	ld	b,a
   1D8F 69                 5515 	ld	l,c
   1D90 67                 5516 	ld	h,a
   1D91 36r2A              5517 	ld	(hl),#<_GameObjRocket_Move
   1D93 23                 5518 	inc	hl
   1D94 36s1E              5519 	ld	(hl),#>_GameObjRocket_Move
                           5520 ;obj_rocket.c:28: this->gobj.pDrawFunc = &GameObjRocket_Draw;
   1D96 DD 7E FC           5521 	ld	a,-4 (ix)
   1D99 C6 15              5522 	add	a,#0x15
   1D9B 4F                 5523 	ld	c,a
   1D9C DD 7E FD           5524 	ld	a,-3 (ix)
   1D9F CE 00              5525 	adc	a,#0x00
   1DA1 47                 5526 	ld	b,a
   1DA2 69                 5527 	ld	l,c
   1DA3 67                 5528 	ld	h,a
   1DA4 36r89              5529 	ld	(hl),#<_GameObjRocket_Draw
   1DA6 23                 5530 	inc	hl
   1DA7 36s20              5531 	ld	(hl),#>_GameObjRocket_Draw
                           5532 ;obj_rocket.c:31: if(x < SCREEN_WIDTH/2) {
   1DA9 DD 7E 06           5533 	ld	a,6 (ix)
   1DAC D6 B8              5534 	sub	a,#0xB8
   1DAE DD 7E 07           5535 	ld	a,7 (ix)
   1DB1 DE 00              5536 	sbc	a,#0x00
   1DB3 F2rE9s1D           5537 	jp	P,00102$
                           5538 ;obj_rocket.c:32: this->x_speed = 2 << 8;
   1DB6 DD 7E FC           5539 	ld	a,-4 (ix)
   1DB9 C6 1F              5540 	add	a,#0x1F
   1DBB 6F                 5541 	ld	l, a
   1DBC DD 7E FD           5542 	ld	a, -3 (ix)
   1DBF CE 00              5543 	adc	a, #0x00
   1DC1 67                 5544 	ld	h,a
   1DC2 36 00              5545 	ld	(hl),#0x00
   1DC4 23                 5546 	inc	hl
   1DC5 36 02              5547 	ld	(hl),#0x02
                           5548 ;obj_rocket.c:33: this->x_speed_acc = 0x0010;
   1DC7 DD 7E FC           5549 	ld	a,-4 (ix)
   1DCA C6 21              5550 	add	a,#0x21
   1DCC 6F                 5551 	ld	l, a
   1DCD DD 7E FD           5552 	ld	a, -3 (ix)
   1DD0 CE 00              5553 	adc	a, #0x00
   1DD2 67                 5554 	ld	h,a
   1DD3 36 10              5555 	ld	(hl),#0x10
   1DD5 23                 5556 	inc	hl
   1DD6 36 00              5557 	ld	(hl),#0x00
                           5558 ;obj_rocket.c:34: this->isMovingToTheRight = TRUE;
   1DD8 DD 7E FC           5559 	ld	a,-4 (ix)
   1DDB C6 23              5560 	add	a,#0x23
   1DDD 4F                 5561 	ld	c,a
   1DDE DD 7E FD           5562 	ld	a,-3 (ix)
   1DE1 CE 00              5563 	adc	a,#0x00
   1DE3 47                 5564 	ld	b,a
   1DE4 3E 01              5565 	ld	a,#0x01
   1DE6 02                 5566 	ld	(bc),a
   1DE7 18 31              5567 	jr	00103$
   1DE9                    5568 00102$:
                           5569 ;obj_rocket.c:37: this->x_speed = -2 << 8;
   1DE9 DD 7E FC           5570 	ld	a,-4 (ix)
   1DEC C6 1F              5571 	add	a,#0x1F
   1DEE 6F                 5572 	ld	l, a
   1DEF DD 7E FD           5573 	ld	a, -3 (ix)
   1DF2 CE 00              5574 	adc	a, #0x00
   1DF4 67                 5575 	ld	h,a
   1DF5 36 00              5576 	ld	(hl),#0x00
   1DF7 23                 5577 	inc	hl
   1DF8 36 FE              5578 	ld	(hl),#0xFE
                           5579 ;obj_rocket.c:38: this->x_speed_acc = -0x0010;
   1DFA DD 7E FC           5580 	ld	a,-4 (ix)
   1DFD C6 21              5581 	add	a,#0x21
   1DFF 6F                 5582 	ld	l, a
   1E00 DD 7E FD           5583 	ld	a, -3 (ix)
   1E03 CE 00              5584 	adc	a, #0x00
   1E05 67                 5585 	ld	h,a
   1E06 36 F0              5586 	ld	(hl),#0xF0
   1E08 23                 5587 	inc	hl
   1E09 36 FF              5588 	ld	(hl),#0xFF
                           5589 ;obj_rocket.c:39: this->isMovingToTheRight = FALSE;
   1E0B DD 7E FC           5590 	ld	a,-4 (ix)
   1E0E C6 23              5591 	add	a,#0x23
   1E10 4F                 5592 	ld	c,a
   1E11 DD 7E FD           5593 	ld	a,-3 (ix)
   1E14 CE 00              5594 	adc	a,#0x00
   1E16 47                 5595 	ld	b,a
   1E17 3E 00              5596 	ld	a,#0x00
   1E19 02                 5597 	ld	(bc),a
   1E1A                    5598 00103$:
                           5599 ;obj_rocket.c:43: GameObjRocket_AllocateAnimationObj(this);
   1E1A DD 6E FC           5600 	ld	l,-4 (ix)
   1E1D DD 66 FD           5601 	ld	h,-3 (ix)
   1E20 E5                 5602 	push	hl
   1E21 CDr94s20           5603 	call	_GameObjRocket_AllocateAnimationObj
   1E24 F1                 5604 	pop	af
   1E25 DD F9              5605 	ld	sp,ix
   1E27 DD E1              5606 	pop	ix
   1E29 C9                 5607 	ret
   1E2A                    5608 _GameObjRocket_Init_end::
                           5609 ;obj_rocket.c:47: void GameObjRocket_Move(GameObjRocket* /*restrict*/ this)
                           5610 ;	---------------------------------
                           5611 ; Function GameObjRocket_Move
                           5612 ; ---------------------------------
   1E2A                    5613 _GameObjRocket_Move_start::
   1E2A                    5614 _GameObjRocket_Move:
   1E2A DD E5              5615 	push	ix
   1E2C DD 21 00 00        5616 	ld	ix,#0
   1E30 DD 39              5617 	add	ix,sp
   1E32 21 F3 FF           5618 	ld	hl,#-13
   1E35 39                 5619 	add	hl,sp
   1E36 F9                 5620 	ld	sp,hl
                           5621 ;obj_rocket.c:55: this->my_x += this->x_speed;
   1E37 DD 7E 04           5622 	ld	a,4 (ix)
   1E3A DD 77 FB           5623 	ld	-5 (ix),a
   1E3D DD 7E 05           5624 	ld	a,5 (ix)
   1E40 DD 77 FC           5625 	ld	-4 (ix),a
   1E43 DD 7E FB           5626 	ld	a,-5 (ix)
   1E46 C6 1B              5627 	add	a,#0x1B
   1E48 DD 77 FD           5628 	ld	-3 (ix),a
   1E4B DD 7E FC           5629 	ld	a,-4 (ix)
   1E4E CE 00              5630 	adc	a,#0x00
   1E50 DD 77 FE           5631 	ld	-2 (ix),a
   1E53 DD 6E FD           5632 	ld	l,-3 (ix)
   1E56 DD 66 FE           5633 	ld	h,-2 (ix)
   1E59 7E                 5634 	ld	a,(hl)
   1E5A DD 77 F3           5635 	ld	-13 (ix),a
   1E5D 23                 5636 	inc	hl
   1E5E 7E                 5637 	ld	a,(hl)
   1E5F DD 77 F4           5638 	ld	-12 (ix),a
   1E62 23                 5639 	inc	hl
   1E63 7E                 5640 	ld	a,(hl)
   1E64 DD 77 F5           5641 	ld	-11 (ix),a
   1E67 23                 5642 	inc	hl
   1E68 7E                 5643 	ld	a,(hl)
   1E69 DD 77 F6           5644 	ld	-10 (ix),a
   1E6C DD 7E FB           5645 	ld	a,-5 (ix)
   1E6F C6 1F              5646 	add	a,#0x1F
   1E71 DD 77 F9           5647 	ld	-7 (ix),a
   1E74 DD 7E FC           5648 	ld	a,-4 (ix)
   1E77 CE 00              5649 	adc	a,#0x00
   1E79 DD 77 FA           5650 	ld	-6 (ix),a
   1E7C DD 6E F9           5651 	ld	l,-7 (ix)
   1E7F DD 66 FA           5652 	ld	h,-6 (ix)
   1E82 7E                 5653 	ld	a,(hl)
   1E83 DD 77 F7           5654 	ld	-9 (ix),a
   1E86 23                 5655 	inc	hl
   1E87 7E                 5656 	ld	a,(hl)
   1E88 DD 77 F8           5657 	ld	-8 (ix),a
   1E8B DD 4E F7           5658 	ld	c,-9 (ix)
   1E8E DD 46 F8           5659 	ld	b,-8 (ix)
   1E91 DD 7E F8           5660 	ld	a,-8 (ix)
   1E94 17                 5661 	rla	
   1E95 9F                 5662 	sbc	a,a
   1E96 5F                 5663 	ld	e,a
   1E97 57                 5664 	ld	d,a
   1E98 DD 7E F3           5665 	ld	a,-13 (ix)
   1E9B 81                 5666 	add	a,c
   1E9C 4F                 5667 	ld	c,a
   1E9D DD 7E F4           5668 	ld	a,-12 (ix)
   1EA0 88                 5669 	adc	a,b
   1EA1 47                 5670 	ld	b,a
   1EA2 DD 7E F5           5671 	ld	a,-11 (ix)
   1EA5 8B                 5672 	adc	a,e
   1EA6 5F                 5673 	ld	e,a
   1EA7 DD 7E F6           5674 	ld	a,-10 (ix)
   1EAA 8A                 5675 	adc	a,d
   1EAB 57                 5676 	ld	d,a
   1EAC DD 6E FD           5677 	ld	l,-3 (ix)
   1EAF DD 66 FE           5678 	ld	h,-2 (ix)
   1EB2 71                 5679 	ld	(hl),c
   1EB3 23                 5680 	inc	hl
   1EB4 70                 5681 	ld	(hl),b
   1EB5 23                 5682 	inc	hl
   1EB6 73                 5683 	ld	(hl),e
   1EB7 23                 5684 	inc	hl
   1EB8 72                 5685 	ld	(hl),d
                           5686 ;obj_rocket.c:56: this->gobj.x = ((dword)this->my_x >> 8);
   1EB9 DD 7E FB           5687 	ld	a,-5 (ix)
   1EBC C6 01              5688 	add	a,#0x01
   1EBE DD 77 F3           5689 	ld	-13 (ix),a
   1EC1 DD 7E FC           5690 	ld	a,-4 (ix)
   1EC4 CE 00              5691 	adc	a,#0x00
   1EC6 DD 77 F4           5692 	ld	-12 (ix),a
   1EC9 3E 08              5693 	ld	a,#0x08
   1ECB F5                 5694 	push	af
   1ECC 33                 5695 	inc	sp
   1ECD D5                 5696 	push	de
   1ECE C5                 5697 	push	bc
   1ECF CDr00s00           5698 	call	__rrulong_rrx_s
   1ED2 F1                 5699 	pop	af
   1ED3 F1                 5700 	pop	af
   1ED4 33                 5701 	inc	sp
   1ED5 44                 5702 	ld	b,h
   1ED6 4D                 5703 	ld	c,l
   1ED7 DD 6E F3           5704 	ld	l,-13 (ix)
   1EDA DD 66 F4           5705 	ld	h,-12 (ix)
   1EDD 71                 5706 	ld	(hl),c
   1EDE 23                 5707 	inc	hl
   1EDF 70                 5708 	ld	(hl),b
                           5709 ;obj_rocket.c:59: speed = ((word)this->x_speed >> 8);
   1EE0 DD 4E F7           5710 	ld	c,-9 (ix)
   1EE3 DD 46 F8           5711 	ld	b,-8 (ix)
   1EE6 48                 5712 	ld	c,b
                           5713 ;obj_rocket.c:60: if( (speed > 0 && speed < 4) || (speed < 0 && speed > -4) )
   1EE7 3E 00              5714 	ld	a,#0x00
   1EE9 47                 5715 	ld	b,a
   1EEA 91                 5716 	sub	a,c
   1EEB F2rF4s1E           5717 	jp	P,00105$
   1EEE 79                 5718 	ld	a,c
   1EEF D6 04              5719 	sub	a,#0x04
   1EF1 FArFFs1E           5720 	jp	M,00101$
   1EF4                    5721 00105$:
   1EF4 79                 5722 	ld	a,c
   1EF5 CB 7F              5723 	bit	7,a
   1EF7 28 28              5724 	jr	Z,00102$
   1EF9 3E FC              5725 	ld	a,#0xFC
   1EFB 91                 5726 	sub	a,c
   1EFC F2r21s1F           5727 	jp	P,00102$
   1EFF                    5728 00101$:
                           5729 ;obj_rocket.c:61: this->x_speed += this->x_speed_acc;
   1EFF DD 7E FB           5730 	ld	a,-5 (ix)
   1F02 C6 21              5731 	add	a,#0x21
   1F04 6F                 5732 	ld	l, a
   1F05 DD 7E FC           5733 	ld	a, -4 (ix)
   1F08 CE 00              5734 	adc	a, #0x00
   1F0A 67                 5735 	ld	h,a
   1F0B 4E                 5736 	ld	c,(hl)
   1F0C 23                 5737 	inc	hl
   1F0D 46                 5738 	ld	b,(hl)
   1F0E DD 7E F7           5739 	ld	a,-9 (ix)
   1F11 81                 5740 	add	a,c
   1F12 4F                 5741 	ld	c,a
   1F13 DD 7E F8           5742 	ld	a,-8 (ix)
   1F16 88                 5743 	adc	a,b
   1F17 47                 5744 	ld	b,a
   1F18 DD 6E F9           5745 	ld	l,-7 (ix)
   1F1B DD 66 FA           5746 	ld	h,-6 (ix)
   1F1E 71                 5747 	ld	(hl),c
   1F1F 23                 5748 	inc	hl
   1F20 70                 5749 	ld	(hl),b
   1F21                    5750 00102$:
                           5751 ;obj_rocket.c:64: if(this->isMovingToTheRight){
   1F21 DD 7E FB           5752 	ld	a,-5 (ix)
   1F24 C6 23              5753 	add	a,#0x23
   1F26 4F                 5754 	ld	c,a
   1F27 DD 7E FC           5755 	ld	a,-4 (ix)
   1F2A CE 00              5756 	adc	a,#0x00
   1F2C 47                 5757 	ld	b,a
   1F2D 0A                 5758 	ld	a,(bc)
   1F2E B7                 5759 	or	a,a
   1F2F 28 08              5760 	jr	Z,00107$
                           5761 ;obj_rocket.c:65: xo = 0; xo1 = 16*1;     //xo2 = 16*2;
   1F31 0E 00              5762 	ld	c,#0x00
   1F33 DD 36 FF 10        5763 	ld	-1 (ix),#0x10
   1F37 18 06              5764 	jr	00108$
   1F39                    5765 00107$:
                           5766 ;obj_rocket.c:67: xo = 16*1; xo1 = 0;     //xo2 = 0;
   1F39 0E 10              5767 	ld	c,#0x10
   1F3B DD 36 FF 00        5768 	ld	-1 (ix),#0x00
   1F3F                    5769 00108$:
                           5770 ;obj_rocket.c:69: GameObj_SetPos(&this->animObj->gobj,  this->gobj.x + xo,   this->gobj.y);
   1F3F DD 7E FB           5771 	ld	a,-5 (ix)
   1F42 C6 03              5772 	add	a,#0x03
   1F44 5F                 5773 	ld	e,a
   1F45 DD 7E FC           5774 	ld	a,-4 (ix)
   1F48 CE 00              5775 	adc	a,#0x00
   1F4A 57                 5776 	ld	d,a
   1F4B 6B                 5777 	ld	l,e
   1F4C 67                 5778 	ld	h,a
   1F4D 7E                 5779 	ld	a,(hl)
   1F4E DD 77 F7           5780 	ld	-9 (ix),a
   1F51 23                 5781 	inc	hl
   1F52 7E                 5782 	ld	a,(hl)
   1F53 DD 77 F8           5783 	ld	-8 (ix),a
   1F56 DD 6E F3           5784 	ld	l,-13 (ix)
   1F59 DD 66 F4           5785 	ld	h,-12 (ix)
   1F5C 7E                 5786 	ld	a,(hl)
   1F5D DD 77 F9           5787 	ld	-7 (ix),a
   1F60 23                 5788 	inc	hl
   1F61 7E                 5789 	ld	a,(hl)
   1F62 DD 77 FA           5790 	ld	-6 (ix),a
   1F65 79                 5791 	ld	a,c
   1F66 17                 5792 	rla	
   1F67 9F                 5793 	sbc	a,a
   1F68 47                 5794 	ld	b,a
   1F69 DD 7E F9           5795 	ld	a,-7 (ix)
   1F6C 81                 5796 	add	a,c
   1F6D DD 77 F9           5797 	ld	-7 (ix),a
   1F70 DD 7E FA           5798 	ld	a,-6 (ix)
   1F73 88                 5799 	adc	a,b
   1F74 DD 77 FA           5800 	ld	-6 (ix),a
   1F77 DD 7E FB           5801 	ld	a,-5 (ix)
   1F7A C6 17              5802 	add	a,#0x17
   1F7C 6F                 5803 	ld	l, a
   1F7D DD 7E FC           5804 	ld	a, -4 (ix)
   1F80 CE 00              5805 	adc	a, #0x00
   1F82 67                 5806 	ld	h,a
   1F83 4E                 5807 	ld	c,(hl)
   1F84 23                 5808 	inc	hl
   1F85 46                 5809 	ld	b,(hl)
   1F86 D5                 5810 	push	de
   1F87 DD 6E F7           5811 	ld	l,-9 (ix)
   1F8A DD 66 F8           5812 	ld	h,-8 (ix)
   1F8D E5                 5813 	push	hl
   1F8E DD 6E F9           5814 	ld	l,-7 (ix)
   1F91 DD 66 FA           5815 	ld	h,-6 (ix)
   1F94 E5                 5816 	push	hl
   1F95 C5                 5817 	push	bc
   1F96 CDr00s00           5818 	call	_GameObj_SetPos
   1F99 F1                 5819 	pop	af
   1F9A F1                 5820 	pop	af
   1F9B F1                 5821 	pop	af
                           5822 ;obj_rocket.c:70: GameObj_SetPos(&this->animObj1->gobj, this->gobj.x + xo1,  this->gobj.y);
   1F9C E1                 5823 	pop	hl
   1F9D 4E                 5824 	ld	c,(hl)
   1F9E 23                 5825 	inc	hl
   1F9F 46                 5826 	ld	b,(hl)
   1FA0 DD 6E F3           5827 	ld	l,-13 (ix)
   1FA3 DD 66 F4           5828 	ld	h,-12 (ix)
   1FA6 7E                 5829 	ld	a,(hl)
   1FA7 DD 77 F7           5830 	ld	-9 (ix),a
   1FAA 23                 5831 	inc	hl
   1FAB 7E                 5832 	ld	a,(hl)
   1FAC DD 77 F8           5833 	ld	-8 (ix),a
   1FAF DD 5E FF           5834 	ld	e,-1 (ix)
   1FB2 DD 7E FF           5835 	ld	a,-1 (ix)
   1FB5 17                 5836 	rla	
   1FB6 9F                 5837 	sbc	a,a
   1FB7 57                 5838 	ld	d,a
   1FB8 DD 7E F7           5839 	ld	a,-9 (ix)
   1FBB 83                 5840 	add	a,e
   1FBC DD 77 F7           5841 	ld	-9 (ix),a
   1FBF DD 7E F8           5842 	ld	a,-8 (ix)
   1FC2 8A                 5843 	adc	a,d
   1FC3 DD 77 F8           5844 	ld	-8 (ix),a
   1FC6 DD 7E FB           5845 	ld	a,-5 (ix)
   1FC9 C6 19              5846 	add	a,#0x19
   1FCB 6F                 5847 	ld	l, a
   1FCC DD 7E FC           5848 	ld	a, -4 (ix)
   1FCF CE 00              5849 	adc	a, #0x00
   1FD1 67                 5850 	ld	h,a
   1FD2 5E                 5851 	ld	e,(hl)
   1FD3 23                 5852 	inc	hl
   1FD4 56                 5853 	ld	d,(hl)
   1FD5 C5                 5854 	push	bc
   1FD6 DD 6E F7           5855 	ld	l,-9 (ix)
   1FD9 DD 66 F8           5856 	ld	h,-8 (ix)
   1FDC E5                 5857 	push	hl
   1FDD D5                 5858 	push	de
   1FDE CDr00s00           5859 	call	_GameObj_SetPos
   1FE1 F1                 5860 	pop	af
   1FE2 F1                 5861 	pop	af
   1FE3 F1                 5862 	pop	af
                           5863 ;obj_rocket.c:73: cur_x = this->gobj.x;
   1FE4 DD 6E F3           5864 	ld	l,-13 (ix)
   1FE7 DD 66 F4           5865 	ld	h,-12 (ix)
   1FEA 4E                 5866 	ld	c,(hl)
   1FEB 23                 5867 	inc	hl
   1FEC 46                 5868 	ld	b,(hl)
                           5869 ;obj_rocket.c:74: width = this->gobj.width;
   1FED DD 7E FB           5870 	ld	a,-5 (ix)
   1FF0 C6 05              5871 	add	a,#0x05
   1FF2 6F                 5872 	ld	l, a
   1FF3 DD 7E FC           5873 	ld	a, -4 (ix)
   1FF6 CE 00              5874 	adc	a, #0x00
   1FF8 67                 5875 	ld	h,a
   1FF9 5E                 5876 	ld	e,(hl)
   1FFA 23                 5877 	inc	hl
   1FFB 56                 5878 	ld	d,(hl)
                           5879 ;obj_rocket.c:76: if(cur_x > SCREEN_WIDTH || cur_x + width < 0){
   1FFC 3E 70              5880 	ld	a,#0x70
   1FFE 91                 5881 	sub	a,c
   1FFF 3E 01              5882 	ld	a,#0x01
   2001 98                 5883 	sbc	a,b
   2002 FAr0Fs20           5884 	jp	M,00109$
   2005 79                 5885 	ld	a,c
   2006 83                 5886 	add	a,e
   2007 4F                 5887 	ld	c,a
   2008 78                 5888 	ld	a,b
   2009 8A                 5889 	adc	a,d
   200A 47                 5890 	ld	b,a
   200B CB 7F              5891 	bit	7,a
   200D 28 0B              5892 	jr	Z,00110$
   200F                    5893 00109$:
                           5894 ;obj_rocket.c:77: GameObjRocket_Free(this);
   200F DD 6E FB           5895 	ld	l,-5 (ix)
   2012 DD 66 FC           5896 	ld	h,-4 (ix)
   2015 E5                 5897 	push	hl
   2016 CDr69s22           5898 	call	_GameObjRocket_Free
   2019 F1                 5899 	pop	af
   201A                    5900 00110$:
                           5901 ;obj_rocket.c:80: GameObjRocket_CheckCollision(this);
   201A DD 6E FB           5902 	ld	l,-5 (ix)
   201D DD 66 FC           5903 	ld	h,-4 (ix)
   2020 E5                 5904 	push	hl
   2021 CDr2As20           5905 	call	_GameObjRocket_CheckCollision
   2024 F1                 5906 	pop	af
   2025 DD F9              5907 	ld	sp,ix
   2027 DD E1              5908 	pop	ix
   2029 C9                 5909 	ret
   202A                    5910 _GameObjRocket_Move_end::
                           5911 ;obj_rocket.c:86: void GameObjRocket_CheckCollision(GameObjRocket* this)
                           5912 ;	---------------------------------
                           5913 ; Function GameObjRocket_CheckCollision
                           5914 ; ---------------------------------
   202A                    5915 _GameObjRocket_CheckCollision_start::
   202A                    5916 _GameObjRocket_CheckCollision:
   202A DD E5              5917 	push	ix
   202C DD 21 00 00        5918 	ld	ix,#0
   2030 DD 39              5919 	add	ix,sp
   2032 F5                 5920 	push	af
                           5921 ;obj_rocket.c:92: gameObj = &this->gobj;
   2033 DD 4E 04           5922 	ld	c,4 (ix)
   2036 DD 46 05           5923 	ld	b,5 (ix)
                           5924 ;obj_rocket.c:98: if(this->isMovingToTheRight)
   2039 21 23 00           5925 	ld	hl,#0x0023
   203C 09                 5926 	add	hl,bc
   203D 7E                 5927 	ld	a,(hl)
   203E B7                 5928 	or	a,a
   203F 28 0A              5929 	jr	Z,00102$
                           5930 ;obj_rocket.c:100: pBatCandidateForKill = &batB;
   2041 DD 36 FEr67        5931 	ld	-2 (ix),#<_batB
   2045 DD 36 FFs02        5932 	ld	-1 (ix),#>_batB
   2049 18 08              5933 	jr	00103$
   204B                    5934 00102$:
                           5935 ;obj_rocket.c:102: pBatCandidateForKill = &batA;
   204B DD 36 FEr47        5936 	ld	-2 (ix),#<_batA
   204F DD 36 FFs02        5937 	ld	-1 (ix),#>_batA
   2053                    5938 00103$:
                           5939 ;obj_rocket.c:110: if(pBatCandidateForKill->state == NORMAL) {
   2053 DD 7E FE           5940 	ld	a,-2 (ix)
   2056 C6 17              5941 	add	a,#0x17
   2058 5F                 5942 	ld	e,a
   2059 DD 7E FF           5943 	ld	a,-1 (ix)
   205C CE 00              5944 	adc	a,#0x00
   205E 57                 5945 	ld	d,a
   205F 1A                 5946 	ld	a,(de)
   2060 B7                 5947 	or	a,a
   2061 20 21              5948 	jr	NZ,00108$
                           5949 ;obj_rocket.c:114: if(GameObj_Collide((GameObj*)this, (GameObj*)pBatCandidateForKill))
   2063 DD 6E FE           5950 	ld	l,-2 (ix)
   2066 DD 66 FF           5951 	ld	h,-1 (ix)
   2069 E5                 5952 	push	hl
   206A C5                 5953 	push	bc
   206B CDr93s14           5954 	call	_GameObj_Collide
   206E F1                 5955 	pop	af
   206F F1                 5956 	pop	af
   2070 AF                 5957 	xor	a,a
   2071 B5                 5958 	or	a,l
   2072 28 10              5959 	jr	Z,00108$
                           5960 ;obj_rocket.c:115: GameObjBat_SetState(pBatCandidateForKill, DYING);
   2074 3E 01              5961 	ld	a,#0x01
   2076 F5                 5962 	push	af
   2077 33                 5963 	inc	sp
   2078 DD 6E FE           5964 	ld	l,-2 (ix)
   207B DD 66 FF           5965 	ld	h,-1 (ix)
   207E E5                 5966 	push	hl
   207F CDr4Bs23           5967 	call	_GameObjBat_SetState
   2082 F1                 5968 	pop	af
   2083 33                 5969 	inc	sp
   2084                    5970 00108$:
   2084 DD F9              5971 	ld	sp,ix
   2086 DD E1              5972 	pop	ix
   2088 C9                 5973 	ret
   2089                    5974 _GameObjRocket_CheckCollision_end::
                           5975 ;obj_rocket.c:129: void GameObjRocket_Draw(GameObjRocket* this)
                           5976 ;	---------------------------------
                           5977 ; Function GameObjRocket_Draw
                           5978 ; ---------------------------------
   2089                    5979 _GameObjRocket_Draw_start::
   2089                    5980 _GameObjRocket_Draw:
   2089 DD E5              5981 	push	ix
   208B DD 21 00 00        5982 	ld	ix,#0
   208F DD 39              5983 	add	ix,sp
                           5984 ;obj_rocket.c:131: this;
   2091 DD E1              5985 	pop	ix
   2093 C9                 5986 	ret
   2094                    5987 _GameObjRocket_Draw_end::
                           5988 ;obj_rocket.c:152: void GameObjRocket_AllocateAnimationObj(GameObjRocket* this)
                           5989 ;	---------------------------------
                           5990 ; Function GameObjRocket_AllocateAnimationObj
                           5991 ; ---------------------------------
   2094                    5992 _GameObjRocket_AllocateAnimationObj_start::
   2094                    5993 _GameObjRocket_AllocateAnimationObj:
   2094 DD E5              5994 	push	ix
   2096 DD 21 00 00        5995 	ld	ix,#0
   209A DD 39              5996 	add	ix,sp
   209C 21 F3 FF           5997 	ld	hl,#-13
   209F 39                 5998 	add	hl,sp
   20A0 F9                 5999 	ld	sp,hl
                           6000 ;obj_rocket.c:161: } ownAnimObj[] = { {&this->animObj}, {&this->animObj1}, /*{&this->animObj2}*/
   20A1 21 06 00           6001 	ld	hl,#0x0006
   20A4 39                 6002 	add	hl,sp
   20A5 EB                 6003 	ex	de,hl
   20A6 DD 7E 04           6004 	ld	a,4 (ix)
   20A9 DD 77 F5           6005 	ld	-11 (ix),a
   20AC DD 7E 05           6006 	ld	a,5 (ix)
   20AF DD 77 F6           6007 	ld	-10 (ix),a
   20B2 DD 7E F5           6008 	ld	a,-11 (ix)
   20B5 C6 17              6009 	add	a,#0x17
   20B7 4F                 6010 	ld	c,a
   20B8 DD 7E F6           6011 	ld	a,-10 (ix)
   20BB CE 00              6012 	adc	a,#0x00
   20BD 47                 6013 	ld	b,a
   20BE EB                 6014 	ex	de,hl
   20BF 71                 6015 	ld	(hl),c
   20C0 23                 6016 	inc	hl
   20C1 70                 6017 	ld	(hl),b
   20C2 21 06 00           6018 	ld	hl,#0x0006
   20C5 39                 6019 	add	hl,sp
   20C6 4D                 6020 	ld	c,l
   20C7 44                 6021 	ld	b,h
   20C8 21 02 00           6022 	ld	hl,#0x0002
   20CB 09                 6023 	add	hl,bc
   20CC DD 75 F7           6024 	ld	-9 (ix),l
   20CF DD 74 F8           6025 	ld	-8 (ix),h
   20D2 DD 7E F5           6026 	ld	a,-11 (ix)
   20D5 C6 19              6027 	add	a,#0x19
   20D7 5F                 6028 	ld	e,a
   20D8 DD 7E F6           6029 	ld	a,-10 (ix)
   20DB CE 00              6030 	adc	a,#0x00
   20DD 57                 6031 	ld	d,a
   20DE DD 6E F7           6032 	ld	l,-9 (ix)
   20E1 DD 66 F8           6033 	ld	h,-8 (ix)
   20E4 73                 6034 	ld	(hl),e
   20E5 23                 6035 	inc	hl
   20E6 72                 6036 	ld	(hl),d
                           6037 ;obj_rocket.c:164: pConst = g_ownAnimObjConst;
                           6038 ;obj_rocket.c:165: for(i=0; i<sizeof(ownAnimObj)/sizeof(ownAnimObj[0]); i++) {
   20E7 DD 7E F5           6039 	ld	a,-11 (ix)
   20EA C6 23              6040 	add	a,#0x23
   20EC DD 77 F7           6041 	ld	-9 (ix),a
   20EF DD 7E F6           6042 	ld	a,-10 (ix)
   20F2 CE 00              6043 	adc	a,#0x00
   20F4 DD 77 F8           6044 	ld	-8 (ix),a
   20F7 DD 36 F5r5B        6045 	ld	-11 (ix),#<_g_ownAnimObjConst
   20FB DD 36 F6s22        6046 	ld	-10 (ix),#>_g_ownAnimObjConst
   20FF DD 36 FD 00        6047 	ld	-3 (ix),#0x00
   2103                    6048 00105$:
   2103 DD 7E FD           6049 	ld	a,-3 (ix)
   2106 D6 02              6050 	sub	a,#0x02
   2108 D2r56s22           6051 	jp	NC,00109$
                           6052 ;obj_rocket.c:166: obj = PoolGameObj_AllocateGameObjAnim();
   210B C5                 6053 	push	bc
   210C CDrEBs10           6054 	call	_PoolGameObj_AllocateGameObjAnim
   210F EB                 6055 	ex	de,hl
   2110 C1                 6056 	pop	bc
   2111 DD 73 FE           6057 	ld	-2 (ix),e
   2114 DD 72 FF           6058 	ld	-1 (ix),d
                           6059 ;obj_rocket.c:167: p = ownAnimObj[i].ptr;
   2117 DD 7E FD           6060 	ld	a,-3 (ix)
   211A 87                 6061 	add	a,a
   211B 81                 6062 	add	a,c
   211C 6F                 6063 	ld	l,a
   211D 78                 6064 	ld	a,b
   211E CE 00              6065 	adc	a,#0x00
   2120 67                 6066 	ld	h,a
   2121 5E                 6067 	ld	e,(hl)
   2122 23                 6068 	inc	hl
   2123 56                 6069 	ld	d,(hl)
   2124 D5                 6070 	push	de
   2125 FD E1              6071 	pop	iy
                           6072 ;obj_rocket.c:168: *p = obj;
   2127 DD 7E FE           6073 	ld	a,-2 (ix)
   212A FD 77 00           6074 	ld	0 (iy),a
   212D DD 7E FF           6075 	ld	a,-1 (ix)
   2130 FD 77 01           6076 	ld	1 (iy),a
                           6077 ;obj_rocket.c:171: if(obj) {
   2133 DD 7E FE           6078 	ld	a,-2 (ix)
   2136 DD B6 FF           6079 	or	a,-1 (ix)
   2139 CAr40s22           6080 	jp	Z,00104$
                           6081 ;obj_rocket.c:172: GameObjAnim_Init(obj, 0, SPRITE_Y_OFFSCREEN);         // initialy put offscreen
   213C C5                 6082 	push	bc
   213D 21 00 01           6083 	ld	hl,#0x0100
   2140 E5                 6084 	push	hl
   2141 26 00              6085 	ld	h, #0x00
   2143 E5                 6086 	push	hl
   2144 DD 6E FE           6087 	ld	l,-2 (ix)
   2147 DD 66 FF           6088 	ld	h,-1 (ix)
   214A E5                 6089 	push	hl
   214B CDrF9s15           6090 	call	_GameObjAnim_Init
   214E F1                 6091 	pop	af
   214F F1                 6092 	pop	af
   2150 F1                 6093 	pop	af
   2151 C1                 6094 	pop	bc
                           6095 ;obj_rocket.c:173: obj->spr_anim_time      = pConst->spr_anim_time;
   2152 DD 7E FE           6096 	ld	a,-2 (ix)
   2155 C6 17              6097 	add	a,#0x17
   2157 5F                 6098 	ld	e,a
   2158 DD 7E FF           6099 	ld	a,-1 (ix)
   215B CE 00              6100 	adc	a,#0x00
   215D 57                 6101 	ld	d,a
   215E DD 6E F5           6102 	ld	l,-11 (ix)
   2161 DD 66 F6           6103 	ld	h,-10 (ix)
   2164 7E                 6104 	ld	a,(hl)
   2165 12                 6105 	ld	(de),a
                           6106 ;obj_rocket.c:174: obj->spr_anim_frames    = pConst->spr_anim_frames;
   2166 DD 7E FE           6107 	ld	a,-2 (ix)
   2169 C6 18              6108 	add	a,#0x18
   216B DD 77 F3           6109 	ld	-13 (ix),a
   216E DD 7E FF           6110 	ld	a,-1 (ix)
   2171 CE 00              6111 	adc	a,#0x00
   2173 DD 77 F4           6112 	ld	-12 (ix),a
   2176 DD 5E F5           6113 	ld	e,-11 (ix)
   2179 DD 56 F6           6114 	ld	d,-10 (ix)
   217C 13                 6115 	inc	de
   217D 1A                 6116 	ld	a,(de)
   217E DD 6E F3           6117 	ld	l,-13 (ix)
   2181 DD 66 F4           6118 	ld	h,-12 (ix)
   2184 77                 6119 	ld	(hl),a
                           6120 ;obj_rocket.c:175: obj->spr_count          = pConst->spr_count;
   2185 DD 7E FE           6121 	ld	a,-2 (ix)
   2188 C6 19              6122 	add	a,#0x19
   218A DD 77 F3           6123 	ld	-13 (ix),a
   218D DD 7E FF           6124 	ld	a,-1 (ix)
   2190 CE 00              6125 	adc	a,#0x00
   2192 DD 77 F4           6126 	ld	-12 (ix),a
   2195 DD 5E F5           6127 	ld	e,-11 (ix)
   2198 DD 56 F6           6128 	ld	d,-10 (ix)
   219B 13                 6129 	inc	de
   219C 13                 6130 	inc	de
   219D 1A                 6131 	ld	a,(de)
   219E DD 6E F3           6132 	ld	l,-13 (ix)
   21A1 DD 66 F4           6133 	ld	h,-12 (ix)
   21A4 77                 6134 	ld	(hl),a
                           6135 ;obj_rocket.c:176: obj->spr_height         = pConst->spr_height;
   21A5 DD 7E FE           6136 	ld	a,-2 (ix)
   21A8 C6 1A              6137 	add	a,#0x1A
   21AA DD 77 F3           6138 	ld	-13 (ix),a
   21AD DD 7E FF           6139 	ld	a,-1 (ix)
   21B0 CE 00              6140 	adc	a,#0x00
   21B2 DD 77 F4           6141 	ld	-12 (ix),a
   21B5 DD 7E F5           6142 	ld	a,-11 (ix)
   21B8 C6 03              6143 	add	a,#0x03
   21BA 5F                 6144 	ld	e,a
   21BB DD 7E F6           6145 	ld	a,-10 (ix)
   21BE CE 00              6146 	adc	a,#0x00
   21C0 57                 6147 	ld	d,a
   21C1 1A                 6148 	ld	a,(de)
   21C2 DD 6E F3           6149 	ld	l,-13 (ix)
   21C5 DD 66 F4           6150 	ld	h,-12 (ix)
   21C8 77                 6151 	ld	(hl),a
                           6152 ;obj_rocket.c:177: obj->spr_def_start      = pConst->spr_def_start;
   21C9 DD 7E FE           6153 	ld	a,-2 (ix)
   21CC C6 1B              6154 	add	a,#0x1B
   21CE DD 77 F3           6155 	ld	-13 (ix),a
   21D1 DD 7E FF           6156 	ld	a,-1 (ix)
   21D4 CE 00              6157 	adc	a,#0x00
   21D6 DD 77 F4           6158 	ld	-12 (ix),a
   21D9 DD 7E F5           6159 	ld	a,-11 (ix)
   21DC C6 04              6160 	add	a,#0x04
   21DE 6F                 6161 	ld	l, a
   21DF DD 7E F6           6162 	ld	a, -10 (ix)
   21E2 CE 00              6163 	adc	a, #0x00
   21E4 67                 6164 	ld	h,a
   21E5 5E                 6165 	ld	e,(hl)
   21E6 23                 6166 	inc	hl
   21E7 56                 6167 	ld	d,(hl)
   21E8 DD 6E F3           6168 	ld	l,-13 (ix)
   21EB DD 66 F4           6169 	ld	h,-12 (ix)
   21EE 73                 6170 	ld	(hl),e
   21EF 23                 6171 	inc	hl
   21F0 72                 6172 	ld	(hl),d
                           6173 ;obj_rocket.c:178: obj->spr_def_pitch      = pConst->spr_def_pitch;
   21F1 DD 7E FE           6174 	ld	a,-2 (ix)
   21F4 C6 1D              6175 	add	a,#0x1D
   21F6 DD 77 F3           6176 	ld	-13 (ix),a
   21F9 DD 7E FF           6177 	ld	a,-1 (ix)
   21FC CE 00              6178 	adc	a,#0x00
   21FE DD 77 F4           6179 	ld	-12 (ix),a
   2201 DD 7E F5           6180 	ld	a,-11 (ix)
   2204 C6 06              6181 	add	a,#0x06
   2206 5F                 6182 	ld	e,a
   2207 DD 7E F6           6183 	ld	a,-10 (ix)
   220A CE 00              6184 	adc	a,#0x00
   220C 57                 6185 	ld	d,a
   220D 1A                 6186 	ld	a,(de)
   220E DD 6E F3           6187 	ld	l,-13 (ix)
   2211 DD 66 F4           6188 	ld	h,-12 (ix)
   2214 77                 6189 	ld	(hl),a
                           6190 ;obj_rocket.c:179: GameObjAnim_EnableAnimation(obj,TRUE);
   2215 C5                 6191 	push	bc
   2216 3E 01              6192 	ld	a,#0x01
   2218 F5                 6193 	push	af
   2219 33                 6194 	inc	sp
   221A DD 6E FE           6195 	ld	l,-2 (ix)
   221D DD 66 FF           6196 	ld	h,-1 (ix)
   2220 E5                 6197 	push	hl
   2221 CDr4Cs18           6198 	call	_GameObjAnim_EnableAnimation
   2224 F1                 6199 	pop	af
   2225 33                 6200 	inc	sp
   2226 C1                 6201 	pop	bc
                           6202 ;obj_rocket.c:181: if(this->isMovingToTheRight){
   2227 DD 6E F7           6203 	ld	l,-9 (ix)
   222A DD 66 F8           6204 	ld	h,-8 (ix)
   222D 7E                 6205 	ld	a,(hl)
   222E B7                 6206 	or	a,a
   222F 28 0F              6207 	jr	Z,00104$
                           6208 ;obj_rocket.c:182: obj->is_Xflip = TRUE;
   2231 DD 7E FE           6209 	ld	a,-2 (ix)
   2234 C6 1E              6210 	add	a,#0x1E
   2236 5F                 6211 	ld	e,a
   2237 DD 7E FF           6212 	ld	a,-1 (ix)
   223A CE 00              6213 	adc	a,#0x00
   223C 57                 6214 	ld	d,a
   223D 3E 01              6215 	ld	a,#0x01
   223F 12                 6216 	ld	(de),a
   2240                    6217 00104$:
                           6218 ;obj_rocket.c:186: pConst++;
   2240 DD 7E F5           6219 	ld	a,-11 (ix)
   2243 C6 07              6220 	add	a,#0x07
   2245 DD 77 F5           6221 	ld	-11 (ix),a
   2248 DD 7E F6           6222 	ld	a,-10 (ix)
   224B CE 00              6223 	adc	a,#0x00
   224D DD 77 F6           6224 	ld	-10 (ix),a
                           6225 ;obj_rocket.c:165: for(i=0; i<sizeof(ownAnimObj)/sizeof(ownAnimObj[0]); i++) {
   2250 DD 34 FD           6226 	inc	-3 (ix)
   2253 C3r03s21           6227 	jp	00105$
   2256                    6228 00109$:
   2256 DD F9              6229 	ld	sp,ix
   2258 DD E1              6230 	pop	ix
   225A C9                 6231 	ret
   225B                    6232 _GameObjRocket_AllocateAnimationObj_end::
   225B                    6233 _g_ownAnimObjConst:
   225B 0C                 6234 	.db #0x0C
   225C 03                 6235 	.db #0x03
   225D 01                 6236 	.db #0x01
   225E 01                 6237 	.db #0x01
   225F 7A 00              6238 	.dw #0x007A
   2261 00                 6239 	.db #0x00
   2262 32                 6240 	.db #0x32
   2263 01                 6241 	.db #0x01
   2264 01                 6242 	.db #0x01
   2265 01                 6243 	.db #0x01
   2266 79 00              6244 	.dw #0x0079
   2268 00                 6245 	.db #0x00
                           6246 ;obj_rocket.c:192: void GameObjRocket_Free(GameObjRocket* this)
                           6247 ;	---------------------------------
                           6248 ; Function GameObjRocket_Free
                           6249 ; ---------------------------------
   2269                    6250 _GameObjRocket_Free_start::
   2269                    6251 _GameObjRocket_Free:
   2269 DD E5              6252 	push	ix
   226B DD 21 00 00        6253 	ld	ix,#0
   226F DD 39              6254 	add	ix,sp
                           6255 ;obj_rocket.c:195: PoolGameObj_FreeGameObj( (GameObj*)this->animObj );
   2271 DD 4E 04           6256 	ld	c,4 (ix)
   2274 DD 46 05           6257 	ld	b,5 (ix)
   2277 21 17 00           6258 	ld	hl,#0x0017
   227A 09                 6259 	add	hl,bc
   227B 5E                 6260 	ld	e,(hl)
   227C 23                 6261 	inc	hl
   227D 56                 6262 	ld	d,(hl)
   227E C5                 6263 	push	bc
   227F D5                 6264 	push	de
   2280 CDr11s11           6265 	call	_PoolGameObj_FreeGameObj
   2283 F1                 6266 	pop	af
   2284 C1                 6267 	pop	bc
                           6268 ;obj_rocket.c:196: PoolGameObj_FreeGameObj( (GameObj*)this->animObj1 );
   2285 21 19 00           6269 	ld	hl,#0x0019
   2288 09                 6270 	add	hl,bc
   2289 5E                 6271 	ld	e,(hl)
   228A 23                 6272 	inc	hl
   228B 56                 6273 	ld	d,(hl)
   228C C5                 6274 	push	bc
   228D D5                 6275 	push	de
   228E CDr11s11           6276 	call	_PoolGameObj_FreeGameObj
   2291 F1                 6277 	pop	af
   2292 C1                 6278 	pop	bc
                           6279 ;obj_rocket.c:199: PoolGameObj_FreeGameObj( (GameObj*)this );
   2293 C5                 6280 	push	bc
   2294 CDr11s11           6281 	call	_PoolGameObj_FreeGameObj
   2297 F1                 6282 	pop	af
   2298 DD E1              6283 	pop	ix
   229A C9                 6284 	ret
   229B                    6285 _GameObjRocket_Free_end::
                           6286 ;obj_bat.c:1: void GameObjBat_Init(GameObjBat* this, int x, int y)
                           6287 ;	---------------------------------
                           6288 ; Function GameObjBat_Init
                           6289 ; ---------------------------------
   229B                    6290 _GameObjBat_Init_start::
   229B                    6291 _GameObjBat_Init:
   229B DD E5              6292 	push	ix
   229D DD 21 00 00        6293 	ld	ix,#0
   22A1 DD 39              6294 	add	ix,sp
                           6295 ;obj_bat.c:4: GameObj_Init((GameObj*)this);
   22A3 DD 4E 04           6296 	ld	c,4 (ix)
   22A6 DD 46 05           6297 	ld	b,5 (ix)
   22A9 C5                 6298 	push	bc
   22AA CDr55s13           6299 	call	_GameObj_Init
   22AD F1                 6300 	pop	af
                           6301 ;obj_bat.c:6: this->gobj.pMoveFunc = &GameObjBat_Move;
   22AE DD 4E 04           6302 	ld	c,4 (ix)
   22B1 DD 46 05           6303 	ld	b,5 (ix)
   22B4 21 13 00           6304 	ld	hl,#0x0013
   22B7 09                 6305 	add	hl,bc
   22B8 5D                 6306 	ld	e,l
   22B9 36r55              6307 	ld	(hl),#<_GameObjBat_Move
   22BB 23                 6308 	inc	hl
   22BC 36s24              6309 	ld	(hl),#>_GameObjBat_Move
                           6310 ;obj_bat.c:7: this->gobj.pDrawFunc = &GameObjBat_Draw;
   22BE 21 15 00           6311 	ld	hl,#0x0015
   22C1 09                 6312 	add	hl,bc
   22C2 5D                 6313 	ld	e,l
   22C3 36rEB              6314 	ld	(hl),#<_GameObjBat_Draw
   22C5 23                 6315 	inc	hl
   22C6 36s24              6316 	ld	(hl),#>_GameObjBat_Draw
                           6317 ;obj_bat.c:9: this->gobj.x = x;
   22C8 69                 6318 	ld	l,c
   22C9 60                 6319 	ld	h,b
   22CA 23                 6320 	inc	hl
   22CB DD 7E 06           6321 	ld	a,6 (ix)
   22CE 77                 6322 	ld	(hl),a
   22CF 23                 6323 	inc	hl
   22D0 DD 7E 07           6324 	ld	a,7 (ix)
   22D3 77                 6325 	ld	(hl),a
                           6326 ;obj_bat.c:10: this->gobj.y = y;
   22D4 21 03 00           6327 	ld	hl,#0x0003
   22D7 09                 6328 	add	hl,bc
   22D8 DD 7E 08           6329 	ld	a,8 (ix)
   22DB 77                 6330 	ld	(hl),a
   22DC 23                 6331 	inc	hl
   22DD DD 7E 09           6332 	ld	a,9 (ix)
   22E0 77                 6333 	ld	(hl),a
                           6334 ;obj_bat.c:11: this->gobj.width  = BAT_WIDTH;
   22E1 21 05 00           6335 	ld	hl,#0x0005
   22E4 09                 6336 	add	hl,bc
   22E5 36 08              6337 	ld	(hl),#0x08
   22E7 23                 6338 	inc	hl
   22E8 36 00              6339 	ld	(hl),#0x00
                           6340 ;obj_bat.c:12: this->gobj.height = BAT_HEIGHT;
   22EA 21 07 00           6341 	ld	hl,#0x0007
   22ED 09                 6342 	add	hl,bc
   22EE 36 20              6343 	ld	(hl),#0x20
   22F0 23                 6344 	inc	hl
   22F1 36 00              6345 	ld	(hl),#0x00
                           6346 ;obj_bat.c:13: GameObj_InitCollideBox((GameObj*)this);
   22F3 59                 6347 	ld	e,c
   22F4 50                 6348 	ld	d,b
   22F5 C5                 6349 	push	bc
   22F6 D5                 6350 	push	de
   22F7 CDr6Fs13           6351 	call	_GameObj_InitCollideBox
   22FA F1                 6352 	pop	af
   22FB C1                 6353 	pop	bc
                           6354 ;obj_bat.c:15: this->state = NORMAL;
   22FC 21 17 00           6355 	ld	hl,#0x0017
   22FF 09                 6356 	add	hl,bc
   2300 EB                 6357 	ex	de,hl
   2301 3E 00              6358 	ld	a,#0x00
   2303 12                 6359 	ld	(de),a
                           6360 ;obj_bat.c:16: this->max_dying_time = 250;
   2304 21 18 00           6361 	ld	hl,#0x0018
   2307 09                 6362 	add	hl,bc
   2308 EB                 6363 	ex	de,hl
   2309 3E FA              6364 	ld	a,#0xFA
   230B 12                 6365 	ld	(de),a
                           6366 ;obj_bat.c:17: this->dying_time = 0;
   230C 21 19 00           6367 	ld	hl,#0x0019
   230F 09                 6368 	add	hl,bc
   2310 EB                 6369 	ex	de,hl
   2311 3E 00              6370 	ld	a,#0x00
   2313 12                 6371 	ld	(de),a
                           6372 ;obj_bat.c:18: this->rocket_creation_time = 0;
   2314 21 1A 00           6373 	ld	hl,#0x001A
   2317 09                 6374 	add	hl,bc
   2318 36 00              6375 	ld	(hl),#0x00
   231A 23                 6376 	inc	hl
   231B 36 00              6377 	ld	(hl),#0x00
                           6378 ;obj_bat.c:19: this->rocket = NULL;
   231D 21 1C 00           6379 	ld	hl,#0x001C
   2320 09                 6380 	add	hl,bc
   2321 36 00              6381 	ld	(hl),#0x00
   2323 23                 6382 	inc	hl
   2324 36 00              6383 	ld	(hl),#0x00
                           6384 ;obj_bat.c:21: this->pScore = (x < SCREEN_WIDTH/2) ? &scoreA : &scoreB;
   2326 21 1E 00           6385 	ld	hl,#0x001E
   2329 09                 6386 	add	hl,bc
   232A 4D                 6387 	ld	c,l
   232B 44                 6388 	ld	b,h
   232C DD 7E 06           6389 	ld	a,6 (ix)
   232F D6 B8              6390 	sub	a,#0xB8
   2331 DD 7E 07           6391 	ld	a,7 (ix)
   2334 DE 00              6392 	sbc	a,#0x00
   2336 F2r3Fs23           6393 	jp	P,00103$
   2339 21r01s02           6394 	ld	hl,#_scoreA
   233C EB                 6395 	ex	de,hl
   233D 18 04              6396 	jr	00104$
   233F                    6397 00103$:
   233F 21r24s02           6398 	ld	hl,#_scoreB
   2342 EB                 6399 	ex	de,hl
   2343                    6400 00104$:
   2343 69                 6401 	ld	l,c
   2344 60                 6402 	ld	h,b
   2345 73                 6403 	ld	(hl),e
   2346 23                 6404 	inc	hl
   2347 72                 6405 	ld	(hl),d
   2348 DD E1              6406 	pop	ix
   234A C9                 6407 	ret
   234B                    6408 _GameObjBat_Init_end::
                           6409 ;obj_bat.c:24: void GameObjBat_SetState(GameObjBat* this, ObjState state)
                           6410 ;	---------------------------------
                           6411 ; Function GameObjBat_SetState
                           6412 ; ---------------------------------
   234B                    6413 _GameObjBat_SetState_start::
   234B                    6414 _GameObjBat_SetState:
   234B DD E5              6415 	push	ix
   234D DD 21 00 00        6416 	ld	ix,#0
   2351 DD 39              6417 	add	ix,sp
   2353 F5                 6418 	push	af
   2354 F5                 6419 	push	af
                           6420 ;obj_bat.c:31: if(state == this->state)
   2355 DD 4E 04           6421 	ld	c,4 (ix)
   2358 DD 46 05           6422 	ld	b,5 (ix)
   235B 21 17 00           6423 	ld	hl,#0x0017
   235E 09                 6424 	add	hl,bc
   235F DD 75 FC           6425 	ld	-4 (ix),l
   2362 DD 74 FD           6426 	ld	-3 (ix),h
   2365 5E                 6427 	ld	e,(hl)
   2366 DD 7E 06           6428 	ld	a,6 (ix)
   2369 93                 6429 	sub	e
   236A 20 03              6430 	jr	NZ,00102$
                           6431 ;obj_bat.c:32: return;
   236C C3r50s24           6432 	jp	00107$
   236F                    6433 00102$:
                           6434 ;obj_bat.c:33: this->state = state;
   236F DD 6E FC           6435 	ld	l,-4 (ix)
   2372 DD 66 FD           6436 	ld	h,-3 (ix)
   2375 DD 7E 06           6437 	ld	a,6 (ix)
   2378 77                 6438 	ld	(hl),a
                           6439 ;obj_bat.c:35: if(this->state == DYING) {
   2379 DD 7E 06           6440 	ld	a,6 (ix)
   237C D6 01              6441 	sub	a,#0x01
   237E C2r50s24           6442 	jp	NZ,00107$
                           6443 ;obj_bat.c:39: obj = PoolGameObj_AllocateGameObjAnim();
   2381 C5                 6444 	push	bc
   2382 CDrEBs10           6445 	call	_PoolGameObj_AllocateGameObjAnim
   2385 EB                 6446 	ex	de,hl
   2386 C1                 6447 	pop	bc
   2387 DD 73 FE           6448 	ld	-2 (ix),e
   238A DD 72 FF           6449 	ld	-1 (ix),d
                           6450 ;obj_bat.c:44: if(obj) {
   238D DD 7E FE           6451 	ld	a,-2 (ix)
   2390 DD B6 FF           6452 	or	a,-1 (ix)
   2393 CAr48s24           6453 	jp	Z,00104$
                           6454 ;obj_bat.c:45: x = this->gobj.x;
   2396 69                 6455 	ld	l,c
   2397 60                 6456 	ld	h,b
   2398 23                 6457 	inc	hl
   2399 5E                 6458 	ld	e,(hl)
   239A 23                 6459 	inc	hl
   239B 56                 6460 	ld	d,(hl)
                           6461 ;obj_bat.c:46: x > SCREEN_WIDTH/2 ? ( x -= 12) : (x -= 4);
   239C 3E B8              6462 	ld	a,#0xB8
   239E 93                 6463 	sub	a,e
   239F 3E 00              6464 	ld	a,#0x00
   23A1 9A                 6465 	sbc	a,d
   23A2 30 0A              6466 	jr	NC,00109$
   23A4 7B                 6467 	ld	a,e
   23A5 C6 F4              6468 	add	a,#0xF4
   23A7 5F                 6469 	ld	e,a
   23A8 7A                 6470 	ld	a,d
   23A9 CE FF              6471 	adc	a,#0xFF
   23AB 57                 6472 	ld	d,a
   23AC 18 08              6473 	jr	00110$
   23AE                    6474 00109$:
   23AE 7B                 6475 	ld	a,e
   23AF C6 FC              6476 	add	a,#0xFC
   23B1 5F                 6477 	ld	e,a
   23B2 7A                 6478 	ld	a,d
   23B3 CE FF              6479 	adc	a,#0xFF
   23B5 57                 6480 	ld	d,a
   23B6                    6481 00110$:
                           6482 ;obj_bat.c:48: GameObjAnim_Init(obj, x/*(this->xcoordinate - 4)*/ /*+i*16*/, this->gobj.y /*+i*8*/);
   23B6 69                 6483 	ld	l,c
   23B7 60                 6484 	ld	h,b
   23B8 23                 6485 	inc	hl
   23B9 23                 6486 	inc	hl
   23BA 23                 6487 	inc	hl
   23BB 4E                 6488 	ld	c,(hl)
   23BC 23                 6489 	inc	hl
   23BD 46                 6490 	ld	b,(hl)
   23BE C5                 6491 	push	bc
   23BF D5                 6492 	push	de
   23C0 DD 6E FE           6493 	ld	l,-2 (ix)
   23C3 DD 66 FF           6494 	ld	h,-1 (ix)
   23C6 E5                 6495 	push	hl
   23C7 CDrF9s15           6496 	call	_GameObjAnim_Init
   23CA F1                 6497 	pop	af
   23CB F1                 6498 	pop	af
   23CC F1                 6499 	pop	af
                           6500 ;obj_bat.c:49: obj->spr_anim_time      = 50;   //-(i*10);
   23CD DD 7E FE           6501 	ld	a,-2 (ix)
   23D0 C6 17              6502 	add	a,#0x17
   23D2 4F                 6503 	ld	c,a
   23D3 DD 7E FF           6504 	ld	a,-1 (ix)
   23D6 CE 00              6505 	adc	a,#0x00
   23D8 47                 6506 	ld	b,a
   23D9 3E 32              6507 	ld	a,#0x32
   23DB 02                 6508 	ld	(bc),a
                           6509 ;obj_bat.c:50: obj->spr_anim_frames    = 7;
   23DC DD 7E FE           6510 	ld	a,-2 (ix)
   23DF C6 18              6511 	add	a,#0x18
   23E1 4F                 6512 	ld	c,a
   23E2 DD 7E FF           6513 	ld	a,-1 (ix)
   23E5 CE 00              6514 	adc	a,#0x00
   23E7 47                 6515 	ld	b,a
   23E8 3E 07              6516 	ld	a,#0x07
   23EA 02                 6517 	ld	(bc),a
                           6518 ;obj_bat.c:51: obj->spr_count          = 2;
   23EB DD 7E FE           6519 	ld	a,-2 (ix)
   23EE C6 19              6520 	add	a,#0x19
   23F0 4F                 6521 	ld	c,a
   23F1 DD 7E FF           6522 	ld	a,-1 (ix)
   23F4 CE 00              6523 	adc	a,#0x00
   23F6 47                 6524 	ld	b,a
   23F7 3E 02              6525 	ld	a,#0x02
   23F9 02                 6526 	ld	(bc),a
                           6527 ;obj_bat.c:52: obj->spr_height         = 2;
   23FA DD 7E FE           6528 	ld	a,-2 (ix)
   23FD C6 1A              6529 	add	a,#0x1A
   23FF 4F                 6530 	ld	c,a
   2400 DD 7E FF           6531 	ld	a,-1 (ix)
   2403 CE 00              6532 	adc	a,#0x00
   2405 47                 6533 	ld	b,a
   2406 3E 02              6534 	ld	a,#0x02
   2408 02                 6535 	ld	(bc),a
                           6536 ;obj_bat.c:53: obj->spr_def_start      = SPRITE_DEF_NUM_BANG1;
   2409 DD 7E FE           6537 	ld	a,-2 (ix)
   240C C6 1B              6538 	add	a,#0x1B
   240E 6F                 6539 	ld	l, a
   240F DD 7E FF           6540 	ld	a, -1 (ix)
   2412 CE 00              6541 	adc	a, #0x00
   2414 67                 6542 	ld	h,a
   2415 36 15              6543 	ld	(hl),#0x15
   2417 23                 6544 	inc	hl
   2418 36 00              6545 	ld	(hl),#0x00
                           6546 ;obj_bat.c:54: obj->spr_def_pitch      = 7*2;
   241A DD 7E FE           6547 	ld	a,-2 (ix)
   241D C6 1D              6548 	add	a,#0x1D
   241F 4F                 6549 	ld	c,a
   2420 DD 7E FF           6550 	ld	a,-1 (ix)
   2423 CE 00              6551 	adc	a,#0x00
   2425 47                 6552 	ld	b,a
   2426 3E 0E              6553 	ld	a,#0x0E
   2428 02                 6554 	ld	(bc),a
                           6555 ;obj_bat.c:55: obj->isLoopAnim         = FALSE;
   2429 DD 7E FE           6556 	ld	a,-2 (ix)
   242C C6 24              6557 	add	a,#0x24
   242E 4F                 6558 	ld	c,a
   242F DD 7E FF           6559 	ld	a,-1 (ix)
   2432 CE 00              6560 	adc	a,#0x00
   2434 47                 6561 	ld	b,a
   2435 3E 00              6562 	ld	a,#0x00
   2437 02                 6563 	ld	(bc),a
                           6564 ;obj_bat.c:56: GameObjAnim_EnableAnimation(obj,TRUE);
   2438 3E 01              6565 	ld	a,#0x01
   243A F5                 6566 	push	af
   243B 33                 6567 	inc	sp
   243C DD 6E FE           6568 	ld	l,-2 (ix)
   243F DD 66 FF           6569 	ld	h,-1 (ix)
   2442 E5                 6570 	push	hl
   2443 CDr4Cs18           6571 	call	_GameObjAnim_EnableAnimation
   2446 F1                 6572 	pop	af
   2447 33                 6573 	inc	sp
   2448                    6574 00104$:
                           6575 ;obj_bat.c:61: Sound_NewFx(SOUND_FX_SPLASH);
   2448 3E 0C              6576 	ld	a,#0x0C
   244A F5                 6577 	push	af
   244B 33                 6578 	inc	sp
   244C CDr00s00           6579 	call	_Sound_NewFx
   244F 33                 6580 	inc	sp
   2450                    6581 00107$:
   2450 DD F9              6582 	ld	sp,ix
   2452 DD E1              6583 	pop	ix
   2454 C9                 6584 	ret
   2455                    6585 _GameObjBat_SetState_end::
                           6586 ;obj_bat.c:66: void GameObjBat_Move(GameObjBat* this)
                           6587 ;	---------------------------------
                           6588 ; Function GameObjBat_Move
                           6589 ; ---------------------------------
   2455                    6590 _GameObjBat_Move_start::
   2455                    6591 _GameObjBat_Move:
   2455 DD E5              6592 	push	ix
   2457 DD 21 00 00        6593 	ld	ix,#0
   245B DD 39              6594 	add	ix,sp
                           6595 ;obj_bat.c:68: GameObjBat_state_handler(this);
   245D DD 6E 04           6596 	ld	l,4 (ix)
   2460 DD 66 05           6597 	ld	h,5 (ix)
   2463 E5                 6598 	push	hl
   2464 CDr63s26           6599 	call	_GameObjBat_state_handler
   2467 F1                 6600 	pop	af
   2468 DD E1              6601 	pop	ix
   246A C9                 6602 	ret
   246B                    6603 _GameObjBat_Move_end::
                           6604 ;obj_bat.c:71: void GameObjBat_MoveUp(GameObjBat* this)
                           6605 ;	---------------------------------
                           6606 ; Function GameObjBat_MoveUp
                           6607 ; ---------------------------------
   246B                    6608 _GameObjBat_MoveUp_start::
   246B                    6609 _GameObjBat_MoveUp:
   246B DD E5              6610 	push	ix
   246D DD 21 00 00        6611 	ld	ix,#0
   2471 DD 39              6612 	add	ix,sp
                           6613 ;obj_bat.c:74: if(this->state != NORMAL)
   2473 DD 4E 04           6614 	ld	c,4 (ix)
   2476 DD 46 05           6615 	ld	b,5 (ix)
   2479 21 17 00           6616 	ld	hl,#0x0017
   247C 09                 6617 	add	hl,bc
   247D 7E                 6618 	ld	a,(hl)
   247E B7                 6619 	or	a,a
                           6620 ;obj_bat.c:75: return;
   247F 20 17              6621 	jr	NZ,00105$
                           6622 ;obj_bat.c:78: if (this->gobj.y > 0) // Move only when bat is not touching the top so it doesnt jump out of screen.
   2481 03                 6623 	inc	bc
   2482 03                 6624 	inc	bc
   2483 03                 6625 	inc	bc
   2484 69                 6626 	ld	l,c
   2485 60                 6627 	ld	h,b
   2486 5E                 6628 	ld	e,(hl)
   2487 23                 6629 	inc	hl
   2488 56                 6630 	ld	d,(hl)
   2489 3E 00              6631 	ld	a,#0x00
   248B 93                 6632 	sub	a,e
   248C 3E 00              6633 	ld	a,#0x00
   248E 9A                 6634 	sbc	a,d
   248F F2r98s24           6635 	jp	P,00105$
                           6636 ;obj_bat.c:81: this->gobj.y --;
   2492 1B                 6637 	dec	de
   2493 69                 6638 	ld	l,c
   2494 60                 6639 	ld	h,b
   2495 73                 6640 	ld	(hl),e
   2496 23                 6641 	inc	hl
   2497 72                 6642 	ld	(hl),d
   2498                    6643 00105$:
   2498 DD E1              6644 	pop	ix
   249A C9                 6645 	ret
   249B                    6646 _GameObjBat_MoveUp_end::
                           6647 ;obj_bat.c:89: void GameObjBat_MoveDown(GameObjBat* this)
                           6648 ;	---------------------------------
                           6649 ; Function GameObjBat_MoveDown
                           6650 ; ---------------------------------
   249B                    6651 _GameObjBat_MoveDown_start::
   249B                    6652 _GameObjBat_MoveDown:
   249B DD E5              6653 	push	ix
   249D DD 21 00 00        6654 	ld	ix,#0
   24A1 DD 39              6655 	add	ix,sp
   24A3 F5                 6656 	push	af
                           6657 ;obj_bat.c:92: if(this->state != NORMAL)
   24A4 DD 4E 04           6658 	ld	c,4 (ix)
   24A7 DD 46 05           6659 	ld	b,5 (ix)
   24AA 21 17 00           6660 	ld	hl,#0x0017
   24AD 09                 6661 	add	hl,bc
   24AE 7E                 6662 	ld	a,(hl)
   24AF B7                 6663 	or	a,a
                           6664 ;obj_bat.c:93: return;
   24B0 20 34              6665 	jr	NZ,00105$
                           6666 ;obj_bat.c:95: if (this->gobj.y + this->gobj.height < GAME_FIELD_MAX_SCREEN_Y) // Make sure bat doesnot go below the screen.
   24B2 21 03 00           6667 	ld	hl,#0x0003
   24B5 09                 6668 	add	hl,bc
   24B6 5D                 6669 	ld	e,l
   24B7 54                 6670 	ld	d,h
   24B8 7E                 6671 	ld	a,(hl)
   24B9 DD 77 FE           6672 	ld	-2 (ix),a
   24BC 23                 6673 	inc	hl
   24BD 7E                 6674 	ld	a,(hl)
   24BE DD 77 FF           6675 	ld	-1 (ix),a
   24C1 21 07 00           6676 	ld	hl,#0x0007
   24C4 09                 6677 	add	hl,bc
   24C5 4E                 6678 	ld	c,(hl)
   24C6 23                 6679 	inc	hl
   24C7 46                 6680 	ld	b,(hl)
   24C8 DD 7E FE           6681 	ld	a,-2 (ix)
   24CB 81                 6682 	add	a,c
   24CC 4F                 6683 	ld	c,a
   24CD DD 7E FF           6684 	ld	a,-1 (ix)
   24D0 88                 6685 	adc	a,b
   24D1 47                 6686 	ld	b,a
   24D2 79                 6687 	ld	a,c
   24D3 D6 F0              6688 	sub	a,#0xF0
   24D5 78                 6689 	ld	a,b
   24D6 DE 00              6690 	sbc	a,#0x00
   24D8 F2rE6s24           6691 	jp	P,00105$
                           6692 ;obj_bat.c:98: this->gobj.y ++;
   24DB DD 4E FE           6693 	ld	c,-2 (ix)
   24DE DD 46 FF           6694 	ld	b,-1 (ix)
   24E1 03                 6695 	inc	bc
   24E2 EB                 6696 	ex	de,hl
   24E3 71                 6697 	ld	(hl),c
   24E4 23                 6698 	inc	hl
   24E5 70                 6699 	ld	(hl),b
   24E6                    6700 00105$:
   24E6 DD F9              6701 	ld	sp,ix
   24E8 DD E1              6702 	pop	ix
   24EA C9                 6703 	ret
   24EB                    6704 _GameObjBat_MoveDown_end::
                           6705 ;obj_bat.c:105: void GameObjBat_Draw(GameObjBat* this)
                           6706 ;	---------------------------------
                           6707 ; Function GameObjBat_Draw
                           6708 ; ---------------------------------
   24EB                    6709 _GameObjBat_Draw_start::
   24EB                    6710 _GameObjBat_Draw:
   24EB DD E5              6711 	push	ix
   24ED DD 21 00 00        6712 	ld	ix,#0
   24F1 DD 39              6713 	add	ix,sp
   24F3 F5                 6714 	push	af
   24F4 F5                 6715 	push	af
                           6716 ;obj_bat.c:108: this->gobj.x + this->gobj.width, this->gobj.y + this->gobj.height);
   24F5 DD 4E 04           6717 	ld	c,4 (ix)
   24F8 DD 46 05           6718 	ld	b,5 (ix)
   24FB 21 03 00           6719 	ld	hl,#0x0003
   24FE 09                 6720 	add	hl,bc
   24FF 7E                 6721 	ld	a,(hl)
   2500 DD 77 FE           6722 	ld	-2 (ix),a
   2503 23                 6723 	inc	hl
   2504 7E                 6724 	ld	a,(hl)
   2505 DD 77 FF           6725 	ld	-1 (ix),a
   2508 21 07 00           6726 	ld	hl,#0x0007
   250B 09                 6727 	add	hl,bc
   250C 5E                 6728 	ld	e,(hl)
   250D 23                 6729 	inc	hl
   250E 56                 6730 	ld	d,(hl)
   250F DD 7E FE           6731 	ld	a,-2 (ix)
   2512 83                 6732 	add	a,e
   2513 DD 77 FC           6733 	ld	-4 (ix),a
   2516 DD 7E FF           6734 	ld	a,-1 (ix)
   2519 8A                 6735 	adc	a,d
   251A DD 77 FD           6736 	ld	-3 (ix),a
   251D 69                 6737 	ld	l,c
   251E 60                 6738 	ld	h,b
   251F 23                 6739 	inc	hl
   2520 5E                 6740 	ld	e,(hl)
   2521 23                 6741 	inc	hl
   2522 56                 6742 	ld	d,(hl)
   2523 69                 6743 	ld	l,c
   2524 60                 6744 	ld	h,b
   2525 23                 6745 	inc	hl
   2526 23                 6746 	inc	hl
   2527 23                 6747 	inc	hl
   2528 23                 6748 	inc	hl
   2529 23                 6749 	inc	hl
   252A 4E                 6750 	ld	c,(hl)
   252B 23                 6751 	inc	hl
   252C 46                 6752 	ld	b,(hl)
   252D 7B                 6753 	ld	a,e
   252E 81                 6754 	add	a,c
   252F 4F                 6755 	ld	c,a
   2530 7A                 6756 	ld	a,d
   2531 88                 6757 	adc	a,b
   2532 47                 6758 	ld	b,a
                           6759 ;obj_bat.c:107: DrawBat (this->gobj.x, this->gobj.y,
   2533 DD 6E FC           6760 	ld	l,-4 (ix)
   2536 DD 66 FD           6761 	ld	h,-3 (ix)
   2539 E5                 6762 	push	hl
   253A C5                 6763 	push	bc
   253B DD 6E FE           6764 	ld	l,-2 (ix)
   253E DD 66 FF           6765 	ld	h,-1 (ix)
   2541 E5                 6766 	push	hl
   2542 D5                 6767 	push	de
   2543 CDrFAs07           6768 	call	_DrawBat
   2546 F1                 6769 	pop	af
   2547 F1                 6770 	pop	af
   2548 F1                 6771 	pop	af
   2549 F1                 6772 	pop	af
   254A DD F9              6773 	ld	sp,ix
   254C DD E1              6774 	pop	ix
   254E C9                 6775 	ret
   254F                    6776 _GameObjBat_Draw_end::
                           6777 ;obj_bat.c:112: void GameObjBat_Fire(GameObjBat* this)
                           6778 ;	---------------------------------
                           6779 ; Function GameObjBat_Fire
                           6780 ; ---------------------------------
   254F                    6781 _GameObjBat_Fire_start::
   254F                    6782 _GameObjBat_Fire:
   254F DD E5              6783 	push	ix
   2551 DD 21 00 00        6784 	ld	ix,#0
   2555 DD 39              6785 	add	ix,sp
   2557 F5                 6786 	push	af
   2558 F5                 6787 	push	af
                           6788 ;obj_bat.c:118: if(this->state != NORMAL)
   2559 DD 4E 04           6789 	ld	c,4 (ix)
   255C DD 46 05           6790 	ld	b,5 (ix)
   255F 21 17 00           6791 	ld	hl,#0x0017
   2562 09                 6792 	add	hl,bc
   2563 7E                 6793 	ld	a,(hl)
   2564 B7                 6794 	or	a,a
                           6795 ;obj_bat.c:119: return;
   2565 C2rF8s25           6796 	jp	NZ,00107$
                           6797 ;obj_bat.c:128: if(GameObjBat_IsCanFireWithRocket(this)) {
   2568 C5                 6798 	push	bc
   2569 C5                 6799 	push	bc
   256A CDrFDs25           6800 	call	_GameObjBat_IsCanFireWithRocket
   256D F1                 6801 	pop	af
   256E 5D                 6802 	ld	e,l
   256F C1                 6803 	pop	bc
   2570 AF                 6804 	xor	a,a
   2571 B3                 6805 	or	a,e
   2572 CArF8s25           6806 	jp	Z,00107$
                           6807 ;obj_bat.c:130: new_obj = PoolGameObj_AllocateGameObjRocket();
   2575 C5                 6808 	push	bc
   2576 CDrFEs10           6809 	call	_PoolGameObj_AllocateGameObjRocket
   2579 EB                 6810 	ex	de,hl
   257A C1                 6811 	pop	bc
   257B DD 73 FE           6812 	ld	-2 (ix),e
   257E DD 72 FF           6813 	ld	-1 (ix),d
                           6814 ;obj_bat.c:131: if(new_obj){
   2581 DD 7E FE           6815 	ld	a,-2 (ix)
   2584 DD B6 FF           6816 	or	a,-1 (ix)
   2587 CArE0s25           6817 	jp	Z,00104$
                           6818 ;obj_bat.c:132: GameObjRocket_Init(new_obj, this->gobj.x, this->gobj.y);
   258A 21 03 00           6819 	ld	hl,#0x0003
   258D 09                 6820 	add	hl,bc
   258E 7E                 6821 	ld	a,(hl)
   258F DD 77 FC           6822 	ld	-4 (ix),a
   2592 23                 6823 	inc	hl
   2593 7E                 6824 	ld	a,(hl)
   2594 DD 77 FD           6825 	ld	-3 (ix),a
   2597 69                 6826 	ld	l,c
   2598 60                 6827 	ld	h,b
   2599 23                 6828 	inc	hl
   259A 5E                 6829 	ld	e,(hl)
   259B 23                 6830 	inc	hl
   259C 56                 6831 	ld	d,(hl)
   259D C5                 6832 	push	bc
   259E DD 6E FC           6833 	ld	l,-4 (ix)
   25A1 DD 66 FD           6834 	ld	h,-3 (ix)
   25A4 E5                 6835 	push	hl
   25A5 D5                 6836 	push	de
   25A6 DD 6E FE           6837 	ld	l,-2 (ix)
   25A9 DD 66 FF           6838 	ld	h,-1 (ix)
   25AC E5                 6839 	push	hl
   25AD CDrD7s1C           6840 	call	_GameObjRocket_Init
   25B0 F1                 6841 	pop	af
   25B1 F1                 6842 	pop	af
   25B2 F1                 6843 	pop	af
   25B3 C1                 6844 	pop	bc
                           6845 ;obj_bat.c:134: new_obj->gobj.extra_field1 = (word) this;
   25B4 DD 7E FE           6846 	ld	a,-2 (ix)
   25B7 C6 11              6847 	add	a,#0x11
   25B9 DD 77 FC           6848 	ld	-4 (ix),a
   25BC DD 7E FF           6849 	ld	a,-1 (ix)
   25BF CE 00              6850 	adc	a,#0x00
   25C1 DD 77 FD           6851 	ld	-3 (ix),a
   25C4 DD 5E 04           6852 	ld	e,4 (ix)
   25C7 DD 56 05           6853 	ld	d,5 (ix)
   25CA DD 6E FC           6854 	ld	l,-4 (ix)
   25CD DD 66 FD           6855 	ld	h,-3 (ix)
   25D0 73                 6856 	ld	(hl),e
   25D1 23                 6857 	inc	hl
   25D2 72                 6858 	ld	(hl),d
                           6859 ;obj_bat.c:136: this->rocket = new_obj;
   25D3 21 1C 00           6860 	ld	hl,#0x001C
   25D6 09                 6861 	add	hl,bc
   25D7 DD 7E FE           6862 	ld	a,-2 (ix)
   25DA 77                 6863 	ld	(hl),a
   25DB 23                 6864 	inc	hl
   25DC DD 7E FF           6865 	ld	a,-1 (ix)
   25DF 77                 6866 	ld	(hl),a
   25E0                    6867 00104$:
                           6868 ;obj_bat.c:139: this->pScore->num_rockets--;
   25E0 21 1E 00           6869 	ld	hl,#0x001E
   25E3 09                 6870 	add	hl,bc
   25E4 4E                 6871 	ld	c,(hl)
   25E5 23                 6872 	inc	hl
   25E6 46                 6873 	ld	b,(hl)
   25E7 21 22 00           6874 	ld	hl,#0x0022
   25EA 09                 6875 	add	hl,bc
   25EB 4D                 6876 	ld	c,l
   25EC 44                 6877 	ld	b,h
   25ED 0A                 6878 	ld	a,(bc)
   25EE 3D                 6879 	dec	a
   25EF 02                 6880 	ld	(bc),a
                           6881 ;obj_bat.c:140: Sound_NewFx(SOUND_FX_ROCKET);
   25F0 3E 0B              6882 	ld	a,#0x0B
   25F2 F5                 6883 	push	af
   25F3 33                 6884 	inc	sp
   25F4 CDr00s00           6885 	call	_Sound_NewFx
   25F7 33                 6886 	inc	sp
   25F8                    6887 00107$:
   25F8 DD F9              6888 	ld	sp,ix
   25FA DD E1              6889 	pop	ix
   25FC C9                 6890 	ret
   25FD                    6891 _GameObjBat_Fire_end::
                           6892 ;obj_bat.c:150: BOOL GameObjBat_IsCanFireWithRocket(GameObjBat* this)
                           6893 ;	---------------------------------
                           6894 ; Function GameObjBat_IsCanFireWithRocket
                           6895 ; ---------------------------------
   25FD                    6896 _GameObjBat_IsCanFireWithRocket_start::
   25FD                    6897 _GameObjBat_IsCanFireWithRocket:
   25FD DD E5              6898 	push	ix
   25FF DD 21 00 00        6899 	ld	ix,#0
   2603 DD 39              6900 	add	ix,sp
   2605 F5                 6901 	push	af
                           6902 ;obj_bat.c:154: if(!this->rocket) {
   2606 DD 4E 04           6903 	ld	c,4 (ix)
   2609 DD 46 05           6904 	ld	b,5 (ix)
   260C 21 1C 00           6905 	ld	hl,#0x001C
   260F 09                 6906 	add	hl,bc
   2610 DD 75 FE           6907 	ld	-2 (ix),l
   2613 DD 74 FF           6908 	ld	-1 (ix),h
   2616 5E                 6909 	ld	e,(hl)
   2617 23                 6910 	inc	hl
   2618 56                 6911 	ld	d,(hl)
   2619 7B                 6912 	ld	a,e
   261A B2                 6913 	or	a,d
   261B 20 04              6914 	jr	NZ,00106$
                           6915 ;obj_bat.c:155: isCanFire = TRUE;
   261D 1E 01              6916 	ld	e,#0x01
   261F 18 2C              6917 	jr	00107$
   2621                    6918 00106$:
                           6919 ;obj_bat.c:158: if(GameObj_GetInUse((GameObj*)this->rocket) && (GameObjBat*)this->rocket->gobj.extra_field1 == this)
   2621 C5                 6920 	push	bc
   2622 D5                 6921 	push	de
   2623 CDr47s00           6922 	call	_GameObj_GetInUse
   2626 F1                 6923 	pop	af
   2627 5D                 6924 	ld	e,l
   2628 C1                 6925 	pop	bc
   2629 AF                 6926 	xor	a,a
   262A B3                 6927 	or	a,e
   262B 28 1E              6928 	jr	Z,00102$
   262D DD 6E FE           6929 	ld	l,-2 (ix)
   2630 DD 66 FF           6930 	ld	h,-1 (ix)
   2633 5E                 6931 	ld	e,(hl)
   2634 23                 6932 	inc	hl
   2635 56                 6933 	ld	d,(hl)
   2636 21 11 00           6934 	ld	hl,#0x0011
   2639 19                 6935 	add	hl,de
   263A 5E                 6936 	ld	e,(hl)
   263B 23                 6937 	inc	hl
   263C 56                 6938 	ld	d,(hl)
   263D 7B                 6939 	ld	a,e
   263E 91                 6940 	sub	c
   263F 20 04              6941 	jr	NZ,00116$
   2641 7A                 6942 	ld	a,d
   2642 90                 6943 	sub	b
   2643 28 02              6944 	jr	Z,00117$
   2645                    6945 00116$:
   2645 18 04              6946 	jr	00102$
   2647                    6947 00117$:
                           6948 ;obj_bat.c:159: isCanFire = FALSE;
   2647 1E 00              6949 	ld	e,#0x00
   2649 18 02              6950 	jr	00107$
   264B                    6951 00102$:
                           6952 ;obj_bat.c:161: isCanFire = TRUE;
   264B 1E 01              6953 	ld	e,#0x01
   264D                    6954 00107$:
                           6955 ;obj_bat.c:165: if(this->pScore->num_rockets == 0)
   264D 21 1E 00           6956 	ld	hl,#0x001E
   2650 09                 6957 	add	hl,bc
   2651 4E                 6958 	ld	c,(hl)
   2652 23                 6959 	inc	hl
   2653 46                 6960 	ld	b,(hl)
   2654 21 22 00           6961 	ld	hl,#0x0022
   2657 09                 6962 	add	hl,bc
   2658 7E                 6963 	ld	a,(hl)
                           6964 ;obj_bat.c:166: isCanFire = FALSE;
   2659 B7                 6965 	or	a,a
   265A 20 01              6966 	jr	NZ,00109$
   265C 5F                 6967 	ld	e,a
   265D                    6968 00109$:
                           6969 ;obj_bat.c:169: return isCanFire;
   265D 6B                 6970 	ld	l,e
   265E DD F9              6971 	ld	sp,ix
   2660 DD E1              6972 	pop	ix
   2662 C9                 6973 	ret
   2663                    6974 _GameObjBat_IsCanFireWithRocket_end::
                           6975 ;obj_bat.c:172: void GameObjBat_state_handler(GameObjBat* this)
                           6976 ;	---------------------------------
                           6977 ; Function GameObjBat_state_handler
                           6978 ; ---------------------------------
   2663                    6979 _GameObjBat_state_handler_start::
   2663                    6980 _GameObjBat_state_handler:
   2663 DD E5              6981 	push	ix
   2665 DD 21 00 00        6982 	ld	ix,#0
   2669 DD 39              6983 	add	ix,sp
   266B 3B                 6984 	dec	sp
                           6985 ;obj_bat.c:174: if(this->state == DYING) {
   266C DD 4E 04           6986 	ld	c,4 (ix)
   266F DD 46 05           6987 	ld	b,5 (ix)
   2672 21 17 00           6988 	ld	hl,#0x0017
   2675 09                 6989 	add	hl,bc
   2676 7E                 6990 	ld	a,(hl)
   2677 D6 01              6991 	sub	a,#0x01
   2679 20 1F              6992 	jr	NZ,00105$
                           6993 ;obj_bat.c:175: if(this->dying_time++ >= this->max_dying_time)
   267B 21 19 00           6994 	ld	hl,#0x0019
   267E 09                 6995 	add	hl,bc
   267F EB                 6996 	ex	de,hl
   2680 1A                 6997 	ld	a,(de)
   2681 DD 77 FF           6998 	ld	-1 (ix),a
   2684 3C                 6999 	inc	a
   2685 12                 7000 	ld	(de),a
   2686 21 18 00           7001 	ld	hl,#0x0018
   2689 09                 7002 	add	hl,bc
   268A DD 7E FF           7003 	ld	a,-1 (ix)
   268D 96                 7004 	sub	a,(hl)
   268E 38 0A              7005 	jr	C,00105$
                           7006 ;obj_bat.c:176: GameObjBat_SetState(this, DIE);
   2690 3E 02              7007 	ld	a,#0x02
   2692 F5                 7008 	push	af
   2693 33                 7009 	inc	sp
   2694 C5                 7010 	push	bc
   2695 CDr4Bs23           7011 	call	_GameObjBat_SetState
   2698 F1                 7012 	pop	af
   2699 33                 7013 	inc	sp
   269A                    7014 00105$:
   269A DD F9              7015 	ld	sp,ix
   269C DD E1              7016 	pop	ix
   269E C9                 7017 	ret
   269F                    7018 _GameObjBat_state_handler_end::
                           7019 ;obj_ball.c:10: void GameObjBall_Init(GameObjBall* this)
                           7020 ;	---------------------------------
                           7021 ; Function GameObjBall_Init
                           7022 ; ---------------------------------
   269F                    7023 _GameObjBall_Init_start::
   269F                    7024 _GameObjBall_Init:
   269F DD E5              7025 	push	ix
   26A1 DD 21 00 00        7026 	ld	ix,#0
   26A5 DD 39              7027 	add	ix,sp
   26A7 F5                 7028 	push	af
   26A8 F5                 7029 	push	af
                           7030 ;obj_ball.c:14: GameObj_Init((GameObj*)this);
   26A9 DD 4E 04           7031 	ld	c,4 (ix)
   26AC DD 46 05           7032 	ld	b,5 (ix)
   26AF C5                 7033 	push	bc
   26B0 CDr55s13           7034 	call	_GameObj_Init
   26B3 F1                 7035 	pop	af
                           7036 ;obj_ball.c:16: GameObjBall_SetState(this, NORMAL);
   26B4 3E 00              7037 	ld	a,#0x00
   26B6 F5                 7038 	push	af
   26B7 33                 7039 	inc	sp
   26B8 DD 6E 04           7040 	ld	l,4 (ix)
   26BB DD 66 05           7041 	ld	h,5 (ix)
   26BE E5                 7042 	push	hl
   26BF CDrF6s27           7043 	call	_GameObjBall_SetState
   26C2 F1                 7044 	pop	af
   26C3 33                 7045 	inc	sp
                           7046 ;obj_ball.c:18: this->max_dying_time = 50;
   26C4 DD 4E 04           7047 	ld	c,4 (ix)
   26C7 DD 46 05           7048 	ld	b,5 (ix)
   26CA 21 1E 00           7049 	ld	hl,#0x001E
   26CD 09                 7050 	add	hl,bc
   26CE EB                 7051 	ex	de,hl
   26CF 3E 32              7052 	ld	a,#0x32
   26D1 12                 7053 	ld	(de),a
                           7054 ;obj_ball.c:19: this->dying_time = 0;
   26D2 21 1F 00           7055 	ld	hl,#0x001F
   26D5 09                 7056 	add	hl,bc
   26D6 EB                 7057 	ex	de,hl
   26D7 3E 00              7058 	ld	a,#0x00
   26D9 12                 7059 	ld	(de),a
                           7060 ;obj_ball.c:21: this->radius = 3;
   26DA 21 17 00           7061 	ld	hl,#0x0017
   26DD 09                 7062 	add	hl,bc
   26DE 36 03              7063 	ld	(hl),#0x03
   26E0 23                 7064 	inc	hl
   26E1 36 00              7065 	ld	(hl),#0x00
                           7066 ;obj_ball.c:22: this->speedx = 2;
   26E3 21 19 00           7067 	ld	hl,#0x0019
   26E6 09                 7068 	add	hl,bc
   26E7 DD 75 FE           7069 	ld	-2 (ix),l
   26EA DD 74 FF           7070 	ld	-1 (ix),h
   26ED 36 02              7071 	ld	(hl),#0x02
   26EF 23                 7072 	inc	hl
   26F0 36 00              7073 	ld	(hl),#0x00
                           7074 ;obj_ball.c:23: srand((int) GetR()*256 + (~GetR()) ); // Seed rand a random number
   26F2 C5                 7075 	push	bc
   26F3 CDrE6s02           7076 	call	_GetR
   26F6 5D                 7077 	ld	e,l
   26F7 C1                 7078 	pop	bc
   26F8 DD 73 FD           7079 	ld	-3 (ix),e
   26FB DD 36 FC 00        7080 	ld	-4 (ix),#0x00
   26FF C5                 7081 	push	bc
   2700 CDrE6s02           7082 	call	_GetR
   2703 5D                 7083 	ld	e,l
   2704 C1                 7084 	pop	bc
   2705 16 00              7085 	ld	d,#0x00
   2707 7B                 7086 	ld	a,e
   2708 2F                 7087 	cpl
   2709 5F                 7088 	ld	e,a
   270A 7A                 7089 	ld	a,d
   270B 2F                 7090 	cpl
   270C 57                 7091 	ld	d,a
   270D DD 7E FC           7092 	ld	a,-4 (ix)
   2710 83                 7093 	add	a,e
   2711 5F                 7094 	ld	e,a
   2712 DD 7E FD           7095 	ld	a,-3 (ix)
   2715 8A                 7096 	adc	a,d
   2716 57                 7097 	ld	d,a
   2717 C5                 7098 	push	bc
   2718 D5                 7099 	push	de
   2719 CDr00s00           7100 	call	_srand
   271C F1                 7101 	pop	af
   271D C1                 7102 	pop	bc
                           7103 ;obj_ball.c:24: this->speedy = rand ()%1;// Sets speed from 0 to 2 depending upon remainder.
   271E 21 1B 00           7104 	ld	hl,#0x001B
   2721 09                 7105 	add	hl,bc
   2722 DD 75 FC           7106 	ld	-4 (ix),l
   2725 DD 74 FD           7107 	ld	-3 (ix),h
   2728 C5                 7108 	push	bc
   2729 CDr00s00           7109 	call	_rand
   272C EB                 7110 	ex	de,hl
   272D C1                 7111 	pop	bc
   272E C5                 7112 	push	bc
   272F 21 01 00           7113 	ld	hl,#0x0001
   2732 E5                 7114 	push	hl
   2733 D5                 7115 	push	de
   2734 CDr00s00           7116 	call	__modsint_rrx_s
   2737 F1                 7117 	pop	af
   2738 F1                 7118 	pop	af
   2739 EB                 7119 	ex	de,hl
   273A C1                 7120 	pop	bc
   273B DD 6E FC           7121 	ld	l,-4 (ix)
   273E DD 66 FD           7122 	ld	h,-3 (ix)
   2741 73                 7123 	ld	(hl),e
   2742 23                 7124 	inc	hl
   2743 72                 7125 	ld	(hl),d
                           7126 ;obj_ball.c:25: if (rand() % 2 == 0)
   2744 C5                 7127 	push	bc
   2745 CDr00s00           7128 	call	_rand
   2748 EB                 7129 	ex	de,hl
   2749 C1                 7130 	pop	bc
   274A C5                 7131 	push	bc
   274B 21 02 00           7132 	ld	hl,#0x0002
   274E E5                 7133 	push	hl
   274F D5                 7134 	push	de
   2750 CDr00s00           7135 	call	__modsint_rrx_s
   2753 F1                 7136 	pop	af
   2754 F1                 7137 	pop	af
   2755 EB                 7138 	ex	de,hl
   2756 C1                 7139 	pop	bc
   2757 7B                 7140 	ld	a,e
   2758 B2                 7141 	or	a,d
   2759 20 32              7142 	jr	NZ,00102$
                           7143 ;obj_ball.c:27: this->speedx = - this->speedx; // Generate Random X direction.
   275B DD 6E FE           7144 	ld	l,-2 (ix)
   275E DD 66 FF           7145 	ld	h,-1 (ix)
   2761 5E                 7146 	ld	e,(hl)
   2762 23                 7147 	inc	hl
   2763 56                 7148 	ld	d,(hl)
   2764 AF                 7149 	xor	a,a
   2765 9B                 7150 	sbc	a,e
   2766 5F                 7151 	ld	e,a
   2767 3E 00              7152 	ld	a,#0x00
   2769 9A                 7153 	sbc	a,d
   276A 57                 7154 	ld	d,a
   276B DD 6E FE           7155 	ld	l,-2 (ix)
   276E DD 66 FF           7156 	ld	h,-1 (ix)
   2771 73                 7157 	ld	(hl),e
   2772 23                 7158 	inc	hl
   2773 72                 7159 	ld	(hl),d
                           7160 ;obj_ball.c:28: this->speedy = - this->speedy; // Generate Random Y direction.
   2774 DD 6E FC           7161 	ld	l,-4 (ix)
   2777 DD 66 FD           7162 	ld	h,-3 (ix)
   277A 5E                 7163 	ld	e,(hl)
   277B 23                 7164 	inc	hl
   277C 56                 7165 	ld	d,(hl)
   277D AF                 7166 	xor	a,a
   277E 9B                 7167 	sbc	a,e
   277F 5F                 7168 	ld	e,a
   2780 3E 00              7169 	ld	a,#0x00
   2782 9A                 7170 	sbc	a,d
   2783 57                 7171 	ld	d,a
   2784 DD 6E FC           7172 	ld	l,-4 (ix)
   2787 DD 66 FD           7173 	ld	h,-3 (ix)
   278A 73                 7174 	ld	(hl),e
   278B 23                 7175 	inc	hl
   278C 72                 7176 	ld	(hl),d
   278D                    7177 00102$:
                           7178 ;obj_ball.c:31: this->gobj.x = 320/2;
   278D 69                 7179 	ld	l,c
   278E 60                 7180 	ld	h,b
   278F 23                 7181 	inc	hl
   2790 36 A0              7182 	ld	(hl),#0xA0
   2792 23                 7183 	inc	hl
   2793 36 00              7184 	ld	(hl),#0x00
                           7185 ;obj_ball.c:32: this->gobj.y = 250/2;
   2795 21 03 00           7186 	ld	hl,#0x0003
   2798 09                 7187 	add	hl,bc
   2799 36 7D              7188 	ld	(hl),#0x7D
   279B 23                 7189 	inc	hl
   279C 36 00              7190 	ld	(hl),#0x00
                           7191 ;obj_ball.c:34: this->gobj.pMoveFunc = &GameObjBall_Move;
   279E 21 13 00           7192 	ld	hl,#0x0013
   27A1 09                 7193 	add	hl,bc
   27A2 5D                 7194 	ld	e,l
   27A3 36r7B              7195 	ld	(hl),#<_GameObjBall_Move
   27A5 23                 7196 	inc	hl
   27A6 36s28              7197 	ld	(hl),#>_GameObjBall_Move
                           7198 ;obj_ball.c:35: this->gobj.pDrawFunc = &GameObjBall_Draw;
   27A8 21 15 00           7199 	ld	hl,#0x0015
   27AB 09                 7200 	add	hl,bc
   27AC 5D                 7201 	ld	e,l
   27AD 54                 7202 	ld	d,h
   27AE 36rFE              7203 	ld	(hl),#<_GameObjBall_Draw
   27B0 23                 7204 	inc	hl
   27B1 36s2B              7205 	ld	(hl),#>_GameObjBall_Draw
                           7206 ;obj_ball.c:39: this->gobj.col_x_offset = this->gobj.col_y_offset = this->gobj.col_width = this->gobj.col_height = 0;
   27B3 21 0D 00           7207 	ld	hl,#0x000D
   27B6 09                 7208 	add	hl,bc
   27B7 DD 75 FC           7209 	ld	-4 (ix),l
   27BA DD 74 FD           7210 	ld	-3 (ix),h
   27BD 21 0F 00           7211 	ld	hl,#0x000F
   27C0 09                 7212 	add	hl,bc
   27C1 DD 75 FE           7213 	ld	-2 (ix),l
   27C4 DD 74 FF           7214 	ld	-1 (ix),h
   27C7 21 09 00           7215 	ld	hl,#0x0009
   27CA 09                 7216 	add	hl,bc
   27CB EB                 7217 	ex	de,hl
   27CC 21 0B 00           7218 	ld	hl,#0x000B
   27CF 09                 7219 	add	hl,bc
   27D0 36 00              7220 	ld	(hl),#0x00
   27D2 23                 7221 	inc	hl
   27D3 36 00              7222 	ld	(hl),#0x00
   27D5 EB                 7223 	ex	de,hl
   27D6 36 00              7224 	ld	(hl),#0x00
   27D8 23                 7225 	inc	hl
   27D9 36 00              7226 	ld	(hl),#0x00
   27DB DD 6E FE           7227 	ld	l,-2 (ix)
   27DE DD 66 FF           7228 	ld	h,-1 (ix)
   27E1 36 00              7229 	ld	(hl),#0x00
   27E3 23                 7230 	inc	hl
   27E4 36 00              7231 	ld	(hl),#0x00
   27E6 DD 6E FC           7232 	ld	l,-4 (ix)
   27E9 DD 66 FD           7233 	ld	h,-3 (ix)
   27EC 36 00              7234 	ld	(hl),#0x00
   27EE 23                 7235 	inc	hl
   27EF 36 00              7236 	ld	(hl),#0x00
   27F1 DD F9              7237 	ld	sp,ix
   27F3 DD E1              7238 	pop	ix
   27F5 C9                 7239 	ret
   27F6                    7240 _GameObjBall_Init_end::
                           7241 ;obj_ball.c:42: void GameObjBall_SetState(GameObjBall* this, ObjState state)
                           7242 ;	---------------------------------
                           7243 ; Function GameObjBall_SetState
                           7244 ; ---------------------------------
   27F6                    7245 _GameObjBall_SetState_start::
   27F6                    7246 _GameObjBall_SetState:
   27F6 DD E5              7247 	push	ix
   27F8 DD 21 00 00        7248 	ld	ix,#0
   27FC DD 39              7249 	add	ix,sp
                           7250 ;obj_ball.c:44: if(state == this->state)
   27FE DD 4E 04           7251 	ld	c,4 (ix)
   2801 DD 46 05           7252 	ld	b,5 (ix)
   2804 21 1D 00           7253 	ld	hl,#0x001D
   2807 09                 7254 	add	hl,bc
   2808 4D                 7255 	ld	c,l
   2809 44                 7256 	ld	b,h
   280A 0A                 7257 	ld	a,(bc)
   280B 5F                 7258 	ld	e,a
   280C DD 7E 06           7259 	ld	a,6 (ix)
   280F 93                 7260 	sub	e
   2810 20 03              7261 	jr	NZ,00102$
                           7262 ;obj_ball.c:45: return;
   2812 C3r78s28           7263 	jp	00111$
   2815                    7264 00102$:
                           7265 ;obj_ball.c:46: this->state = state;
   2815 DD 7E 06           7266 	ld	a,6 (ix)
   2818 02                 7267 	ld	(bc),a
                           7268 ;obj_ball.c:48: if(state == DIE){
   2819 DD 7E 06           7269 	ld	a,6 (ix)
   281C D6 02              7270 	sub	a,#0x02
   281E C2r69s28           7271 	jp	NZ,00108$
                           7272 ;obj_ball.c:49: if(scoreA.score >= MAX_SCORE_FOR_LEVEL) {
   2821 21r19s02           7273 	ld	hl, #_scoreA + 24
   2824 4E                 7274 	ld	c,(hl)
   2825 23                 7275 	inc	hl
   2826 46                 7276 	ld	b,(hl)
   2827 79                 7277 	ld	a,c
   2828 D6 0A              7278 	sub	a,#0x0A
   282A 78                 7279 	ld	a,b
   282B DE 00              7280 	sbc	a,#0x00
   282D FAr3Ds28           7281 	jp	M,00104$
                           7282 ;obj_ball.c:50: GameObjBat_SetState(&batB, DYING);
   2830 3E 01              7283 	ld	a,#0x01
   2832 F5                 7284 	push	af
   2833 33                 7285 	inc	sp
   2834 21r67s02           7286 	ld	hl,#_batB
   2837 E5                 7287 	push	hl
   2838 CDr4Bs23           7288 	call	_GameObjBat_SetState
   283B F1                 7289 	pop	af
   283C 33                 7290 	inc	sp
   283D                    7291 00104$:
                           7292 ;obj_ball.c:53: if(scoreB.score >= MAX_SCORE_FOR_LEVEL) {
   283D 21r3Cs02           7293 	ld	hl, #_scoreB + 24
   2840 4E                 7294 	ld	c,(hl)
   2841 23                 7295 	inc	hl
   2842 46                 7296 	ld	b,(hl)
   2843 79                 7297 	ld	a,c
   2844 D6 0A              7298 	sub	a,#0x0A
   2846 78                 7299 	ld	a,b
   2847 DE 00              7300 	sbc	a,#0x00
   2849 FAr59s28           7301 	jp	M,00106$
                           7302 ;obj_ball.c:54: GameObjBat_SetState(&batA, DYING);
   284C 3E 01              7303 	ld	a,#0x01
   284E F5                 7304 	push	af
   284F 33                 7305 	inc	sp
   2850 21r47s02           7306 	ld	hl,#_batA
   2853 E5                 7307 	push	hl
   2854 CDr4Bs23           7308 	call	_GameObjBat_SetState
   2857 F1                 7309 	pop	af
   2858 33                 7310 	inc	sp
   2859                    7311 00106$:
                           7312 ;obj_ball.c:58: GameObjScore_SetState(game.pScore_to_blink, BLINKING);
   2859 21rF2s02           7313 	ld	hl, #_game + 10
   285C 4E                 7314 	ld	c,(hl)
   285D 23                 7315 	inc	hl
   285E 46                 7316 	ld	b,(hl)
   285F 3E 03              7317 	ld	a,#0x03
   2861 F5                 7318 	push	af
   2862 33                 7319 	inc	sp
   2863 C5                 7320 	push	bc
   2864 CDr58s1B           7321 	call	_GameObjScore_SetState
   2867 F1                 7322 	pop	af
   2868 33                 7323 	inc	sp
   2869                    7324 00108$:
                           7325 ;obj_ball.c:61: if(state == DYING) {
   2869 DD 7E 06           7326 	ld	a,6 (ix)
   286C D6 01              7327 	sub	a,#0x01
   286E 20 08              7328 	jr	NZ,00111$
                           7329 ;obj_ball.c:62: Sound_NewFx(SOUND_FX_CRUNCH);
   2870 3E 04              7330 	ld	a,#0x04
   2872 F5                 7331 	push	af
   2873 33                 7332 	inc	sp
   2874 CDr00s00           7333 	call	_Sound_NewFx
   2877 33                 7334 	inc	sp
   2878                    7335 00111$:
   2878 DD E1              7336 	pop	ix
   287A C9                 7337 	ret
   287B                    7338 _GameObjBall_SetState_end::
                           7339 ;obj_ball.c:67: void GameObjBall_Move(GameObjBall* this)
                           7340 ;	---------------------------------
                           7341 ; Function GameObjBall_Move
                           7342 ; ---------------------------------
   287B                    7343 _GameObjBall_Move_start::
   287B                    7344 _GameObjBall_Move:
   287B DD E5              7345 	push	ix
   287D DD 21 00 00        7346 	ld	ix,#0
   2881 DD 39              7347 	add	ix,sp
   2883 21 F5 FF           7348 	ld	hl,#-11
   2886 39                 7349 	add	hl,sp
   2887 F9                 7350 	ld	sp,hl
                           7351 ;obj_ball.c:69: if(this->state == DYING) {
   2888 DD 4E 04           7352 	ld	c,4 (ix)
   288B DD 46 05           7353 	ld	b,5 (ix)
   288E 21 1D 00           7354 	ld	hl,#0x001D
   2891 09                 7355 	add	hl,bc
   2892 DD 75 FE           7356 	ld	-2 (ix),l
   2895 DD 74 FF           7357 	ld	-1 (ix),h
   2898 7E                 7358 	ld	a,(hl)
   2899 D6 01              7359 	sub	a,#0x01
   289B 20 21              7360 	jr	NZ,00104$
                           7361 ;obj_ball.c:70: if(this->dying_time++ >= this->max_dying_time)
   289D 21 1F 00           7362 	ld	hl,#0x001F
   28A0 09                 7363 	add	hl,bc
   28A1 EB                 7364 	ex	de,hl
   28A2 1A                 7365 	ld	a,(de)
   28A3 DD 77 FB           7366 	ld	-5 (ix),a
   28A6 3C                 7367 	inc	a
   28A7 12                 7368 	ld	(de),a
   28A8 21 1E 00           7369 	ld	hl,#0x001E
   28AB 09                 7370 	add	hl,bc
   28AC DD 7E FB           7371 	ld	a,-5 (ix)
   28AF 96                 7372 	sub	a,(hl)
   28B0 38 0C              7373 	jr	C,00104$
                           7374 ;obj_ball.c:71: GameObjBall_SetState(this, DIE);
   28B2 C5                 7375 	push	bc
   28B3 3E 02              7376 	ld	a,#0x02
   28B5 F5                 7377 	push	af
   28B6 33                 7378 	inc	sp
   28B7 C5                 7379 	push	bc
   28B8 CDrF6s27           7380 	call	_GameObjBall_SetState
   28BB F1                 7381 	pop	af
   28BC 33                 7382 	inc	sp
   28BD C1                 7383 	pop	bc
   28BE                    7384 00104$:
                           7385 ;obj_ball.c:77: if(this->state != NORMAL)
   28BE DD 6E FE           7386 	ld	l,-2 (ix)
   28C1 DD 66 FF           7387 	ld	h,-1 (ix)
   28C4 7E                 7388 	ld	a,(hl)
   28C5 B7                 7389 	or	a,a
                           7390 ;obj_ball.c:78: return;
   28C6 C2rBFs29           7391 	jp	NZ,00111$
                           7392 ;obj_ball.c:80: this->gobj.x += this->speedx;
   28C9 21 01 00           7393 	ld	hl,#0x0001
   28CC 09                 7394 	add	hl,bc
   28CD DD 75 FC           7395 	ld	-4 (ix),l
   28D0 DD 74 FD           7396 	ld	-3 (ix),h
   28D3 7E                 7397 	ld	a,(hl)
   28D4 DD 77 FE           7398 	ld	-2 (ix),a
   28D7 23                 7399 	inc	hl
   28D8 7E                 7400 	ld	a,(hl)
   28D9 DD 77 FF           7401 	ld	-1 (ix),a
   28DC 21 19 00           7402 	ld	hl,#0x0019
   28DF 09                 7403 	add	hl,bc
   28E0 5E                 7404 	ld	e,(hl)
   28E1 23                 7405 	inc	hl
   28E2 56                 7406 	ld	d,(hl)
   28E3 DD 7E FE           7407 	ld	a,-2 (ix)
   28E6 83                 7408 	add	a,e
   28E7 5F                 7409 	ld	e,a
   28E8 DD 7E FF           7410 	ld	a,-1 (ix)
   28EB 8A                 7411 	adc	a,d
   28EC 57                 7412 	ld	d,a
   28ED DD 6E FC           7413 	ld	l,-4 (ix)
   28F0 DD 66 FD           7414 	ld	h,-3 (ix)
   28F3 73                 7415 	ld	(hl),e
   28F4 23                 7416 	inc	hl
   28F5 72                 7417 	ld	(hl),d
                           7418 ;obj_ball.c:81: this->gobj.y += this->speedy;
   28F6 21 03 00           7419 	ld	hl,#0x0003
   28F9 09                 7420 	add	hl,bc
   28FA DD 75 FC           7421 	ld	-4 (ix),l
   28FD DD 74 FD           7422 	ld	-3 (ix),h
   2900 5E                 7423 	ld	e,(hl)
   2901 23                 7424 	inc	hl
   2902 56                 7425 	ld	d,(hl)
   2903 21 1B 00           7426 	ld	hl,#0x001B
   2906 09                 7427 	add	hl,bc
   2907 DD 75 FE           7428 	ld	-2 (ix),l
   290A DD 74 FF           7429 	ld	-1 (ix),h
   290D 7E                 7430 	ld	a,(hl)
   290E DD 77 F9           7431 	ld	-7 (ix),a
   2911 23                 7432 	inc	hl
   2912 7E                 7433 	ld	a,(hl)
   2913 DD 77 FA           7434 	ld	-6 (ix),a
   2916 7B                 7435 	ld	a,e
   2917 DD 86 F9           7436 	add	a,-7 (ix)
   291A DD 77 F5           7437 	ld	-11 (ix),a
   291D 7A                 7438 	ld	a,d
   291E DD 8E FA           7439 	adc	a,-6 (ix)
   2921 DD 77 F6           7440 	ld	-10 (ix),a
   2924 DD 6E FC           7441 	ld	l,-4 (ix)
   2927 DD 66 FD           7442 	ld	h,-3 (ix)
   292A DD 7E F5           7443 	ld	a,-11 (ix)
   292D 77                 7444 	ld	(hl),a
   292E 23                 7445 	inc	hl
   292F DD 7E F6           7446 	ld	a,-10 (ix)
   2932 77                 7447 	ld	(hl),a
                           7448 ;obj_ball.c:83: if ( this->gobj.y - this->radius < 0 ) {
   2933 21 17 00           7449 	ld	hl,#0x0017
   2936 09                 7450 	add	hl,bc
   2937 DD 75 F7           7451 	ld	-9 (ix),l
   293A DD 74 F8           7452 	ld	-8 (ix),h
   293D 5E                 7453 	ld	e,(hl)
   293E 23                 7454 	inc	hl
   293F 56                 7455 	ld	d,(hl)
   2940 DD 7E F5           7456 	ld	a,-11 (ix)
   2943 93                 7457 	sub	a,e
   2944 5F                 7458 	ld	e,a
   2945 DD 7E F6           7459 	ld	a,-10 (ix)
   2948 9A                 7460 	sbc	a,d
   2949 57                 7461 	ld	d,a
   294A CB 7F              7462 	bit	7,a
   294C 28 1E              7463 	jr	Z,00108$
                           7464 ;obj_ball.c:84: this->speedy = -this->speedy; // Reflect From Top
   294E AF                 7465 	xor	a,a
   294F DD 9E F9           7466 	sbc	a,-7 (ix)
   2952 5F                 7467 	ld	e,a
   2953 3E 00              7468 	ld	a,#0x00
   2955 DD 9E FA           7469 	sbc	a,-6 (ix)
   2958 57                 7470 	ld	d,a
   2959 DD 6E FE           7471 	ld	l,-2 (ix)
   295C DD 66 FF           7472 	ld	h,-1 (ix)
   295F 73                 7473 	ld	(hl),e
   2960 23                 7474 	inc	hl
   2961 72                 7475 	ld	(hl),d
                           7476 ;obj_ball.c:85: Sound_NewFx(SOUND_FX_BOUNCE);
   2962 C5                 7477 	push	bc
   2963 3E 03              7478 	ld	a,#0x03
   2965 F5                 7479 	push	af
   2966 33                 7480 	inc	sp
   2967 CDr00s00           7481 	call	_Sound_NewFx
   296A 33                 7482 	inc	sp
   296B C1                 7483 	pop	bc
   296C                    7484 00108$:
                           7485 ;obj_ball.c:87: if ( this->gobj.y + this->radius > GAME_FIELD_MAX_SCREEN_Y ) {
   296C DD 6E FC           7486 	ld	l,-4 (ix)
   296F DD 66 FD           7487 	ld	h,-3 (ix)
   2972 7E                 7488 	ld	a,(hl)
   2973 DD 77 F5           7489 	ld	-11 (ix),a
   2976 23                 7490 	inc	hl
   2977 7E                 7491 	ld	a,(hl)
   2978 DD 77 F6           7492 	ld	-10 (ix),a
   297B DD 6E F7           7493 	ld	l,-9 (ix)
   297E DD 66 F8           7494 	ld	h,-8 (ix)
   2981 5E                 7495 	ld	e,(hl)
   2982 23                 7496 	inc	hl
   2983 56                 7497 	ld	d,(hl)
   2984 DD 7E F5           7498 	ld	a,-11 (ix)
   2987 83                 7499 	add	a,e
   2988 5F                 7500 	ld	e,a
   2989 DD 7E F6           7501 	ld	a,-10 (ix)
   298C 8A                 7502 	adc	a,d
   298D 57                 7503 	ld	d,a
   298E 3E F0              7504 	ld	a,#0xF0
   2990 93                 7505 	sub	a,e
   2991 3E 00              7506 	ld	a,#0x00
   2993 9A                 7507 	sbc	a,d
   2994 F2rBAs29           7508 	jp	P,00110$
                           7509 ;obj_ball.c:88: this->speedy = -this->speedy; // Reflect From Bottom
   2997 DD 6E FE           7510 	ld	l,-2 (ix)
   299A DD 66 FF           7511 	ld	h,-1 (ix)
   299D 5E                 7512 	ld	e,(hl)
   299E 23                 7513 	inc	hl
   299F 56                 7514 	ld	d,(hl)
   29A0 AF                 7515 	xor	a,a
   29A1 9B                 7516 	sbc	a,e
   29A2 5F                 7517 	ld	e,a
   29A3 3E 00              7518 	ld	a,#0x00
   29A5 9A                 7519 	sbc	a,d
   29A6 57                 7520 	ld	d,a
   29A7 DD 6E FE           7521 	ld	l,-2 (ix)
   29AA DD 66 FF           7522 	ld	h,-1 (ix)
   29AD 73                 7523 	ld	(hl),e
   29AE 23                 7524 	inc	hl
   29AF 72                 7525 	ld	(hl),d
                           7526 ;obj_ball.c:89: Sound_NewFx(SOUND_FX_BOUNCE);
   29B0 C5                 7527 	push	bc
   29B1 3E 03              7528 	ld	a,#0x03
   29B3 F5                 7529 	push	af
   29B4 33                 7530 	inc	sp
   29B5 CDr00s00           7531 	call	_Sound_NewFx
   29B8 33                 7532 	inc	sp
   29B9 C1                 7533 	pop	bc
   29BA                    7534 00110$:
                           7535 ;obj_ball.c:92: GameObjBall_CheckCollision(this);
   29BA C5                 7536 	push	bc
   29BB CDrC4s29           7537 	call	_GameObjBall_CheckCollision
   29BE F1                 7538 	pop	af
   29BF                    7539 00111$:
   29BF DD F9              7540 	ld	sp,ix
   29C1 DD E1              7541 	pop	ix
   29C3 C9                 7542 	ret
   29C4                    7543 _GameObjBall_Move_end::
                           7544 ;obj_ball.c:97: void GameObjBall_CheckCollision(GameObjBall* this)
                           7545 ;	---------------------------------
                           7546 ; Function GameObjBall_CheckCollision
                           7547 ; ---------------------------------
   29C4                    7548 _GameObjBall_CheckCollision_start::
   29C4                    7549 _GameObjBall_CheckCollision:
   29C4 DD E5              7550 	push	ix
   29C6 DD 21 00 00        7551 	ld	ix,#0
   29CA DD 39              7552 	add	ix,sp
   29CC 21 F8 FF           7553 	ld	hl,#-8
   29CF 39                 7554 	add	hl,sp
   29D0 F9                 7555 	ld	sp,hl
                           7556 ;obj_ball.c:99: if(this->state != NORMAL)
   29D1 DD 4E 04           7557 	ld	c,4 (ix)
   29D4 DD 46 05           7558 	ld	b,5 (ix)
   29D7 21 1D 00           7559 	ld	hl,#0x001D
   29DA 09                 7560 	add	hl,bc
   29DB 7E                 7561 	ld	a,(hl)
   29DC B7                 7562 	or	a,a
                           7563 ;obj_ball.c:100: return;
   29DD C2rF9s2B           7564 	jp	NZ,00121$
                           7565 ;obj_ball.c:102: if ( this->gobj.x - this->radius <= GAME_FIELD_X_BORDER)
   29E0 69                 7566 	ld	l,c
   29E1 60                 7567 	ld	h,b
   29E2 23                 7568 	inc	hl
   29E3 7E                 7569 	ld	a,(hl)
   29E4 DD 77 FE           7570 	ld	-2 (ix),a
   29E7 23                 7571 	inc	hl
   29E8 7E                 7572 	ld	a,(hl)
   29E9 DD 77 FF           7573 	ld	-1 (ix),a
   29EC 21 17 00           7574 	ld	hl,#0x0017
   29EF 09                 7575 	add	hl,bc
   29F0 7E                 7576 	ld	a,(hl)
   29F1 DD 77 FC           7577 	ld	-4 (ix),a
   29F4 23                 7578 	inc	hl
   29F5 7E                 7579 	ld	a,(hl)
   29F6 DD 77 FD           7580 	ld	-3 (ix),a
   29F9 DD 7E FE           7581 	ld	a,-2 (ix)
   29FC DD 96 FC           7582 	sub	a,-4 (ix)
   29FF 5F                 7583 	ld	e,a
   2A00 DD 7E FF           7584 	ld	a,-1 (ix)
   2A03 DD 9E FD           7585 	sbc	a,-3 (ix)
   2A06 57                 7586 	ld	d,a
   2A07 3E 0A              7587 	ld	a,#0x0A
   2A09 93                 7588 	sub	a,e
   2A0A 3E 00              7589 	ld	a,#0x00
   2A0C 9A                 7590 	sbc	a,d
   2A0D FArFBs2A           7591 	jp	M,00111$
                           7592 ;obj_ball.c:104: if (this->gobj.y > batA.gobj.y && this->gobj.y < batA.gobj.y+batA.gobj.height && batA.state == NORMAL)
   2A10 21 03 00           7593 	ld	hl,#0x0003
   2A13 09                 7594 	add	hl,bc
   2A14 7E                 7595 	ld	a,(hl)
   2A15 DD 77 FA           7596 	ld	-6 (ix),a
   2A18 23                 7597 	inc	hl
   2A19 7E                 7598 	ld	a,(hl)
   2A1A DD 77 FB           7599 	ld	-5 (ix),a
   2A1D 11r4As02           7600 	ld	de,#_batA + 3
   2A20 EB                 7601 	ex	de,hl
   2A21 7E                 7602 	ld	a,(hl)
   2A22 DD 77 F8           7603 	ld	-8 (ix),a
   2A25 23                 7604 	inc	hl
   2A26 7E                 7605 	ld	a,(hl)
   2A27 DD 77 F9           7606 	ld	-7 (ix),a
   2A2A DD 7E F8           7607 	ld	a,-8 (ix)
   2A2D DD 96 FA           7608 	sub	a,-6 (ix)
   2A30 DD 7E F9           7609 	ld	a,-7 (ix)
   2A33 DD 9E FB           7610 	sbc	a,-5 (ix)
   2A36 F2rD2s2A           7611 	jp	P,00106$
   2A39 11r4Es02           7612 	ld	de,#_batA + 7
   2A3C EB                 7613 	ex	de,hl
   2A3D 5E                 7614 	ld	e,(hl)
   2A3E 23                 7615 	inc	hl
   2A3F 56                 7616 	ld	d,(hl)
   2A40 DD 7E F8           7617 	ld	a,-8 (ix)
   2A43 83                 7618 	add	a,e
   2A44 5F                 7619 	ld	e,a
   2A45 DD 7E F9           7620 	ld	a,-7 (ix)
   2A48 8A                 7621 	adc	a,d
   2A49 57                 7622 	ld	d,a
   2A4A DD 7E FA           7623 	ld	a,-6 (ix)
   2A4D 93                 7624 	sub	a,e
   2A4E DD 7E FB           7625 	ld	a,-5 (ix)
   2A51 9A                 7626 	sbc	a,d
   2A52 F2rD2s2A           7627 	jp	P,00106$
   2A55 11r5Es02           7628 	ld	de,#_batA + 23
   2A58 1A                 7629 	ld	a,(de)
   2A59 B7                 7630 	or	a,a
   2A5A C2rD2s2A           7631 	jp	NZ,00106$
                           7632 ;obj_ball.c:106: this->speedx = - this->speedx;
   2A5D 21 19 00           7633 	ld	hl,#0x0019
   2A60 09                 7634 	add	hl,bc
   2A61 DD 75 F8           7635 	ld	-8 (ix),l
   2A64 DD 74 F9           7636 	ld	-7 (ix),h
   2A67 5E                 7637 	ld	e,(hl)
   2A68 23                 7638 	inc	hl
   2A69 56                 7639 	ld	d,(hl)
   2A6A AF                 7640 	xor	a,a
   2A6B 9B                 7641 	sbc	a,e
   2A6C 5F                 7642 	ld	e,a
   2A6D 3E 00              7643 	ld	a,#0x00
   2A6F 9A                 7644 	sbc	a,d
   2A70 57                 7645 	ld	d,a
   2A71 DD 6E F8           7646 	ld	l,-8 (ix)
   2A74 DD 66 F9           7647 	ld	h,-7 (ix)
   2A77 73                 7648 	ld	(hl),e
   2A78 23                 7649 	inc	hl
   2A79 72                 7650 	ld	(hl),d
                           7651 ;obj_ball.c:107: this->speedy = rand () % 3;// Sets speed from depending upon remainder.
   2A7A 21 1B 00           7652 	ld	hl,#0x001B
   2A7D 09                 7653 	add	hl,bc
   2A7E DD 75 F8           7654 	ld	-8 (ix),l
   2A81 DD 74 F9           7655 	ld	-7 (ix),h
   2A84 CDr00s00           7656 	call	_rand
   2A87 EB                 7657 	ex	de,hl
   2A88 21 03 00           7658 	ld	hl,#0x0003
   2A8B E5                 7659 	push	hl
   2A8C D5                 7660 	push	de
   2A8D CDr00s00           7661 	call	__modsint_rrx_s
   2A90 F1                 7662 	pop	af
   2A91 F1                 7663 	pop	af
   2A92 EB                 7664 	ex	de,hl
   2A93 DD 6E F8           7665 	ld	l,-8 (ix)
   2A96 DD 66 F9           7666 	ld	h,-7 (ix)
   2A99 73                 7667 	ld	(hl),e
   2A9A 23                 7668 	inc	hl
   2A9B 72                 7669 	ld	(hl),d
                           7670 ;obj_ball.c:108: if (rand() % 2 == 0) this->speedy = - this->speedy; // Generate Random Y direction.
   2A9C CDr00s00           7671 	call	_rand
   2A9F EB                 7672 	ex	de,hl
   2AA0 21 02 00           7673 	ld	hl,#0x0002
   2AA3 E5                 7674 	push	hl
   2AA4 D5                 7675 	push	de
   2AA5 CDr00s00           7676 	call	__modsint_rrx_s
   2AA8 F1                 7677 	pop	af
   2AA9 F1                 7678 	pop	af
   2AAA 54                 7679 	ld	d,h
   2AAB 7D                 7680 	ld	a,l
   2AAC B2                 7681 	or	a,d
   2AAD 20 19              7682 	jr	NZ,00104$
   2AAF DD 6E F8           7683 	ld	l,-8 (ix)
   2AB2 DD 66 F9           7684 	ld	h,-7 (ix)
   2AB5 5E                 7685 	ld	e,(hl)
   2AB6 23                 7686 	inc	hl
   2AB7 56                 7687 	ld	d,(hl)
   2AB8 AF                 7688 	xor	a,a
   2AB9 9B                 7689 	sbc	a,e
   2ABA 5F                 7690 	ld	e,a
   2ABB 3E 00              7691 	ld	a,#0x00
   2ABD 9A                 7692 	sbc	a,d
   2ABE 57                 7693 	ld	d,a
   2ABF DD 6E F8           7694 	ld	l,-8 (ix)
   2AC2 DD 66 F9           7695 	ld	h,-7 (ix)
   2AC5 73                 7696 	ld	(hl),e
   2AC6 23                 7697 	inc	hl
   2AC7 72                 7698 	ld	(hl),d
   2AC8                    7699 00104$:
                           7700 ;obj_ball.c:109: Sound_NewFx(SOUND_FX_BOUNCE);
   2AC8 3E 03              7701 	ld	a,#0x03
   2ACA F5                 7702 	push	af
   2ACB 33                 7703 	inc	sp
   2ACC CDr00s00           7704 	call	_Sound_NewFx
   2ACF 33                 7705 	inc	sp
   2AD0 18 26              7706 	jr	00107$
   2AD2                    7707 00106$:
                           7708 ;obj_ball.c:113: GameObjBall_SetState(this, DYING);
   2AD2 3E 01              7709 	ld	a,#0x01
   2AD4 F5                 7710 	push	af
   2AD5 33                 7711 	inc	sp
   2AD6 C5                 7712 	push	bc
   2AD7 CDrF6s27           7713 	call	_GameObjBall_SetState
   2ADA F1                 7714 	pop	af
   2ADB 33                 7715 	inc	sp
                           7716 ;obj_ball.c:114: GameObjScore_SetScore(&scoreB, scoreB.score + 1);
   2ADC 11r3Cs02           7717 	ld	de,#_scoreB + 24
   2ADF EB                 7718 	ex	de,hl
   2AE0 5E                 7719 	ld	e,(hl)
   2AE1 23                 7720 	inc	hl
   2AE2 56                 7721 	ld	d,(hl)
   2AE3 13                 7722 	inc	de
   2AE4 D5                 7723 	push	de
   2AE5 21r24s02           7724 	ld	hl,#_scoreB
   2AE8 E5                 7725 	push	hl
   2AE9 CDrB1s1B           7726 	call	_GameObjScore_SetScore
   2AEC F1                 7727 	pop	af
   2AED F1                 7728 	pop	af
                           7729 ;obj_ball.c:115: game.pScore_to_blink = &scoreB;
   2AEE 11rF2s02           7730 	ld	de,#_game + 10
   2AF1 6B                 7731 	ld	l,e
   2AF2 62                 7732 	ld	h,d
   2AF3 36r24              7733 	ld	(hl),#<_scoreB
   2AF5 23                 7734 	inc	hl
   2AF6 36s02              7735 	ld	(hl),#>_scoreB
   2AF8                    7736 00107$:
                           7737 ;obj_ball.c:117: return;
   2AF8 C3rF9s2B           7738 	jp	00121$
   2AFB                    7739 00111$:
                           7740 ;obj_ball.c:120: if ( this->gobj.x +  this->radius > SCREEN_WIDTH - GAME_FIELD_X_BORDER)
   2AFB DD 7E FE           7741 	ld	a,-2 (ix)
   2AFE DD 86 FC           7742 	add	a,-4 (ix)
   2B01 5F                 7743 	ld	e,a
   2B02 DD 7E FF           7744 	ld	a,-1 (ix)
   2B05 DD 8E FD           7745 	adc	a,-3 (ix)
   2B08 57                 7746 	ld	d,a
   2B09 3E 66              7747 	ld	a,#0x66
   2B0B 93                 7748 	sub	a,e
   2B0C 3E 01              7749 	ld	a,#0x01
   2B0E 9A                 7750 	sbc	a,d
   2B0F F2rF9s2B           7751 	jp	P,00121$
                           7752 ;obj_ball.c:123: if (this->gobj.y > batB.gobj.y && this->gobj.y < batB.gobj.y+batB.gobj.height && batB.state == NORMAL)
   2B12 21 03 00           7753 	ld	hl,#0x0003
   2B15 09                 7754 	add	hl,bc
   2B16 7E                 7755 	ld	a,(hl)
   2B17 DD 77 F8           7756 	ld	-8 (ix),a
   2B1A 23                 7757 	inc	hl
   2B1B 7E                 7758 	ld	a,(hl)
   2B1C DD 77 F9           7759 	ld	-7 (ix),a
   2B1F 11r6As02           7760 	ld	de,#_batB + 3
   2B22 EB                 7761 	ex	de,hl
   2B23 7E                 7762 	ld	a,(hl)
   2B24 DD 77 FA           7763 	ld	-6 (ix),a
   2B27 23                 7764 	inc	hl
   2B28 7E                 7765 	ld	a,(hl)
   2B29 DD 77 FB           7766 	ld	-5 (ix),a
   2B2C DD 7E FA           7767 	ld	a,-6 (ix)
   2B2F DD 96 F8           7768 	sub	a,-8 (ix)
   2B32 DD 7E FB           7769 	ld	a,-5 (ix)
   2B35 DD 9E F9           7770 	sbc	a,-7 (ix)
   2B38 F2rD4s2B           7771 	jp	P,00115$
   2B3B 11r6Es02           7772 	ld	de,#_batB + 7
   2B3E EB                 7773 	ex	de,hl
   2B3F 5E                 7774 	ld	e,(hl)
   2B40 23                 7775 	inc	hl
   2B41 56                 7776 	ld	d,(hl)
   2B42 DD 7E FA           7777 	ld	a,-6 (ix)
   2B45 83                 7778 	add	a,e
   2B46 5F                 7779 	ld	e,a
   2B47 DD 7E FB           7780 	ld	a,-5 (ix)
   2B4A 8A                 7781 	adc	a,d
   2B4B 57                 7782 	ld	d,a
   2B4C DD 7E F8           7783 	ld	a,-8 (ix)
   2B4F 93                 7784 	sub	a,e
   2B50 DD 7E F9           7785 	ld	a,-7 (ix)
   2B53 9A                 7786 	sbc	a,d
   2B54 F2rD4s2B           7787 	jp	P,00115$
   2B57 11r7Es02           7788 	ld	de,#_batB + 23
   2B5A 1A                 7789 	ld	a,(de)
   2B5B B7                 7790 	or	a,a
   2B5C C2rD4s2B           7791 	jp	NZ,00115$
                           7792 ;obj_ball.c:125: this->speedx = - this->speedx;
   2B5F 21 19 00           7793 	ld	hl,#0x0019
   2B62 09                 7794 	add	hl,bc
   2B63 DD 75 F8           7795 	ld	-8 (ix),l
   2B66 DD 74 F9           7796 	ld	-7 (ix),h
   2B69 5E                 7797 	ld	e,(hl)
   2B6A 23                 7798 	inc	hl
   2B6B 56                 7799 	ld	d,(hl)
   2B6C AF                 7800 	xor	a,a
   2B6D 9B                 7801 	sbc	a,e
   2B6E 5F                 7802 	ld	e,a
   2B6F 3E 00              7803 	ld	a,#0x00
   2B71 9A                 7804 	sbc	a,d
   2B72 57                 7805 	ld	d,a
   2B73 DD 6E F8           7806 	ld	l,-8 (ix)
   2B76 DD 66 F9           7807 	ld	h,-7 (ix)
   2B79 73                 7808 	ld	(hl),e
   2B7A 23                 7809 	inc	hl
   2B7B 72                 7810 	ld	(hl),d
                           7811 ;obj_ball.c:126: this->speedy = rand ()%3;// Sets speed from depending upon remainder.
   2B7C 21 1B 00           7812 	ld	hl,#0x001B
   2B7F 09                 7813 	add	hl,bc
   2B80 DD 75 F8           7814 	ld	-8 (ix),l
   2B83 DD 74 F9           7815 	ld	-7 (ix),h
   2B86 CDr00s00           7816 	call	_rand
   2B89 EB                 7817 	ex	de,hl
   2B8A 21 03 00           7818 	ld	hl,#0x0003
   2B8D E5                 7819 	push	hl
   2B8E D5                 7820 	push	de
   2B8F CDr00s00           7821 	call	__modsint_rrx_s
   2B92 F1                 7822 	pop	af
   2B93 F1                 7823 	pop	af
   2B94 EB                 7824 	ex	de,hl
   2B95 DD 6E F8           7825 	ld	l,-8 (ix)
   2B98 DD 66 F9           7826 	ld	h,-7 (ix)
   2B9B 73                 7827 	ld	(hl),e
   2B9C 23                 7828 	inc	hl
   2B9D 72                 7829 	ld	(hl),d
                           7830 ;obj_ball.c:127: if (rand() % 2 == 0) this->speedy = - this->speedy; // Generate Random Y direction.
   2B9E CDr00s00           7831 	call	_rand
   2BA1 EB                 7832 	ex	de,hl
   2BA2 21 02 00           7833 	ld	hl,#0x0002
   2BA5 E5                 7834 	push	hl
   2BA6 D5                 7835 	push	de
   2BA7 CDr00s00           7836 	call	__modsint_rrx_s
   2BAA F1                 7837 	pop	af
   2BAB F1                 7838 	pop	af
   2BAC 54                 7839 	ld	d,h
   2BAD 7D                 7840 	ld	a,l
   2BAE B2                 7841 	or	a,d
   2BAF 20 19              7842 	jr	NZ,00113$
   2BB1 DD 6E F8           7843 	ld	l,-8 (ix)
   2BB4 DD 66 F9           7844 	ld	h,-7 (ix)
   2BB7 5E                 7845 	ld	e,(hl)
   2BB8 23                 7846 	inc	hl
   2BB9 56                 7847 	ld	d,(hl)
   2BBA AF                 7848 	xor	a,a
   2BBB 9B                 7849 	sbc	a,e
   2BBC 5F                 7850 	ld	e,a
   2BBD 3E 00              7851 	ld	a,#0x00
   2BBF 9A                 7852 	sbc	a,d
   2BC0 57                 7853 	ld	d,a
   2BC1 DD 6E F8           7854 	ld	l,-8 (ix)
   2BC4 DD 66 F9           7855 	ld	h,-7 (ix)
   2BC7 73                 7856 	ld	(hl),e
   2BC8 23                 7857 	inc	hl
   2BC9 72                 7858 	ld	(hl),d
   2BCA                    7859 00113$:
                           7860 ;obj_ball.c:128: Sound_NewFx(SOUND_FX_BOUNCE);
   2BCA 3E 03              7861 	ld	a,#0x03
   2BCC F5                 7862 	push	af
   2BCD 33                 7863 	inc	sp
   2BCE CDr00s00           7864 	call	_Sound_NewFx
   2BD1 33                 7865 	inc	sp
   2BD2 18 25              7866 	jr	00116$
   2BD4                    7867 00115$:
                           7868 ;obj_ball.c:132: GameObjBall_SetState(this, DYING);
   2BD4 3E 01              7869 	ld	a,#0x01
   2BD6 F5                 7870 	push	af
   2BD7 33                 7871 	inc	sp
   2BD8 C5                 7872 	push	bc
   2BD9 CDrF6s27           7873 	call	_GameObjBall_SetState
   2BDC F1                 7874 	pop	af
   2BDD 33                 7875 	inc	sp
                           7876 ;obj_ball.c:133: GameObjScore_SetScore(&scoreA, scoreA.score + 1);
   2BDE 21r19s02           7877 	ld	hl, #_scoreA + 24
   2BE1 4E                 7878 	ld	c,(hl)
   2BE2 23                 7879 	inc	hl
   2BE3 46                 7880 	ld	b,(hl)
   2BE4 03                 7881 	inc	bc
   2BE5 C5                 7882 	push	bc
   2BE6 21r01s02           7883 	ld	hl,#_scoreA
   2BE9 E5                 7884 	push	hl
   2BEA CDrB1s1B           7885 	call	_GameObjScore_SetScore
   2BED F1                 7886 	pop	af
   2BEE F1                 7887 	pop	af
                           7888 ;obj_ball.c:134: game.pScore_to_blink = &scoreA;
   2BEF 01rF2s02           7889 	ld	bc,#_game + 10
   2BF2 69                 7890 	ld	l,c
   2BF3 60                 7891 	ld	h,b
   2BF4 36r01              7892 	ld	(hl),#<_scoreA
   2BF6 23                 7893 	inc	hl
   2BF7 36s02              7894 	ld	(hl),#>_scoreA
   2BF9                    7895 00116$:
                           7896 ;obj_ball.c:136: return;
   2BF9                    7897 00121$:
   2BF9 DD F9              7898 	ld	sp,ix
   2BFB DD E1              7899 	pop	ix
   2BFD C9                 7900 	ret
   2BFE                    7901 _GameObjBall_CheckCollision_end::
                           7902 ;obj_ball.c:141: void GameObjBall_Draw(GameObjBall* this)
                           7903 ;	---------------------------------
                           7904 ; Function GameObjBall_Draw
                           7905 ; ---------------------------------
   2BFE                    7906 _GameObjBall_Draw_start::
   2BFE                    7907 _GameObjBall_Draw:
   2BFE DD E5              7908 	push	ix
   2C00 DD 21 00 00        7909 	ld	ix,#0
   2C04 DD 39              7910 	add	ix,sp
   2C06 F5                 7911 	push	af
                           7912 ;obj_ball.c:143: DrawBall (this->gobj.x, this->gobj.y, this->radius, this->radius);
   2C07 DD 4E 04           7913 	ld	c,4 (ix)
   2C0A DD 46 05           7914 	ld	b,5 (ix)
   2C0D 21 17 00           7915 	ld	hl,#0x0017
   2C10 09                 7916 	add	hl,bc
   2C11 7E                 7917 	ld	a,(hl)
   2C12 DD 77 FE           7918 	ld	-2 (ix),a
   2C15 23                 7919 	inc	hl
   2C16 7E                 7920 	ld	a,(hl)
   2C17 DD 77 FF           7921 	ld	-1 (ix),a
   2C1A 21 03 00           7922 	ld	hl,#0x0003
   2C1D 09                 7923 	add	hl,bc
   2C1E 5E                 7924 	ld	e,(hl)
   2C1F 23                 7925 	inc	hl
   2C20 56                 7926 	ld	d,(hl)
   2C21 69                 7927 	ld	l,c
   2C22 60                 7928 	ld	h,b
   2C23 23                 7929 	inc	hl
   2C24 4E                 7930 	ld	c,(hl)
   2C25 23                 7931 	inc	hl
   2C26 46                 7932 	ld	b,(hl)
   2C27 DD 6E FE           7933 	ld	l,-2 (ix)
   2C2A DD 66 FF           7934 	ld	h,-1 (ix)
   2C2D E5                 7935 	push	hl
   2C2E DD 6E FE           7936 	ld	l,-2 (ix)
   2C31 DD 66 FF           7937 	ld	h,-1 (ix)
   2C34 E5                 7938 	push	hl
   2C35 D5                 7939 	push	de
   2C36 C5                 7940 	push	bc
   2C37 CDr5Cs08           7941 	call	_DrawBall
   2C3A F1                 7942 	pop	af
   2C3B F1                 7943 	pop	af
   2C3C F1                 7944 	pop	af
   2C3D F1                 7945 	pop	af
   2C3E DD F9              7946 	ld	sp,ix
   2C40 DD E1              7947 	pop	ix
   2C42 C9                 7948 	ret
   2C43                    7949 _GameObjBall_Draw_end::
                           7950 ;obj_youwin.c:1: void GameObjYouWin_Init(GameObjYouWin* this, int x, int y)
                           7951 ;	---------------------------------
                           7952 ; Function GameObjYouWin_Init
                           7953 ; ---------------------------------
   2C43                    7954 _GameObjYouWin_Init_start::
   2C43                    7955 _GameObjYouWin_Init:
   2C43 DD E5              7956 	push	ix
   2C45 DD 21 00 00        7957 	ld	ix,#0
   2C49 DD 39              7958 	add	ix,sp
                           7959 ;obj_youwin.c:4: GameObj_Init((GameObj*)this);
   2C4B DD 4E 04           7960 	ld	c,4 (ix)
   2C4E DD 46 05           7961 	ld	b,5 (ix)
   2C51 C5                 7962 	push	bc
   2C52 CDr55s13           7963 	call	_GameObj_Init
   2C55 F1                 7964 	pop	af
                           7965 ;obj_youwin.c:6: this->gobj.x = x;
   2C56 DD 4E 04           7966 	ld	c,4 (ix)
   2C59 DD 46 05           7967 	ld	b,5 (ix)
   2C5C 69                 7968 	ld	l,c
   2C5D 60                 7969 	ld	h,b
   2C5E 23                 7970 	inc	hl
   2C5F DD 7E 06           7971 	ld	a,6 (ix)
   2C62 77                 7972 	ld	(hl),a
   2C63 23                 7973 	inc	hl
   2C64 DD 7E 07           7974 	ld	a,7 (ix)
   2C67 77                 7975 	ld	(hl),a
                           7976 ;obj_youwin.c:7: this->gobj.y = y;
   2C68 21 03 00           7977 	ld	hl,#0x0003
   2C6B 09                 7978 	add	hl,bc
   2C6C DD 7E 08           7979 	ld	a,8 (ix)
   2C6F 77                 7980 	ld	(hl),a
   2C70 23                 7981 	inc	hl
   2C71 DD 7E 09           7982 	ld	a,9 (ix)
   2C74 77                 7983 	ld	(hl),a
                           7984 ;obj_youwin.c:8: this->gobj.width  = 16*2;
   2C75 21 05 00           7985 	ld	hl,#0x0005
   2C78 09                 7986 	add	hl,bc
   2C79 36 20              7987 	ld	(hl),#0x20
   2C7B 23                 7988 	inc	hl
   2C7C 36 00              7989 	ld	(hl),#0x00
                           7990 ;obj_youwin.c:9: this->gobj.height = 16;
   2C7E 21 07 00           7991 	ld	hl,#0x0007
   2C81 09                 7992 	add	hl,bc
   2C82 36 10              7993 	ld	(hl),#0x10
   2C84 23                 7994 	inc	hl
   2C85 36 00              7995 	ld	(hl),#0x00
                           7996 ;obj_youwin.c:11: this->state = NORMAL;
   2C87 21 17 00           7997 	ld	hl,#0x0017
   2C8A 09                 7998 	add	hl,bc
   2C8B EB                 7999 	ex	de,hl
   2C8C 3E 00              8000 	ld	a,#0x00
   2C8E 12                 8001 	ld	(de),a
                           8002 ;obj_youwin.c:12: this->angle = 0;
   2C8F 21 26 00           8003 	ld	hl,#0x0026
   2C92 09                 8004 	add	hl,bc
   2C93 36 00              8005 	ld	(hl),#0x00
   2C95 23                 8006 	inc	hl
   2C96 36 00              8007 	ld	(hl),#0x00
                           8008 ;obj_youwin.c:13: this->lifeTime = 0;
   2C98 21 28 00           8009 	ld	hl,#0x0028
   2C9B 09                 8010 	add	hl,bc
   2C9C 36 00              8011 	ld	(hl),#0x00
   2C9E 23                 8012 	inc	hl
   2C9F 36 00              8013 	ld	(hl),#0x00
                           8014 ;obj_youwin.c:18: this->gobj.pMoveFunc = &GameObjYouWin_Move;
   2CA1 21 13 00           8015 	ld	hl,#0x0013
   2CA4 09                 8016 	add	hl,bc
   2CA5 5D                 8017 	ld	e,l
   2CA6 36rBD              8018 	ld	(hl),#<_GameObjYouWin_Move
   2CA8 23                 8019 	inc	hl
   2CA9 36s2C              8020 	ld	(hl),#>_GameObjYouWin_Move
                           8021 ;obj_youwin.c:19: this->gobj.pDrawFunc = &GameObjYouWin_Draw;
   2CAB 21 15 00           8022 	ld	hl,#0x0015
   2CAE 09                 8023 	add	hl,bc
   2CAF 5D                 8024 	ld	e,l
   2CB0 36r76              8025 	ld	(hl),#<_GameObjYouWin_Draw
   2CB2 23                 8026 	inc	hl
   2CB3 36s2E              8027 	ld	(hl),#>_GameObjYouWin_Draw
                           8028 ;obj_youwin.c:21: GameObjYouWin_AllocateAnimObjects(this);
   2CB5 C5                 8029 	push	bc
   2CB6 CDr81s2E           8030 	call	_GameObjYouWin_AllocateAnimObjects
   2CB9 F1                 8031 	pop	af
   2CBA DD E1              8032 	pop	ix
   2CBC C9                 8033 	ret
   2CBD                    8034 _GameObjYouWin_Init_end::
                           8035 ;obj_youwin.c:28: void GameObjYouWin_Move(GameObjYouWin* this)
                           8036 ;	---------------------------------
                           8037 ; Function GameObjYouWin_Move
                           8038 ; ---------------------------------
   2CBD                    8039 _GameObjYouWin_Move_start::
   2CBD                    8040 _GameObjYouWin_Move:
   2CBD DD E5              8041 	push	ix
   2CBF DD 21 00 00        8042 	ld	ix,#0
   2CC3 DD 39              8043 	add	ix,sp
   2CC5 21 EC FF           8044 	ld	hl,#-20
   2CC8 39                 8045 	add	hl,sp
   2CC9 F9                 8046 	ld	sp,hl
                           8047 ;obj_youwin.c:31: short x_center = this->gobj.x + SPR_YOUWIN_WIDTH*16/2;
   2CCA DD 7E 04           8048 	ld	a,4 (ix)
   2CCD DD 77 F0           8049 	ld	-16 (ix),a
   2CD0 DD 7E 05           8050 	ld	a,5 (ix)
   2CD3 DD 77 F1           8051 	ld	-15 (ix),a
   2CD6 DD 5E F0           8052 	ld	e,-16 (ix)
   2CD9 DD 56 F1           8053 	ld	d,-15 (ix)
   2CDC EB                 8054 	ex	de,hl
   2CDD 23                 8055 	inc	hl
   2CDE 5E                 8056 	ld	e,(hl)
   2CDF 23                 8057 	inc	hl
   2CE0 56                 8058 	ld	d,(hl)
   2CE1 21 30 00           8059 	ld	hl,#0x0030
   2CE4 19                 8060 	add	hl,de
   2CE5 DD 75 FD           8061 	ld	-3 (ix),l
   2CE8 DD 74 FE           8062 	ld	-2 (ix),h
                           8063 ;obj_youwin.c:32: short y_center = this->gobj.y + SPR_YOUWIN_HEIGHT*16/2;
   2CEB DD 7E F0           8064 	ld	a,-16 (ix)
   2CEE C6 03              8065 	add	a,#0x03
   2CF0 6F                 8066 	ld	l, a
   2CF1 DD 7E F1           8067 	ld	a, -15 (ix)
   2CF4 CE 00              8068 	adc	a, #0x00
   2CF6 67                 8069 	ld	h,a
   2CF7 5E                 8070 	ld	e,(hl)
   2CF8 23                 8071 	inc	hl
   2CF9 56                 8072 	ld	d,(hl)
   2CFA 21 40 00           8073 	ld	hl,#0x0040
   2CFD 19                 8074 	add	hl,de
   2CFE DD 75 FB           8075 	ld	-5 (ix),l
   2D01 DD 74 FC           8076 	ld	-4 (ix),h
                           8077 ;obj_youwin.c:33: byte angle = this->angle/256;   // get integer part of fixet point value
   2D04 DD 7E F0           8078 	ld	a,-16 (ix)
   2D07 C6 26              8079 	add	a,#0x26
   2D09 DD 77 F6           8080 	ld	-10 (ix),a
   2D0C DD 7E F1           8081 	ld	a,-15 (ix)
   2D0F CE 00              8082 	adc	a,#0x00
   2D11 DD 77 F7           8083 	ld	-9 (ix),a
   2D14 DD 6E F6           8084 	ld	l,-10 (ix)
   2D17 DD 66 F7           8085 	ld	h,-9 (ix)
   2D1A 7E                 8086 	ld	a,(hl)
   2D1B DD 77 F4           8087 	ld	-12 (ix),a
   2D1E 23                 8088 	inc	hl
   2D1F 7E                 8089 	ld	a,(hl)
   2D20 DD 77 F5           8090 	ld	-11 (ix),a
   2D23 5F                 8091 	ld	e, a
   2D24 16 00              8092 	ld	d,#0x00
                           8093 ;math.c:60: mm__mult_index = angle;
   2D26 FD 21 0A 02        8094 	ld	iy,#_mm__mult_index
   2D2A FD 73 00           8095 	ld	0 (iy),e
                           8096 ;math.c:61: mm__mult_write = n2;
   2D2D FD 21 08 02        8097 	ld	iy,#_mm__mult_write
   2D31 FD 36 00 4B        8098 	ld	0 (iy),#0x4B
   2D35 FD 21 08 02        8099 	ld	iy,#_mm__mult_write
   2D39 FD 36 01 00        8100 	ld	1 (iy),#0x00
                           8101 ;math.c:62: return mm__mult_read;
   2D3D ED 4B 04 07        8102 	ld	bc,(_mm__mult_read)
                           8103 ;obj_youwin.c:36: radius = HW_SIN_MUL(angle, 75);
   2D41 DD 71 FA           8104 	ld	-6 (ix),c
                           8105 ;obj_youwin.c:38: for(i=0; i<NUM_EMERLADS; i++) {
   2D44 DD 7E F0           8106 	ld	a,-16 (ix)
   2D47 C6 18              8107 	add	a,#0x18
   2D49 DD 77 F2           8108 	ld	-14 (ix),a
   2D4C DD 7E F1           8109 	ld	a,-15 (ix)
   2D4F CE 00              8110 	adc	a,#0x00
   2D51 DD 77 F3           8111 	ld	-13 (ix),a
   2D54 DD 36 FF 00        8112 	ld	-1 (ix),#0x00
   2D58                    8113 00107$:
   2D58 DD 7E FF           8114 	ld	a,-1 (ix)
   2D5B D6 07              8115 	sub	a,#0x07
   2D5D D2r27s2E           8116 	jp	NC,00110$
                           8117 ;obj_youwin.c:39: this->emerlads[i]->gobj.x = x_center + HW_SIN_MUL(angle, radius) - 20/2;
   2D60 DD 7E FF           8118 	ld	a,-1 (ix)
   2D63 87                 8119 	add	a,a
   2D64 57                 8120 	ld	d,a
   2D65 DD 7E F2           8121 	ld	a,-14 (ix)
   2D68 82                 8122 	add	a,d
   2D69 57                 8123 	ld	d,a
   2D6A DD 7E F3           8124 	ld	a,-13 (ix)
   2D6D CE 00              8125 	adc	a,#0x00
   2D6F 6A                 8126 	ld	l,d
   2D70 67                 8127 	ld	h,a
   2D71 7E                 8128 	ld	a,(hl)
   2D72 DD 77 EE           8129 	ld	-18 (ix),a
   2D75 23                 8130 	inc	hl
   2D76 7E                 8131 	ld	a,(hl)
   2D77 DD 77 EF           8132 	ld	-17 (ix),a
   2D7A DD 7E EE           8133 	ld	a,-18 (ix)
   2D7D C6 01              8134 	add	a,#0x01
   2D7F DD 77 EC           8135 	ld	-20 (ix),a
   2D82 DD 7E EF           8136 	ld	a,-17 (ix)
   2D85 CE 00              8137 	adc	a,#0x00
   2D87 DD 77 ED           8138 	ld	-19 (ix),a
   2D8A DD 7E FA           8139 	ld	a,-6 (ix)
   2D8D DD 77 F8           8140 	ld	-8 (ix),a
   2D90 DD 7E FA           8141 	ld	a,-6 (ix)
   2D93 17                 8142 	rla	
   2D94 9F                 8143 	sbc	a,a
   2D95 DD 77 F9           8144 	ld	-7 (ix),a
   2D98 DD 4E F8           8145 	ld	c,-8 (ix)
   2D9B DD 46 F9           8146 	ld	b,-7 (ix)
                           8147 ;math.c:60: mm__mult_index = angle;
   2D9E FD 21 0A 02        8148 	ld	iy,#_mm__mult_index
   2DA2 FD 73 00           8149 	ld	0 (iy),e
                           8150 ;math.c:61: mm__mult_write = n2;
   2DA5 FD 21 08 02        8151 	ld	iy,#_mm__mult_write
   2DA9 FD 71 00           8152 	ld	0 (iy),c
   2DAC FD 21 08 02        8153 	ld	iy,#_mm__mult_write
   2DB0 FD 70 01           8154 	ld	1 (iy),b
                           8155 ;math.c:62: return mm__mult_read;
   2DB3 ED 4B 04 07        8156 	ld	bc,(_mm__mult_read)
                           8157 ;obj_youwin.c:39: this->emerlads[i]->gobj.x = x_center + HW_SIN_MUL(angle, radius) - 20/2;
   2DB7 DD 7E FD           8158 	ld	a,-3 (ix)
   2DBA 81                 8159 	add	a,c
   2DBB 4F                 8160 	ld	c,a
   2DBC DD 7E FE           8161 	ld	a,-2 (ix)
   2DBF 88                 8162 	adc	a,b
   2DC0 47                 8163 	ld	b,a
   2DC1 79                 8164 	ld	a,c
   2DC2 C6 F6              8165 	add	a,#0xF6
   2DC4 4F                 8166 	ld	c,a
   2DC5 78                 8167 	ld	a,b
   2DC6 CE FF              8168 	adc	a,#0xFF
   2DC8 47                 8169 	ld	b,a
   2DC9 DD 6E EC           8170 	ld	l,-20 (ix)
   2DCC DD 66 ED           8171 	ld	h,-19 (ix)
   2DCF 71                 8172 	ld	(hl),c
   2DD0 23                 8173 	inc	hl
   2DD1 70                 8174 	ld	(hl),b
                           8175 ;obj_youwin.c:40: this->emerlads[i]->gobj.y = y_center + HW_SIN_MUL(angle+0x100/4, radius) - 16/2;
   2DD2 DD 7E EE           8176 	ld	a,-18 (ix)
   2DD5 C6 03              8177 	add	a,#0x03
   2DD7 DD 77 EC           8178 	ld	-20 (ix),a
   2DDA DD 7E EF           8179 	ld	a,-17 (ix)
   2DDD CE 00              8180 	adc	a,#0x00
   2DDF DD 77 ED           8181 	ld	-19 (ix),a
   2DE2 21 0A 02           8182 	ld	hl,#_mm__mult_index
   2DE5 7B                 8183 	ld	a,e
   2DE6 C6 40              8184 	add	a,#0x40
   2DE8 77                 8185 	ld	(hl),a
                           8186 ;math.c:61: mm__mult_write = n2;
   2DE9 DD 7E F8           8187 	ld	a,-8 (ix)
   2DEC FD 21 08 02        8188 	ld	iy,#_mm__mult_write
   2DF0 FD 77 00           8189 	ld	0 (iy),a
   2DF3 DD 7E F9           8190 	ld	a,-7 (ix)
   2DF6 FD 21 08 02        8191 	ld	iy,#_mm__mult_write
   2DFA FD 77 01           8192 	ld	1 (iy),a
                           8193 ;math.c:62: return mm__mult_read;
   2DFD 2A 04 07           8194 	ld	hl,(_mm__mult_read)
   2E00 55                 8195 	ld	d,l
   2E01 4C                 8196 	ld	c,h
                           8197 ;obj_youwin.c:40: this->emerlads[i]->gobj.y = y_center + HW_SIN_MUL(angle+0x100/4, radius) - 16/2;
   2E02 DD 7E FB           8198 	ld	a,-5 (ix)
   2E05 82                 8199 	add	a,d
   2E06 57                 8200 	ld	d,a
   2E07 DD 7E FC           8201 	ld	a,-4 (ix)
   2E0A 89                 8202 	adc	a,c
   2E0B 4F                 8203 	ld	c,a
   2E0C 7A                 8204 	ld	a,d
   2E0D C6 F8              8205 	add	a,#0xF8
   2E0F 57                 8206 	ld	d,a
   2E10 79                 8207 	ld	a,c
   2E11 CE FF              8208 	adc	a,#0xFF
   2E13 4F                 8209 	ld	c,a
   2E14 DD 6E EC           8210 	ld	l,-20 (ix)
   2E17 DD 66 ED           8211 	ld	h,-19 (ix)
   2E1A 72                 8212 	ld	(hl),d
   2E1B 23                 8213 	inc	hl
   2E1C 71                 8214 	ld	(hl),c
                           8215 ;obj_youwin.c:42: angle += (256/NUM_EMERLADS);
   2E1D 7B                 8216 	ld	a,e
   2E1E C6 24              8217 	add	a,#0x24
   2E20 5F                 8218 	ld	e,a
                           8219 ;obj_youwin.c:38: for(i=0; i<NUM_EMERLADS; i++) {
   2E21 DD 34 FF           8220 	inc	-1 (ix)
   2E24 C3r58s2D           8221 	jp	00107$
   2E27                    8222 00110$:
                           8223 ;obj_youwin.c:44: this->angle += (word)(1.5*256);
   2E27 DD 7E F4           8224 	ld	a,-12 (ix)
   2E2A C6 80              8225 	add	a,#0x80
   2E2C 4F                 8226 	ld	c,a
   2E2D DD 7E F5           8227 	ld	a,-11 (ix)
   2E30 CE 01              8228 	adc	a,#0x01
   2E32 47                 8229 	ld	b,a
   2E33 DD 6E F6           8230 	ld	l,-10 (ix)
   2E36 DD 66 F7           8231 	ld	h,-9 (ix)
   2E39 71                 8232 	ld	(hl),c
   2E3A 23                 8233 	inc	hl
   2E3B 70                 8234 	ld	(hl),b
                           8235 ;obj_youwin.c:46: if(/*this->lifeTime >= 5*50*/ player1_input.fire1 || player2_input.fire1)
   2E3C 01r36s03           8236 	ld	bc,#_player1_input + 2
   2E3F 0A                 8237 	ld	a,(bc)
   2E40 B7                 8238 	or	a,a
   2E41 20 07              8239 	jr	NZ,00101$
   2E43 01r3As03           8240 	ld	bc,#_player2_input + 2
   2E46 0A                 8241 	ld	a,(bc)
   2E47 B7                 8242 	or	a,a
   2E48 28 10              8243 	jr	Z,00102$
   2E4A                    8244 00101$:
                           8245 ;obj_youwin.c:47: GameObjYouWin_SetState(this, DIE);
   2E4A 3E 02              8246 	ld	a,#0x02
   2E4C F5                 8247 	push	af
   2E4D 33                 8248 	inc	sp
   2E4E DD 6E F0           8249 	ld	l,-16 (ix)
   2E51 DD 66 F1           8250 	ld	h,-15 (ix)
   2E54 E5                 8251 	push	hl
   2E55 CDr30s30           8252 	call	_GameObjYouWin_SetState
   2E58 F1                 8253 	pop	af
   2E59 33                 8254 	inc	sp
   2E5A                    8255 00102$:
                           8256 ;obj_youwin.c:49: this->lifeTime++;
   2E5A DD 7E F0           8257 	ld	a,-16 (ix)
   2E5D C6 28              8258 	add	a,#0x28
   2E5F 4F                 8259 	ld	c,a
   2E60 DD 7E F1           8260 	ld	a,-15 (ix)
   2E63 CE 00              8261 	adc	a,#0x00
   2E65 47                 8262 	ld	b,a
   2E66 69                 8263 	ld	l,c
   2E67 67                 8264 	ld	h,a
   2E68 5E                 8265 	ld	e,(hl)
   2E69 23                 8266 	inc	hl
   2E6A 56                 8267 	ld	d,(hl)
   2E6B 13                 8268 	inc	de
   2E6C 69                 8269 	ld	l,c
   2E6D 60                 8270 	ld	h,b
   2E6E 73                 8271 	ld	(hl),e
   2E6F 23                 8272 	inc	hl
   2E70 72                 8273 	ld	(hl),d
   2E71 DD F9              8274 	ld	sp,ix
   2E73 DD E1              8275 	pop	ix
   2E75 C9                 8276 	ret
   2E76                    8277 _GameObjYouWin_Move_end::
                           8278 ;obj_youwin.c:54: void GameObjYouWin_Draw(GameObjYouWin* this)
                           8279 ;	---------------------------------
                           8280 ; Function GameObjYouWin_Draw
                           8281 ; ---------------------------------
   2E76                    8282 _GameObjYouWin_Draw_start::
   2E76                    8283 _GameObjYouWin_Draw:
   2E76 DD E5              8284 	push	ix
   2E78 DD 21 00 00        8285 	ld	ix,#0
   2E7C DD 39              8286 	add	ix,sp
                           8287 ;obj_youwin.c:56: this;
   2E7E DD E1              8288 	pop	ix
   2E80 C9                 8289 	ret
   2E81                    8290 _GameObjYouWin_Draw_end::
                           8291 ;obj_youwin.c:59: void GameObjYouWin_AllocateAnimObjects(GameObjYouWin* this)
                           8292 ;	---------------------------------
                           8293 ; Function GameObjYouWin_AllocateAnimObjects
                           8294 ; ---------------------------------
   2E81                    8295 _GameObjYouWin_AllocateAnimObjects_start::
   2E81                    8296 _GameObjYouWin_AllocateAnimObjects:
   2E81 DD E5              8297 	push	ix
   2E83 DD 21 00 00        8298 	ld	ix,#0
   2E87 DD 39              8299 	add	ix,sp
   2E89 21 F7 FF           8300 	ld	hl,#-9
   2E8C 39                 8301 	add	hl,sp
   2E8D F9                 8302 	ld	sp,hl
                           8303 ;obj_youwin.c:66: x = this->gobj.x;
   2E8E DD 4E 04           8304 	ld	c,4 (ix)
   2E91 DD 46 05           8305 	ld	b,5 (ix)
   2E94 69                 8306 	ld	l,c
   2E95 60                 8307 	ld	h,b
   2E96 23                 8308 	inc	hl
   2E97 5E                 8309 	ld	e,(hl)
   2E98 23                 8310 	inc	hl
   2E99 56                 8311 	ld	d,(hl)
   2E9A DD 73 FC           8312 	ld	-4 (ix),e
   2E9D DD 72 FD           8313 	ld	-3 (ix),d
                           8314 ;obj_youwin.c:67: y = this->gobj.y;
   2EA0 21 03 00           8315 	ld	hl,#0x0003
   2EA3 09                 8316 	add	hl,bc
   2EA4 5E                 8317 	ld	e,(hl)
   2EA5 23                 8318 	inc	hl
   2EA6 56                 8319 	ld	d,(hl)
   2EA7 DD 73 FA           8320 	ld	-6 (ix),e
   2EAA DD 72 FB           8321 	ld	-5 (ix),d
                           8322 ;obj_youwin.c:68: obj = PoolGameObj_AllocateGameObjAnim();
   2EAD C5                 8323 	push	bc
   2EAE CDrEBs10           8324 	call	_PoolGameObj_AllocateGameObjAnim
   2EB1 EB                 8325 	ex	de,hl
   2EB2 C1                 8326 	pop	bc
   2EB3 DD 73 FE           8327 	ld	-2 (ix),e
   2EB6 DD 72 FF           8328 	ld	-1 (ix),d
                           8329 ;obj_youwin.c:69: if(obj) {
   2EB9 DD 7E FE           8330 	ld	a,-2 (ix)
   2EBC DD B6 FF           8331 	or	a,-1 (ix)
   2EBF CAr2As2F           8332 	jp	Z,00114$
                           8333 ;obj_youwin.c:70: GameObjAnim_Init(obj, x,  y);
   2EC2 C5                 8334 	push	bc
   2EC3 DD 6E FA           8335 	ld	l,-6 (ix)
   2EC6 DD 66 FB           8336 	ld	h,-5 (ix)
   2EC9 E5                 8337 	push	hl
   2ECA DD 6E FC           8338 	ld	l,-4 (ix)
   2ECD DD 66 FD           8339 	ld	h,-3 (ix)
   2ED0 E5                 8340 	push	hl
   2ED1 DD 6E FE           8341 	ld	l,-2 (ix)
   2ED4 DD 66 FF           8342 	ld	h,-1 (ix)
   2ED7 E5                 8343 	push	hl
   2ED8 CDrF9s15           8344 	call	_GameObjAnim_Init
   2EDB F1                 8345 	pop	af
   2EDC F1                 8346 	pop	af
   2EDD F1                 8347 	pop	af
   2EDE C1                 8348 	pop	bc
                           8349 ;obj_youwin.c:71: obj->spr_count          = 6;
   2EDF DD 7E FE           8350 	ld	a,-2 (ix)
   2EE2 C6 19              8351 	add	a,#0x19
   2EE4 5F                 8352 	ld	e,a
   2EE5 DD 7E FF           8353 	ld	a,-1 (ix)
   2EE8 CE 00              8354 	adc	a,#0x00
   2EEA 57                 8355 	ld	d,a
   2EEB 3E 06              8356 	ld	a,#0x06
   2EED 12                 8357 	ld	(de),a
                           8358 ;obj_youwin.c:72: obj->spr_height         = 8;
   2EEE DD 7E FE           8359 	ld	a,-2 (ix)
   2EF1 C6 1A              8360 	add	a,#0x1A
   2EF3 5F                 8361 	ld	e,a
   2EF4 DD 7E FF           8362 	ld	a,-1 (ix)
   2EF7 CE 00              8363 	adc	a,#0x00
   2EF9 57                 8364 	ld	d,a
   2EFA 3E 08              8365 	ld	a,#0x08
   2EFC 12                 8366 	ld	(de),a
                           8367 ;obj_youwin.c:73: obj->spr_def_start      = SPRITE_DEF_NUM_YOUWIN;
   2EFD DD 7E FE           8368 	ld	a,-2 (ix)
   2F00 C6 1B              8369 	add	a,#0x1B
   2F02 6F                 8370 	ld	l, a
   2F03 DD 7E FF           8371 	ld	a, -1 (ix)
   2F06 CE 00              8372 	adc	a, #0x00
   2F08 67                 8373 	ld	h,a
   2F09 36 49              8374 	ld	(hl),#0x49
   2F0B 23                 8375 	inc	hl
   2F0C 36 00              8376 	ld	(hl),#0x00
                           8377 ;obj_youwin.c:74: obj->spr_def_pitch      = 8;
   2F0E DD 7E FE           8378 	ld	a,-2 (ix)
   2F11 C6 1D              8379 	add	a,#0x1D
   2F13 5F                 8380 	ld	e,a
   2F14 DD 7E FF           8381 	ld	a,-1 (ix)
   2F17 CE 00              8382 	adc	a,#0x00
   2F19 57                 8383 	ld	d,a
   2F1A 3E 08              8384 	ld	a,#0x08
   2F1C 12                 8385 	ld	(de),a
                           8386 ;obj_youwin.c:76: GameObjAnim_ShowOnlyFirstFrame(obj);
   2F1D C5                 8387 	push	bc
   2F1E DD 6E FE           8388 	ld	l,-2 (ix)
   2F21 DD 66 FF           8389 	ld	h,-1 (ix)
   2F24 E5                 8390 	push	hl
   2F25 CDrBFs18           8391 	call	_GameObjAnim_ShowOnlyFirstFrame
   2F28 F1                 8392 	pop	af
   2F29 C1                 8393 	pop	bc
                           8394 ;obj_youwin.c:80: for(i=0; i<NUM_EMERLADS; i++) {
   2F2A                    8395 00114$:
   2F2A 21 18 00           8396 	ld	hl,#0x0018
   2F2D 09                 8397 	add	hl,bc
   2F2E DD 75 F7           8398 	ld	-9 (ix),l
   2F31 DD 74 F8           8399 	ld	-8 (ix),h
   2F34 DD 36 F9 00        8400 	ld	-7 (ix),#0x00
   2F38                    8401 00105$:
   2F38 DD 7E F9           8402 	ld	a,-7 (ix)
   2F3B D6 07              8403 	sub	a,#0x07
   2F3D D2r2Bs30           8404 	jp	NC,00109$
                           8405 ;obj_youwin.c:81: obj = PoolGameObj_AllocateGameObjAnim();
   2F40 CDrEBs10           8406 	call	_PoolGameObj_AllocateGameObjAnim
   2F43 54                 8407 	ld	d,h
   2F44 DD 75 FE           8408 	ld	-2 (ix),l
   2F47 DD 72 FF           8409 	ld	-1 (ix),d
                           8410 ;obj_youwin.c:82: if(obj) {
   2F4A DD 7E FE           8411 	ld	a,-2 (ix)
   2F4D DD B6 FF           8412 	or	a,-1 (ix)
   2F50 CAr25s30           8413 	jp	Z,00107$
                           8414 ;obj_youwin.c:83: GameObjAnim_Init(obj, x + i*32,  y);
   2F53 DD 5E F9           8415 	ld	e,-7 (ix)
   2F56 16 00              8416 	ld	d,#0x00
   2F58 CB 23              8417 	sla	e
   2F5A CB 12              8418 	rl	d
   2F5C CB 23              8419 	sla	e
   2F5E CB 12              8420 	rl	d
   2F60 CB 23              8421 	sla	e
   2F62 CB 12              8422 	rl	d
   2F64 CB 23              8423 	sla	e
   2F66 CB 12              8424 	rl	d
   2F68 CB 23              8425 	sla	e
   2F6A CB 12              8426 	rl	d
   2F6C DD 7E FC           8427 	ld	a,-4 (ix)
   2F6F 83                 8428 	add	a,e
   2F70 5F                 8429 	ld	e,a
   2F71 DD 7E FD           8430 	ld	a,-3 (ix)
   2F74 8A                 8431 	adc	a,d
   2F75 57                 8432 	ld	d,a
   2F76 DD 6E FA           8433 	ld	l,-6 (ix)
   2F79 DD 66 FB           8434 	ld	h,-5 (ix)
   2F7C E5                 8435 	push	hl
   2F7D D5                 8436 	push	de
   2F7E DD 6E FE           8437 	ld	l,-2 (ix)
   2F81 DD 66 FF           8438 	ld	h,-1 (ix)
   2F84 E5                 8439 	push	hl
   2F85 CDrF9s15           8440 	call	_GameObjAnim_Init
   2F88 F1                 8441 	pop	af
   2F89 F1                 8442 	pop	af
   2F8A F1                 8443 	pop	af
                           8444 ;obj_youwin.c:84: obj->spr_count          = 2;
   2F8B DD 7E FE           8445 	ld	a,-2 (ix)
   2F8E C6 19              8446 	add	a,#0x19
   2F90 5F                 8447 	ld	e,a
   2F91 DD 7E FF           8448 	ld	a,-1 (ix)
   2F94 CE 00              8449 	adc	a,#0x00
   2F96 57                 8450 	ld	d,a
   2F97 3E 02              8451 	ld	a,#0x02
   2F99 12                 8452 	ld	(de),a
                           8453 ;obj_youwin.c:85: obj->spr_height         = 1;
   2F9A DD 7E FE           8454 	ld	a,-2 (ix)
   2F9D C6 1A              8455 	add	a,#0x1A
   2F9F 5F                 8456 	ld	e,a
   2FA0 DD 7E FF           8457 	ld	a,-1 (ix)
   2FA3 CE 00              8458 	adc	a,#0x00
   2FA5 57                 8459 	ld	d,a
   2FA6 3E 01              8460 	ld	a,#0x01
   2FA8 12                 8461 	ld	(de),a
                           8462 ;obj_youwin.c:86: obj->spr_def_start      = SPRITE_DEF_NUM_EMERALD;
   2FA9 DD 7E FE           8463 	ld	a,-2 (ix)
   2FAC C6 1B              8464 	add	a,#0x1B
   2FAE 6F                 8465 	ld	l, a
   2FAF DD 7E FF           8466 	ld	a, -1 (ix)
   2FB2 CE 00              8467 	adc	a, #0x00
   2FB4 67                 8468 	ld	h,a
   2FB5 36 3B              8469 	ld	(hl),#0x3B
   2FB7 23                 8470 	inc	hl
   2FB8 36 00              8471 	ld	(hl),#0x00
                           8472 ;obj_youwin.c:87: obj->spr_def_pitch      = 7;
   2FBA DD 7E FE           8473 	ld	a,-2 (ix)
   2FBD C6 1D              8474 	add	a,#0x1D
   2FBF 5F                 8475 	ld	e,a
   2FC0 DD 7E FF           8476 	ld	a,-1 (ix)
   2FC3 CE 00              8477 	adc	a,#0x00
   2FC5 57                 8478 	ld	d,a
   2FC6 3E 07              8479 	ld	a,#0x07
   2FC8 12                 8480 	ld	(de),a
                           8481 ;obj_youwin.c:89: obj->spr_anim_time      = 250;
   2FC9 DD 7E FE           8482 	ld	a,-2 (ix)
   2FCC C6 17              8483 	add	a,#0x17
   2FCE 5F                 8484 	ld	e,a
   2FCF DD 7E FF           8485 	ld	a,-1 (ix)
   2FD2 CE 00              8486 	adc	a,#0x00
   2FD4 57                 8487 	ld	d,a
   2FD5 3E FA              8488 	ld	a,#0xFA
   2FD7 12                 8489 	ld	(de),a
                           8490 ;obj_youwin.c:90: obj->spr_anim_frames    = 7;
   2FD8 DD 7E FE           8491 	ld	a,-2 (ix)
   2FDB C6 18              8492 	add	a,#0x18
   2FDD 5F                 8493 	ld	e,a
   2FDE DD 7E FF           8494 	ld	a,-1 (ix)
   2FE1 CE 00              8495 	adc	a,#0x00
   2FE3 57                 8496 	ld	d,a
   2FE4 3E 07              8497 	ld	a,#0x07
   2FE6 12                 8498 	ld	(de),a
                           8499 ;obj_youwin.c:91: GameObjAnim_EnableAnimation(obj, TRUE);
   2FE7 3E 01              8500 	ld	a,#0x01
   2FE9 F5                 8501 	push	af
   2FEA 33                 8502 	inc	sp
   2FEB DD 6E FE           8503 	ld	l,-2 (ix)
   2FEE DD 66 FF           8504 	ld	h,-1 (ix)
   2FF1 E5                 8505 	push	hl
   2FF2 CDr4Cs18           8506 	call	_GameObjAnim_EnableAnimation
   2FF5 F1                 8507 	pop	af
   2FF6 33                 8508 	inc	sp
                           8509 ;obj_youwin.c:93: obj->spr_anim_def_offset = i * 256U;
   2FF7 DD 7E FE           8510 	ld	a,-2 (ix)
   2FFA C6 21              8511 	add	a,#0x21
   2FFC 5F                 8512 	ld	e,a
   2FFD DD 7E FF           8513 	ld	a,-1 (ix)
   3000 CE 00              8514 	adc	a,#0x00
   3002 57                 8515 	ld	d,a
   3003 DD 46 F9           8516 	ld	b, -7 (ix)
   3006 0E 00              8517 	ld	c,#0x00
   3008 EB                 8518 	ex	de,hl
   3009 71                 8519 	ld	(hl),c
   300A 23                 8520 	inc	hl
   300B 70                 8521 	ld	(hl),b
                           8522 ;obj_youwin.c:95: this->emerlads[i] = obj;
   300C DD 7E F9           8523 	ld	a,-7 (ix)
   300F 87                 8524 	add	a,a
   3010 4F                 8525 	ld	c,a
   3011 DD 7E F7           8526 	ld	a,-9 (ix)
   3014 81                 8527 	add	a,c
   3015 6F                 8528 	ld	l, a
   3016 DD 7E F8           8529 	ld	a, -8 (ix)
   3019 CE 00              8530 	adc	a, #0x00
   301B 67                 8531 	ld	h,a
   301C DD 7E FE           8532 	ld	a,-2 (ix)
   301F 77                 8533 	ld	(hl),a
   3020 23                 8534 	inc	hl
   3021 DD 7E FF           8535 	ld	a,-1 (ix)
   3024 77                 8536 	ld	(hl),a
   3025                    8537 00107$:
                           8538 ;obj_youwin.c:80: for(i=0; i<NUM_EMERLADS; i++) {
   3025 DD 34 F9           8539 	inc	-7 (ix)
   3028 C3r38s2F           8540 	jp	00105$
   302B                    8541 00109$:
   302B DD F9              8542 	ld	sp,ix
   302D DD E1              8543 	pop	ix
   302F C9                 8544 	ret
   3030                    8545 _GameObjYouWin_AllocateAnimObjects_end::
                           8546 ;obj_youwin.c:100: void GameObjYouWin_SetState(GameObjYouWin* this, ObjState state)
                           8547 ;	---------------------------------
                           8548 ; Function GameObjYouWin_SetState
                           8549 ; ---------------------------------
   3030                    8550 _GameObjYouWin_SetState_start::
   3030                    8551 _GameObjYouWin_SetState:
   3030 DD E5              8552 	push	ix
   3032 DD 21 00 00        8553 	ld	ix,#0
   3036 DD 39              8554 	add	ix,sp
                           8555 ;obj_youwin.c:104: if(state == this->state)
   3038 DD 4E 04           8556 	ld	c,4 (ix)
   303B DD 46 05           8557 	ld	b,5 (ix)
   303E 21 17 00           8558 	ld	hl,#0x0017
   3041 09                 8559 	add	hl,bc
   3042 4D                 8560 	ld	c,l
   3043 44                 8561 	ld	b,h
   3044 0A                 8562 	ld	a,(bc)
   3045 5F                 8563 	ld	e,a
   3046 DD 7E 06           8564 	ld	a,6 (ix)
   3049 93                 8565 	sub	e
   304A 20 02              8566 	jr	NZ,00102$
                           8567 ;obj_youwin.c:105: return;
   304C 18 04              8568 	jr	00103$
   304E                    8569 00102$:
                           8570 ;obj_youwin.c:106: this->state = state;
   304E DD 7E 06           8571 	ld	a,6 (ix)
   3051 02                 8572 	ld	(bc),a
   3052                    8573 00103$:
   3052 DD E1              8574 	pop	ix
   3054 C9                 8575 	ret
   3055                    8576 _GameObjYouWin_SetState_end::
                           8577 ;obj_youwin.c:111: void helper_GameObjYouWin_StartAnimation(byte num_player)
                           8578 ;	---------------------------------
                           8579 ; Function helper_GameObjYouWin_StartAnimation
                           8580 ; ---------------------------------
   3055                    8581 _helper_GameObjYouWin_StartAnimation_start::
   3055                    8582 _helper_GameObjYouWin_StartAnimation:
   3055 DD E5              8583 	push	ix
   3057 DD 21 00 00        8584 	ld	ix,#0
   305B DD 39              8585 	add	ix,sp
                           8586 ;obj_youwin.c:115: x = ((SCREEN_WIDTH/2) - SPR_YOUWIN_WIDTH*16)/2;
   305D 01 2C 00           8587 	ld	bc,#0x002C
                           8588 ;obj_youwin.c:117: if(num_player == 1) {
   3060 DD 7E 04           8589 	ld	a,4 (ix)
   3063 D6 01              8590 	sub	a,#0x01
   3065 20 03              8591 	jr	NZ,00102$
                           8592 ;obj_youwin.c:118: x = x + SCREEN_WIDTH/2;
   3067 01 E4 00           8593 	ld	bc,#0x00E4
   306A                    8594 00102$:
                           8595 ;obj_youwin.c:122: if(YouWinAnim.gobj.in_use) return;
   306A 21rA7s02           8596 	ld	hl,#_YouWinAnim
   306D 7E                 8597 	ld	a,(hl)
   306E B7                 8598 	or	a,a
   306F 20 4A              8599 	jr	NZ,00105$
                           8600 ;obj_youwin.c:124: YouWinAnim.gobj.in_use = TRUE;
   3071 21rA7s02           8601 	ld	hl,#_YouWinAnim
   3074 36 01              8602 	ld	(hl),#0x01
                           8603 ;obj_youwin.c:125: GameObjYouWin_Init(&YouWinAnim, x, y);
   3076 21 38 00           8604 	ld	hl,#0x0038
   3079 E5                 8605 	push	hl
   307A C5                 8606 	push	bc
   307B 21rA7s02           8607 	ld	hl,#_YouWinAnim
   307E E5                 8608 	push	hl
   307F CDr43s2C           8609 	call	_GameObjYouWin_Init
   3082 F1                 8610 	pop	af
   3083 F1                 8611 	pop	af
   3084 F1                 8612 	pop	af
                           8613 ;obj_youwin.c:126: PoolGameObj_AddObjToActiveObjects(&YouWinAnim.gobj);
   3085 21rA7s02           8614 	ld	hl,#_YouWinAnim
   3088 E5                 8615 	push	hl
   3089 CDr77s11           8616 	call	_PoolGameObj_AddObjToActiveObjects
   308C F1                 8617 	pop	af
                           8618 ;obj_youwin.c:130: GameObjScore_SetState(&scoreA, NORMAL); scoreA.is_show = TRUE;
   308D 3E 00              8619 	ld	a,#0x00
   308F F5                 8620 	push	af
   3090 33                 8621 	inc	sp
   3091 21r01s02           8622 	ld	hl,#_scoreA
   3094 E5                 8623 	push	hl
   3095 CDr58s1B           8624 	call	_GameObjScore_SetState
   3098 F1                 8625 	pop	af
   3099 33                 8626 	inc	sp
   309A 3E 01              8627 	ld	a,#0x01
   309C 32r21s02           8628 	ld	(#_scoreA + 32),a
                           8629 ;obj_youwin.c:131: GameObjScore_SetState(&scoreB, NORMAL); scoreB.is_show = TRUE;
   309F 3E 00              8630 	ld	a,#0x00
   30A1 F5                 8631 	push	af
   30A2 33                 8632 	inc	sp
   30A3 21r24s02           8633 	ld	hl,#_scoreB
   30A6 E5                 8634 	push	hl
   30A7 CDr58s1B           8635 	call	_GameObjScore_SetState
   30AA F1                 8636 	pop	af
   30AB 33                 8637 	inc	sp
   30AC 3E 01              8638 	ld	a,#0x01
   30AE 32r44s02           8639 	ld	(#_scoreB + 32),a
                           8640 ;obj_youwin.c:133: game.isSoundfxEnabled = FALSE;
   30B1 3E 00              8641 	ld	a,#0x00
   30B3 32rEFs02           8642 	ld	(#_game + 7),a
                           8643 ;obj_youwin.c:134: game.isMusicEnabled   = TRUE;
   30B6 3E 01              8644 	ld	a,#0x01
   30B8 32rF0s02           8645 	ld	(#_game + 8),a
   30BB                    8646 00105$:
   30BB DD E1              8647 	pop	ix
   30BD C9                 8648 	ret
   30BE                    8649 _helper_GameObjYouWin_StartAnimation_end::
                           8650 ;obj_gamemenu.c:1: void GameObjGameMenu_Init(GameObjGameMenu* this, int x, int y)
                           8651 ;	---------------------------------
                           8652 ; Function GameObjGameMenu_Init
                           8653 ; ---------------------------------
   30BE                    8654 _GameObjGameMenu_Init_start::
   30BE                    8655 _GameObjGameMenu_Init:
   30BE DD E5              8656 	push	ix
   30C0 DD 21 00 00        8657 	ld	ix,#0
   30C4 DD 39              8658 	add	ix,sp
                           8659 ;obj_gamemenu.c:4: GameObj_Init((GameObj*)this);
   30C6 DD 4E 04           8660 	ld	c,4 (ix)
   30C9 DD 46 05           8661 	ld	b,5 (ix)
   30CC C5                 8662 	push	bc
   30CD CDr55s13           8663 	call	_GameObj_Init
   30D0 F1                 8664 	pop	af
                           8665 ;obj_gamemenu.c:6: this->gobj.x = x;
   30D1 DD 4E 04           8666 	ld	c,4 (ix)
   30D4 DD 46 05           8667 	ld	b,5 (ix)
   30D7 69                 8668 	ld	l,c
   30D8 60                 8669 	ld	h,b
   30D9 23                 8670 	inc	hl
   30DA DD 7E 06           8671 	ld	a,6 (ix)
   30DD 77                 8672 	ld	(hl),a
   30DE 23                 8673 	inc	hl
   30DF DD 7E 07           8674 	ld	a,7 (ix)
   30E2 77                 8675 	ld	(hl),a
                           8676 ;obj_gamemenu.c:7: this->gobj.y = y;
   30E3 21 03 00           8677 	ld	hl,#0x0003
   30E6 09                 8678 	add	hl,bc
   30E7 DD 7E 08           8679 	ld	a,8 (ix)
   30EA 77                 8680 	ld	(hl),a
   30EB 23                 8681 	inc	hl
   30EC DD 7E 09           8682 	ld	a,9 (ix)
   30EF 77                 8683 	ld	(hl),a
                           8684 ;obj_gamemenu.c:8: this->gobj.width  = 0;
   30F0 21 05 00           8685 	ld	hl,#0x0005
   30F3 09                 8686 	add	hl,bc
   30F4 36 00              8687 	ld	(hl),#0x00
   30F6 23                 8688 	inc	hl
   30F7 36 00              8689 	ld	(hl),#0x00
                           8690 ;obj_gamemenu.c:9: this->gobj.height = 0;
   30F9 21 07 00           8691 	ld	hl,#0x0007
   30FC 09                 8692 	add	hl,bc
   30FD 36 00              8693 	ld	(hl),#0x00
   30FF 23                 8694 	inc	hl
   3100 36 00              8695 	ld	(hl),#0x00
                           8696 ;obj_gamemenu.c:11: this->gobj.pMoveFunc = &GameObjGameMenu_Move;
   3102 21 13 00           8697 	ld	hl,#0x0013
   3105 09                 8698 	add	hl,bc
   3106 5D                 8699 	ld	e,l
   3107 36r19              8700 	ld	(hl),#<_GameObjGameMenu_Move
   3109 23                 8701 	inc	hl
   310A 36s31              8702 	ld	(hl),#>_GameObjGameMenu_Move
                           8703 ;obj_gamemenu.c:12: this->gobj.pDrawFunc = &GameObjGameMenu_Draw;
   310C 21 15 00           8704 	ld	hl,#0x0015
   310F 09                 8705 	add	hl,bc
   3110 44                 8706 	ld	b,h
   3111 36r96              8707 	ld	(hl),#<_GameObjGameMenu_Draw
   3113 23                 8708 	inc	hl
   3114 36s31              8709 	ld	(hl),#>_GameObjGameMenu_Draw
   3116 DD E1              8710 	pop	ix
   3118 C9                 8711 	ret
   3119                    8712 _GameObjGameMenu_Init_end::
                           8713 ;obj_gamemenu.c:16: void GameObjGameMenu_Move(GameObjGameMenu* this)
                           8714 ;	---------------------------------
                           8715 ; Function GameObjGameMenu_Move
                           8716 ; ---------------------------------
   3119                    8717 _GameObjGameMenu_Move_start::
   3119                    8718 _GameObjGameMenu_Move:
   3119 DD E5              8719 	push	ix
   311B DD 21 00 00        8720 	ld	ix,#0
   311F DD 39              8721 	add	ix,sp
                           8722 ;obj_gamemenu.c:18: BOOL isBeginLevel = FALSE;
                           8723 ;obj_gamemenu.c:19: byte is_one_player_mode = FALSE;
   3121 01 00 00           8724 	ld	bc,#0x0000
                           8725 ;obj_gamemenu.c:22: if (game.game_state == MENU) {
   3124 21rE8s02           8726 	ld	hl,#_game
   3127 7E                 8727 	ld	a,(hl)
   3128 D6 01              8728 	sub	a,#0x01
   312A 20 42              8729 	jr	NZ,00110$
                           8730 ;obj_gamemenu.c:23: if(player1_input.fire1) {
   312C 11r36s03           8731 	ld	de,#_player1_input + 2
   312F 1A                 8732 	ld	a,(de)
   3130 B7                 8733 	or	a,a
   3131 28 06              8734 	jr	Z,00102$
                           8735 ;obj_gamemenu.c:24: player1_input.fire1 = FALSE;
   3133 3E 00              8736 	ld	a,#0x00
   3135 12                 8737 	ld	(de),a
                           8738 ;obj_gamemenu.c:25: isBeginLevel       = TRUE;
                           8739 ;obj_gamemenu.c:26: is_one_player_mode = TRUE;
   3136 01 01 01           8740 	ld	bc,#0x0101
   3139                    8741 00102$:
                           8742 ;obj_gamemenu.c:28: if(player2_input.fire1) {
   3139 11r3As03           8743 	ld	de,#_player2_input + 2
   313C 1A                 8744 	ld	a,(de)
   313D B7                 8745 	or	a,a
   313E 28 06              8746 	jr	Z,00104$
                           8747 ;obj_gamemenu.c:29: player2_input.fire1 = FALSE;
   3140 3E 00              8748 	ld	a,#0x00
   3142 12                 8749 	ld	(de),a
                           8750 ;obj_gamemenu.c:30: isBeginLevel       = TRUE;
                           8751 ;obj_gamemenu.c:31: is_one_player_mode = FALSE;
   3143 01 01 00           8752 	ld	bc,#0x0001
   3146                    8753 00104$:
                           8754 ;obj_gamemenu.c:34: if(Keyboard_GetLastPressedScancode() == SC_1) {
   3146 C5                 8755 	push	bc
   3147 CDr9As0D           8756 	call	_Keyboard_GetLastPressedScancode
   314A 5D                 8757 	ld	e,l
   314B C1                 8758 	pop	bc
   314C 7B                 8759 	ld	a,e
   314D D6 16              8760 	sub	a,#0x16
   314F 20 0A              8761 	jr	NZ,00106$
                           8762 ;obj_gamemenu.c:36: Game_RequestSetState(CREDITS);
   3151 C5                 8763 	push	bc
   3152 3E 02              8764 	ld	a,#0x02
   3154 F5                 8765 	push	af
   3155 33                 8766 	inc	sp
   3156 CDr3Ds3C           8767 	call	_Game_RequestSetState
   3159 33                 8768 	inc	sp
   315A C1                 8769 	pop	bc
   315B                    8770 00106$:
                           8771 ;obj_gamemenu.c:39: if(isBeginLevel) {
   315B AF                 8772 	xor	a,a
   315C B1                 8773 	or	a,c
   315D 28 0F              8774 	jr	Z,00110$
                           8775 ;obj_gamemenu.c:40: Game_RequestSetState(LEVEL);
   315F C5                 8776 	push	bc
   3160 3E 00              8777 	ld	a,#0x00
   3162 F5                 8778 	push	af
   3163 33                 8779 	inc	sp
   3164 CDr3Ds3C           8780 	call	_Game_RequestSetState
   3167 33                 8781 	inc	sp
   3168 C1                 8782 	pop	bc
                           8783 ;obj_gamemenu.c:41: game.is_one_player_mode = is_one_player_mode;
   3169 11rEBs02           8784 	ld	de,#_game + 3
   316C 78                 8785 	ld	a,b
   316D 12                 8786 	ld	(de),a
   316E                    8787 00110$:
                           8788 ;obj_gamemenu.c:47: if (game.game_state == CREDITS) {
   316E 21rE8s02           8789 	ld	hl,#_game
   3171 7E                 8790 	ld	a,(hl)
   3172 D6 02              8791 	sub	a,#0x02
   3174 20 1D              8792 	jr	NZ,00117$
                           8793 ;obj_gamemenu.c:50: if(Keyboard_GetLastPressedScancode() != 0 || player1_input.fire1 || player2_input.fire1) {
   3176 CDr9As0D           8794 	call	_Keyboard_GetLastPressedScancode
   3179 AF                 8795 	xor	a,a
   317A B5                 8796 	or	a,l
   317B 20 0E              8797 	jr	NZ,00111$
   317D 01r36s03           8798 	ld	bc,#_player1_input + 2
   3180 0A                 8799 	ld	a,(bc)
   3181 B7                 8800 	or	a,a
   3182 20 07              8801 	jr	NZ,00111$
   3184 01r3As03           8802 	ld	bc,#_player2_input + 2
   3187 0A                 8803 	ld	a,(bc)
   3188 B7                 8804 	or	a,a
   3189 28 08              8805 	jr	Z,00117$
   318B                    8806 00111$:
                           8807 ;obj_gamemenu.c:51: Game_RequestSetState(MENU);
   318B 3E 01              8808 	ld	a,#0x01
   318D F5                 8809 	push	af
   318E 33                 8810 	inc	sp
   318F CDr3Ds3C           8811 	call	_Game_RequestSetState
   3192 33                 8812 	inc	sp
   3193                    8813 00117$:
   3193 DD E1              8814 	pop	ix
   3195 C9                 8815 	ret
   3196                    8816 _GameObjGameMenu_Move_end::
                           8817 ;obj_gamemenu.c:56: void GameObjGameMenu_Draw(GameObjGameMenu* this)
                           8818 ;	---------------------------------
                           8819 ; Function GameObjGameMenu_Draw
                           8820 ; ---------------------------------
   3196                    8821 _GameObjGameMenu_Draw_start::
   3196                    8822 _GameObjGameMenu_Draw:
   3196 DD E5              8823 	push	ix
   3198 DD 21 00 00        8824 	ld	ix,#0
   319C DD 39              8825 	add	ix,sp
                           8826 ;obj_gamemenu.c:58: this;
   319E DD E1              8827 	pop	ix
   31A0 C9                 8828 	ret
   31A1                    8829 _GameObjGameMenu_Draw_end::
                           8830 ;ai.c:3: void ai_update(void)
                           8831 ;	---------------------------------
                           8832 ; Function ai_update
                           8833 ; ---------------------------------
   31A1                    8834 _ai_update_start::
   31A1                    8835 _ai_update:
   31A1 DD E5              8836 	push	ix
   31A3 DD 21 00 00        8837 	ld	ix,#0
   31A7 DD 39              8838 	add	ix,sp
   31A9 21 FA FF           8839 	ld	hl,#-6
   31AC 39                 8840 	add	hl,sp
   31AD F9                 8841 	ld	sp,hl
                           8842 ;ai.c:11: int rocketY = batA.rocket->gobj.y;
   31AE 01r63s02           8843 	ld	bc,#_batA + 28
   31B1 69                 8844 	ld	l,c
   31B2 60                 8845 	ld	h,b
   31B3 7E                 8846 	ld	a,(hl)
   31B4 DD 77 FA           8847 	ld	-6 (ix),a
   31B7 23                 8848 	inc	hl
   31B8 7E                 8849 	ld	a,(hl)
   31B9 DD 77 FB           8850 	ld	-5 (ix),a
   31BC DD 7E FA           8851 	ld	a,-6 (ix)
   31BF C6 03              8852 	add	a,#0x03
   31C1 6F                 8853 	ld	l, a
   31C2 DD 7E FB           8854 	ld	a, -5 (ix)
   31C5 CE 00              8855 	adc	a, #0x00
   31C7 67                 8856 	ld	h,a
   31C8 5E                 8857 	ld	e,(hl)
   31C9 23                 8858 	inc	hl
   31CA 56                 8859 	ld	d,(hl)
   31CB DD 73 FE           8860 	ld	-2 (ix),e
   31CE DD 72 FF           8861 	ld	-1 (ix),d
                           8862 ;ai.c:12: int rocketX = batA.rocket->gobj.x;
   31D1 DD 5E FA           8863 	ld	e,-6 (ix)
   31D4 DD 56 FB           8864 	ld	d,-5 (ix)
   31D7 EB                 8865 	ex	de,hl
   31D8 23                 8866 	inc	hl
   31D9 5E                 8867 	ld	e,(hl)
   31DA 23                 8868 	inc	hl
   31DB 56                 8869 	ld	d,(hl)
   31DC DD 73 FC           8870 	ld	-4 (ix),e
   31DF DD 72 FD           8871 	ld	-3 (ix),d
                           8872 ;ai.c:13: if(batA.rocket && batA.rocket->gobj.in_use &&
   31E2 69                 8873 	ld	l,c
   31E3 60                 8874 	ld	h,b
   31E4 5E                 8875 	ld	e,(hl)
   31E5 23                 8876 	inc	hl
   31E6 56                 8877 	ld	d,(hl)
   31E7 7B                 8878 	ld	a,e
   31E8 B2                 8879 	or	a,d
   31E9 CAr36s32           8880 	jp	Z,00102$
   31EC 69                 8881 	ld	l,c
   31ED 60                 8882 	ld	h,b
   31EE 4E                 8883 	ld	c,(hl)
   31EF 23                 8884 	inc	hl
   31F0 46                 8885 	ld	b,(hl)
   31F1 0A                 8886 	ld	a,(bc)
   31F2 B7                 8887 	or	a,a
   31F3 28 41              8888 	jr	Z,00102$
                           8889 ;ai.c:14: rocketY > batB.gobj.y && rocketY < batB.gobj.y + batB.gobj.height &&
   31F5 21r6As02           8890 	ld	hl, #_batB + 3
   31F8 4E                 8891 	ld	c,(hl)
   31F9 23                 8892 	inc	hl
   31FA 46                 8893 	ld	b,(hl)
   31FB 79                 8894 	ld	a,c
   31FC DD 96 FE           8895 	sub	a,-2 (ix)
   31FF 78                 8896 	ld	a,b
   3200 DD 9E FF           8897 	sbc	a,-1 (ix)
   3203 F2r36s32           8898 	jp	P,00102$
   3206 11r6Es02           8899 	ld	de,#_batB + 7
   3209 EB                 8900 	ex	de,hl
   320A 5E                 8901 	ld	e,(hl)
   320B 23                 8902 	inc	hl
   320C 56                 8903 	ld	d,(hl)
   320D 79                 8904 	ld	a,c
   320E 83                 8905 	add	a,e
   320F 4F                 8906 	ld	c,a
   3210 78                 8907 	ld	a,b
   3211 8A                 8908 	adc	a,d
   3212 47                 8909 	ld	b,a
   3213 DD 7E FE           8910 	ld	a,-2 (ix)
   3216 91                 8911 	sub	a,c
   3217 DD 7E FF           8912 	ld	a,-1 (ix)
   321A 98                 8913 	sbc	a,b
   321B F2r36s32           8914 	jp	P,00102$
                           8915 ;ai.c:15: rocketX > SCREEN_WIDTH/2) {
   321E 3E B8              8916 	ld	a,#0xB8
   3220 DD 96 FC           8917 	sub	a,-4 (ix)
   3223 3E 00              8918 	ld	a,#0x00
   3225 DD 9E FD           8919 	sbc	a,-3 (ix)
   3228 F2r36s32           8920 	jp	P,00102$
                           8921 ;ai.c:17: GameObjBat_MoveUp(&batB); return;
   322B 21r67s02           8922 	ld	hl,#_batB
   322E E5                 8923 	push	hl
   322F CDr6Bs24           8924 	call	_GameObjBat_MoveUp
   3232 F1                 8925 	pop	af
   3233 C3r18s33           8926 	jp	00118$
   3236                    8927 00102$:
                           8928 ;ai.c:20: if(ball1.gobj.y <  batB.gobj.y + batB.gobj.height/2)
   3236 21r8As02           8929 	ld	hl, #_ball1 + 3
   3239 4E                 8930 	ld	c,(hl)
   323A 23                 8931 	inc	hl
   323B 46                 8932 	ld	b,(hl)
   323C 11r6As02           8933 	ld	de,#_batB + 3
   323F EB                 8934 	ex	de,hl
   3240 7E                 8935 	ld	a,(hl)
   3241 DD 77 FA           8936 	ld	-6 (ix),a
   3244 23                 8937 	inc	hl
   3245 7E                 8938 	ld	a,(hl)
   3246 DD 77 FB           8939 	ld	-5 (ix),a
   3249 11r6Es02           8940 	ld	de,#_batB + 7
   324C EB                 8941 	ex	de,hl
   324D 5E                 8942 	ld	e,(hl)
   324E 23                 8943 	inc	hl
   324F 56                 8944 	ld	d,(hl)
   3250 C5                 8945 	push	bc
   3251 21 02 00           8946 	ld	hl,#0x0002
   3254 E5                 8947 	push	hl
   3255 D5                 8948 	push	de
   3256 CDr00s00           8949 	call	__divsint_rrx_s
   3259 F1                 8950 	pop	af
   325A F1                 8951 	pop	af
   325B 54                 8952 	ld	d,h
   325C 5D                 8953 	ld	e,l
   325D C1                 8954 	pop	bc
   325E DD 7E FA           8955 	ld	a,-6 (ix)
   3261 83                 8956 	add	a,e
   3262 5F                 8957 	ld	e,a
   3263 DD 7E FB           8958 	ld	a,-5 (ix)
   3266 8A                 8959 	adc	a,d
   3267 57                 8960 	ld	d,a
   3268 79                 8961 	ld	a,c
   3269 93                 8962 	sub	a,e
   326A 78                 8963 	ld	a,b
   326B 9A                 8964 	sbc	a,d
   326C F2r77s32           8965 	jp	P,00108$
                           8966 ;ai.c:21: GameObjBat_MoveUp(&batB);      //movebat ('J');
   326F 21r67s02           8967 	ld	hl,#_batB
   3272 E5                 8968 	push	hl
   3273 CDr6Bs24           8969 	call	_GameObjBat_MoveUp
   3276 F1                 8970 	pop	af
   3277                    8971 00108$:
                           8972 ;ai.c:22: if(ball1.gobj.y >  batB.gobj.y + batB.gobj.height/2)
   3277 21r8As02           8973 	ld	hl, #_ball1 + 3
   327A 4E                 8974 	ld	c,(hl)
   327B 23                 8975 	inc	hl
   327C 46                 8976 	ld	b,(hl)
   327D 11r6As02           8977 	ld	de,#_batB + 3
   3280 EB                 8978 	ex	de,hl
   3281 7E                 8979 	ld	a,(hl)
   3282 DD 77 FA           8980 	ld	-6 (ix),a
   3285 23                 8981 	inc	hl
   3286 7E                 8982 	ld	a,(hl)
   3287 DD 77 FB           8983 	ld	-5 (ix),a
   328A 11r6Es02           8984 	ld	de,#_batB + 7
   328D EB                 8985 	ex	de,hl
   328E 5E                 8986 	ld	e,(hl)
   328F 23                 8987 	inc	hl
   3290 56                 8988 	ld	d,(hl)
   3291 C5                 8989 	push	bc
   3292 21 02 00           8990 	ld	hl,#0x0002
   3295 E5                 8991 	push	hl
   3296 D5                 8992 	push	de
   3297 CDr00s00           8993 	call	__divsint_rrx_s
   329A F1                 8994 	pop	af
   329B F1                 8995 	pop	af
   329C EB                 8996 	ex	de,hl
   329D C1                 8997 	pop	bc
   329E DD 7E FA           8998 	ld	a,-6 (ix)
   32A1 83                 8999 	add	a,e
   32A2 5F                 9000 	ld	e,a
   32A3 DD 7E FB           9001 	ld	a,-5 (ix)
   32A6 8A                 9002 	adc	a,d
   32A7 57                 9003 	ld	d,a
   32A8 7B                 9004 	ld	a,e
   32A9 91                 9005 	sub	a,c
   32AA 7A                 9006 	ld	a,d
   32AB 98                 9007 	sbc	a,b
   32AC F2rB7s32           9008 	jp	P,00110$
                           9009 ;ai.c:23: GameObjBat_MoveDown(&batB);      //movebat ('M');
   32AF 21r67s02           9010 	ld	hl,#_batB
   32B2 E5                 9011 	push	hl
   32B3 CDr9Bs24           9012 	call	_GameObjBat_MoveDown
   32B6 F1                 9013 	pop	af
   32B7                    9014 00110$:
                           9015 ;ai.c:25: if(GameObjBat_IsCanFireWithRocket(&batB))
   32B7 21r67s02           9016 	ld	hl,#_batB
   32BA E5                 9017 	push	hl
   32BB CDrFDs25           9018 	call	_GameObjBat_IsCanFireWithRocket
   32BE F1                 9019 	pop	af
   32BF AF                 9020 	xor	a,a
   32C0 B5                 9021 	or	a,l
   32C1 CAr18s33           9022 	jp	Z,00118$
                           9023 ;ai.c:26: if(ball1.speedx < 0 && ball1.speedy == 0 &&
   32C4 21rA0s02           9024 	ld	hl, #_ball1 + 25
   32C7 4E                 9025 	ld	c,(hl)
   32C8 23                 9026 	inc	hl
   32C9 46                 9027 	ld	b,(hl)
   32CA 78                 9028 	ld	a,b
   32CB CB 7F              9029 	bit	7,a
   32CD CAr18s33           9030 	jp	Z,00118$
   32D0 21rA2s02           9031 	ld	hl, #_ball1 + 27
   32D3 4E                 9032 	ld	c,(hl)
   32D4 23                 9033 	inc	hl
   32D5 46                 9034 	ld	b,(hl)
   32D6 79                 9035 	ld	a,c
   32D7 B0                 9036 	or	a,b
   32D8 20 3E              9037 	jr	NZ,00118$
                           9038 ;ai.c:27: ball1.gobj.y > batB.gobj.y &&  ball1.gobj.y < batB.gobj.y + batB.gobj.height)     // /*(RAND() & 0x1F) == 0*/)
   32DA 21r8As02           9039 	ld	hl, #_ball1 + 3
   32DD 4E                 9040 	ld	c,(hl)
   32DE 23                 9041 	inc	hl
   32DF 46                 9042 	ld	b,(hl)
   32E0 11r6As02           9043 	ld	de,#_batB + 3
   32E3 EB                 9044 	ex	de,hl
   32E4 7E                 9045 	ld	a,(hl)
   32E5 DD 77 FA           9046 	ld	-6 (ix),a
   32E8 23                 9047 	inc	hl
   32E9 7E                 9048 	ld	a,(hl)
   32EA DD 77 FB           9049 	ld	-5 (ix),a
   32ED DD 7E FA           9050 	ld	a,-6 (ix)
   32F0 91                 9051 	sub	a,c
   32F1 DD 7E FB           9052 	ld	a,-5 (ix)
   32F4 98                 9053 	sbc	a,b
   32F5 F2r18s33           9054 	jp	P,00118$
   32F8 11r6Es02           9055 	ld	de,#_batB + 7
   32FB EB                 9056 	ex	de,hl
   32FC 5E                 9057 	ld	e,(hl)
   32FD 23                 9058 	inc	hl
   32FE 56                 9059 	ld	d,(hl)
   32FF DD 7E FA           9060 	ld	a,-6 (ix)
   3302 83                 9061 	add	a,e
   3303 5F                 9062 	ld	e,a
   3304 DD 7E FB           9063 	ld	a,-5 (ix)
   3307 8A                 9064 	adc	a,d
   3308 57                 9065 	ld	d,a
   3309 79                 9066 	ld	a,c
   330A 93                 9067 	sub	a,e
   330B 78                 9068 	ld	a,b
   330C 9A                 9069 	sbc	a,d
   330D F2r18s33           9070 	jp	P,00118$
                           9071 ;ai.c:28: GameObjBat_Fire(&batB);
   3310 21r67s02           9072 	ld	hl,#_batB
   3313 E5                 9073 	push	hl
   3314 CDr4Fs25           9074 	call	_GameObjBat_Fire
   3317 F1                 9075 	pop	af
   3318                    9076 00118$:
   3318 DD F9              9077 	ld	sp,ix
   331A DD E1              9078 	pop	ix
   331C C9                 9079 	ret
   331D                    9080 _ai_update_end::
                           9081 ;sound_fx/sound_fx.c:8: BOOL Sound_LoadSoundCode(void)
                           9082 ;	---------------------------------
                           9083 ; Function Sound_LoadSoundCode
                           9084 ; ---------------------------------
   331D                    9085 _Sound_LoadSoundCode_start::
   331D                    9086 _Sound_LoadSoundCode:
                           9087 ;sound_fx/sound_fx.c:10: return load_file_to_buffer("SFXPROXY.BIN", 0, (byte*)SOUND_FX_CODE,
   331D 3E 01              9088 	ld	a,#0x01
   331F F5                 9089 	push	af
   3320 33                 9090 	inc	sp
   3321 21 00 00           9091 	ld	hl,#0x0000
   3324 E5                 9092 	push	hl
   3325 21 00 20           9093 	ld	hl,#0x2000
   3328 E5                 9094 	push	hl
   3329 26 80              9095 	ld	h, #0x80
   332B E5                 9096 	push	hl
   332C 21 00 00           9097 	ld	hl,#0x0000
   332F E5                 9098 	push	hl
   3330 21 00 00           9099 	ld	hl,#0x0000
   3333 E5                 9100 	push	hl
   3334 21r44s33           9101 	ld	hl,#__str_8
   3337 E5                 9102 	push	hl
   3338 CDrECs02           9103 	call	_load_file_to_buffer
   333B FD 21 0D 00        9104 	ld	iy,#0x000D
   333F FD 39              9105 	add	iy,sp
   3341 FD F9              9106 	ld	sp,iy
   3343 C9                 9107 	ret
   3344                    9108 _Sound_LoadSoundCode_end::
   3344                    9109 __str_8:
   3344 53 46 58 50 52 4F  9110 	.ascii "SFXPROXY.BIN"
        58 59 2E 42 49 4E
   3350 00                 9111 	.db 0x00
                           9112 ;sound_fx/sound_fx.c:14: BOOL Sound_LoadSounds(void)
                           9113 ;	---------------------------------
                           9114 ; Function Sound_LoadSounds
                           9115 ; ---------------------------------
   3351                    9116 _Sound_LoadSounds_start::
   3351                    9117 _Sound_LoadSounds:
                           9118 ;sound_fx/sound_fx.c:19: return load_file_to_buffer("SFX.SAM", 0, sfx_samples_addr, 65536, sfx_samples_bank);
   3351 3E 03              9119 	ld	a,#0x03
   3353 F5                 9120 	push	af
   3354 33                 9121 	inc	sp
   3355 21 01 00           9122 	ld	hl,#0x0001
   3358 E5                 9123 	push	hl
   3359 21 00 00           9124 	ld	hl,#0x10000
   335C E5                 9125 	push	hl
   335D 26 80              9126 	ld	h, #0x80
   335F E5                 9127 	push	hl
   3360 21 00 00           9128 	ld	hl,#0x0000
   3363 E5                 9129 	push	hl
   3364 21 00 00           9130 	ld	hl,#0x0000
   3367 E5                 9131 	push	hl
   3368 21r78s33           9132 	ld	hl,#__str_9
   336B E5                 9133 	push	hl
   336C CDrECs02           9134 	call	_load_file_to_buffer
   336F FD 21 0D 00        9135 	ld	iy,#0x000D
   3373 FD 39              9136 	add	iy,sp
   3375 FD F9              9137 	ld	sp,iy
   3377 C9                 9138 	ret
   3378                    9139 _Sound_LoadSounds_end::
   3378                    9140 __str_9:
   3378 53 46 58 2E 53 41  9141 	.ascii "SFX.SAM"
        4D
   337F 00                 9142 	.db 0x00
                           9143 ;sound_fx/sound_fx.c:25: BOOL Sound_LoadFxDescriptors(void)
                           9144 ;	---------------------------------
                           9145 ; Function Sound_LoadFxDescriptors
                           9146 ; ---------------------------------
   3380                    9147 _Sound_LoadFxDescriptors_start::
   3380                    9148 _Sound_LoadFxDescriptors:
                           9149 ;sound_fx/sound_fx.c:27: return load_file_to_buffer("ALL_FX.BIN", 0, (byte*)SOUND_FX_DESC, 464, BANK_MUSIC_STUFF);
   3380 3E 01              9150 	ld	a,#0x01
   3382 F5                 9151 	push	af
   3383 33                 9152 	inc	sp
   3384 21 00 00           9153 	ld	hl,#0x0000
   3387 E5                 9154 	push	hl
   3388 21 D0 01           9155 	ld	hl,#0x01D0
   338B E5                 9156 	push	hl
   338C 21 00 A0           9157 	ld	hl,#0xA000
   338F E5                 9158 	push	hl
   3390 21 00 00           9159 	ld	hl,#0x0000
   3393 E5                 9160 	push	hl
   3394 21 00 00           9161 	ld	hl,#0x0000
   3397 E5                 9162 	push	hl
   3398 21rA8s33           9163 	ld	hl,#__str_10
   339B E5                 9164 	push	hl
   339C CDrECs02           9165 	call	_load_file_to_buffer
   339F FD 21 0D 00        9166 	ld	iy,#0x000D
   33A3 FD 39              9167 	add	iy,sp
   33A5 FD F9              9168 	ld	sp,iy
   33A7 C9                 9169 	ret
   33A8                    9170 _Sound_LoadFxDescriptors_end::
   33A8                    9171 __str_10:
   33A8 41 4C 4C 5F 46 58  9172 	.ascii "ALL_FX.BIN"
        2E 42 49 4E
   33B2 00                 9173 	.db 0x00
                           9174 ;sound_fx/sound_fx.c:32: void Sound_InitFx()
                           9175 ;	---------------------------------
                           9176 ; Function Sound_InitFx
                           9177 ; ---------------------------------
   33B3                    9178 _Sound_InitFx_start::
   33B3                    9179 _Sound_InitFx:
                           9180 ;sound_fx/sound_fx.c:49: Sound_AddFxDesc(0, (SOUND_FX*) (SOUND_FX_DESC + 0x00) );
   33B3 21 00 A0           9181 	ld	hl,#0xA000
   33B6 E5                 9182 	push	hl
   33B7 3E 00              9183 	ld	a,#0x00
   33B9 F5                 9184 	push	af
   33BA 33                 9185 	inc	sp
   33BB CDr00s00           9186 	call	_Sound_AddFxDesc
   33BE F1                 9187 	pop	af
   33BF 33                 9188 	inc	sp
                           9189 ;sound_fx/sound_fx.c:50: Sound_AddFxDesc(1, (SOUND_FX*) (SOUND_FX_DESC + 0x20) );
   33C0 21 20 A0           9190 	ld	hl,#0xA020
   33C3 E5                 9191 	push	hl
   33C4 3E 01              9192 	ld	a,#0x01
   33C6 F5                 9193 	push	af
   33C7 33                 9194 	inc	sp
   33C8 CDr00s00           9195 	call	_Sound_AddFxDesc
   33CB F1                 9196 	pop	af
   33CC 33                 9197 	inc	sp
                           9198 ;sound_fx/sound_fx.c:51: Sound_AddFxDesc(2, (SOUND_FX*) (SOUND_FX_DESC + 0x50) );
   33CD 21 50 A0           9199 	ld	hl,#0xA050
   33D0 E5                 9200 	push	hl
   33D1 3E 02              9201 	ld	a,#0x02
   33D3 F5                 9202 	push	af
   33D4 33                 9203 	inc	sp
   33D5 CDr00s00           9204 	call	_Sound_AddFxDesc
   33D8 F1                 9205 	pop	af
   33D9 33                 9206 	inc	sp
                           9207 ;sound_fx/sound_fx.c:52: Sound_AddFxDesc(3, (SOUND_FX*) (SOUND_FX_DESC + 0x70) );
   33DA 21 70 A0           9208 	ld	hl,#0xA070
   33DD E5                 9209 	push	hl
   33DE 3E 03              9210 	ld	a,#0x03
   33E0 F5                 9211 	push	af
   33E1 33                 9212 	inc	sp
   33E2 CDr00s00           9213 	call	_Sound_AddFxDesc
   33E5 F1                 9214 	pop	af
   33E6 33                 9215 	inc	sp
                           9216 ;sound_fx/sound_fx.c:53: Sound_AddFxDesc(4, (SOUND_FX*) (SOUND_FX_DESC + 0x90) );
   33E7 21 90 A0           9217 	ld	hl,#0xA090
   33EA E5                 9218 	push	hl
   33EB 3E 04              9219 	ld	a,#0x04
   33ED F5                 9220 	push	af
   33EE 33                 9221 	inc	sp
   33EF CDr00s00           9222 	call	_Sound_AddFxDesc
   33F2 F1                 9223 	pop	af
   33F3 33                 9224 	inc	sp
                           9225 ;sound_fx/sound_fx.c:55: Sound_AddFxDesc(5, (SOUND_FX*) (SOUND_FX_DESC + 0xc0) );
   33F4 21 C0 A0           9226 	ld	hl,#0xA0C0
   33F7 E5                 9227 	push	hl
   33F8 3E 05              9228 	ld	a,#0x05
   33FA F5                 9229 	push	af
   33FB 33                 9230 	inc	sp
   33FC CDr00s00           9231 	call	_Sound_AddFxDesc
   33FF F1                 9232 	pop	af
   3400 33                 9233 	inc	sp
                           9234 ;sound_fx/sound_fx.c:56: Sound_AddFxDesc(6, (SOUND_FX*) (SOUND_FX_DESC + 0xe0) );
   3401 21 E0 A0           9235 	ld	hl,#0xA0E0
   3404 E5                 9236 	push	hl
   3405 3E 06              9237 	ld	a,#0x06
   3407 F5                 9238 	push	af
   3408 33                 9239 	inc	sp
   3409 CDr00s00           9240 	call	_Sound_AddFxDesc
   340C F1                 9241 	pop	af
   340D 33                 9242 	inc	sp
                           9243 ;sound_fx/sound_fx.c:57: Sound_AddFxDesc(7, (SOUND_FX*) (SOUND_FX_DESC + 0x100) );
   340E 21 00 A1           9244 	ld	hl,#0xA100
   3411 E5                 9245 	push	hl
   3412 3E 07              9246 	ld	a,#0x07
   3414 F5                 9247 	push	af
   3415 33                 9248 	inc	sp
   3416 CDr00s00           9249 	call	_Sound_AddFxDesc
   3419 F1                 9250 	pop	af
   341A 33                 9251 	inc	sp
                           9252 ;sound_fx/sound_fx.c:58: Sound_AddFxDesc(8, (SOUND_FX*) (SOUND_FX_DESC + 0x120) );
   341B 21 20 A1           9253 	ld	hl,#0xA120
   341E E5                 9254 	push	hl
   341F 3E 08              9255 	ld	a,#0x08
   3421 F5                 9256 	push	af
   3422 33                 9257 	inc	sp
   3423 CDr00s00           9258 	call	_Sound_AddFxDesc
   3426 F1                 9259 	pop	af
   3427 33                 9260 	inc	sp
                           9261 ;sound_fx/sound_fx.c:59: Sound_AddFxDesc(9, (SOUND_FX*) (SOUND_FX_DESC + 0x140) );
   3428 21 40 A1           9262 	ld	hl,#0xA140
   342B E5                 9263 	push	hl
   342C 3E 09              9264 	ld	a,#0x09
   342E F5                 9265 	push	af
   342F 33                 9266 	inc	sp
   3430 CDr00s00           9267 	call	_Sound_AddFxDesc
   3433 F1                 9268 	pop	af
   3434 33                 9269 	inc	sp
                           9270 ;sound_fx/sound_fx.c:60: Sound_AddFxDesc(10, (SOUND_FX*) (SOUND_FX_DESC + 0x150) );
   3435 21 50 A1           9271 	ld	hl,#0xA150
   3438 E5                 9272 	push	hl
   3439 3E 0A              9273 	ld	a,#0x0A
   343B F5                 9274 	push	af
   343C 33                 9275 	inc	sp
   343D CDr00s00           9276 	call	_Sound_AddFxDesc
   3440 F1                 9277 	pop	af
   3441 33                 9278 	inc	sp
                           9279 ;sound_fx/sound_fx.c:61: Sound_AddFxDesc(11, (SOUND_FX*) (SOUND_FX_DESC + 0x170) );
   3442 21 70 A1           9280 	ld	hl,#0xA170
   3445 E5                 9281 	push	hl
   3446 3E 0B              9282 	ld	a,#0x0B
   3448 F5                 9283 	push	af
   3449 33                 9284 	inc	sp
   344A CDr00s00           9285 	call	_Sound_AddFxDesc
   344D F1                 9286 	pop	af
   344E 33                 9287 	inc	sp
                           9288 ;sound_fx/sound_fx.c:62: Sound_AddFxDesc(12, (SOUND_FX*) (SOUND_FX_DESC + 0x180) );
   344F 21 80 A1           9289 	ld	hl,#0xA180
   3452 E5                 9290 	push	hl
   3453 3E 0C              9291 	ld	a,#0x0C
   3455 F5                 9292 	push	af
   3456 33                 9293 	inc	sp
   3457 CDr00s00           9294 	call	_Sound_AddFxDesc
   345A F1                 9295 	pop	af
   345B 33                 9296 	inc	sp
                           9297 ;sound_fx/sound_fx.c:63: Sound_AddFxDesc(13, (SOUND_FX*) (SOUND_FX_DESC + 0x190) );
   345C 21 90 A1           9298 	ld	hl,#0xA190
   345F E5                 9299 	push	hl
   3460 3E 0D              9300 	ld	a,#0x0D
   3462 F5                 9301 	push	af
   3463 33                 9302 	inc	sp
   3464 CDr00s00           9303 	call	_Sound_AddFxDesc
   3467 F1                 9304 	pop	af
   3468 33                 9305 	inc	sp
                           9306 ;sound_fx/sound_fx.c:64: Sound_AddFxDesc(14, (SOUND_FX*) (SOUND_FX_DESC + 0x1a0) );
   3469 21 A0 A1           9307 	ld	hl,#0xA1A0
   346C E5                 9308 	push	hl
   346D 3E 0E              9309 	ld	a,#0x0E
   346F F5                 9310 	push	af
   3470 33                 9311 	inc	sp
   3471 CDr00s00           9312 	call	_Sound_AddFxDesc
   3474 F1                 9313 	pop	af
   3475 33                 9314 	inc	sp
                           9315 ;sound_fx/sound_fx.c:65: Sound_AddFxDesc(15, (SOUND_FX*) (SOUND_FX_DESC + 0x1b0) );
   3476 21 B0 A1           9316 	ld	hl,#0xA1B0
   3479 E5                 9317 	push	hl
   347A 3E 0F              9318 	ld	a,#0x0F
   347C F5                 9319 	push	af
   347D 33                 9320 	inc	sp
   347E CDr00s00           9321 	call	_Sound_AddFxDesc
   3481 F1                 9322 	pop	af
   3482 33                 9323 	inc	sp
   3483 C9                 9324 	ret
   3484                    9325 _Sound_InitFx_end::
                           9326 ;sound_fx/sound_fx.c:72: byte Mod_FindHighestUsedPattern(const byte* pPatternData)
                           9327 ;	---------------------------------
                           9328 ; Function Mod_FindHighestUsedPattern
                           9329 ; ---------------------------------
   3484                    9330 _Mod_FindHighestUsedPattern_start::
   3484                    9331 _Mod_FindHighestUsedPattern:
   3484 DD E5              9332 	push	ix
   3486 DD 21 00 00        9333 	ld	ix,#0
   348A DD 39              9334 	add	ix,sp
                           9335 ;sound_fx/sound_fx.c:75: byte pat = 0;
                           9336 ;sound_fx/sound_fx.c:76: for(i=0; i<128; i++)
   348C 01 00 00           9337 	ld	bc,#0x0000
   348F                    9338 00103$:
   348F 78                 9339 	ld	a,b
   3490 D6 80              9340 	sub	a,#0x80
   3492 30 15              9341 	jr	NC,00106$
                           9342 ;sound_fx/sound_fx.c:77: if(pPatternData[i] > pat)
   3494 DD 7E 04           9343 	ld	a,4 (ix)
   3497 80                 9344 	add	a,b
   3498 5F                 9345 	ld	e,a
   3499 DD 7E 05           9346 	ld	a,5 (ix)
   349C CE 00              9347 	adc	a,#0x00
   349E 57                 9348 	ld	d,a
   349F 1A                 9349 	ld	a,(de)
   34A0 5F                 9350 	ld	e,a
   34A1 79                 9351 	ld	a,c
   34A2 93                 9352 	sub	a,e
   34A3 30 01              9353 	jr	NC,00105$
                           9354 ;sound_fx/sound_fx.c:78: pat = pPatternData[i];
   34A5 4B                 9355 	ld	c,e
   34A6                    9356 00105$:
                           9357 ;sound_fx/sound_fx.c:76: for(i=0; i<128; i++)
   34A6 04                 9358 	inc	b
   34A7 18 E6              9359 	jr	00103$
   34A9                    9360 00106$:
                           9361 ;sound_fx/sound_fx.c:80: return pat;
   34A9 69                 9362 	ld	l,c
   34AA DD E1              9363 	pop	ix
   34AC C9                 9364 	ret
   34AD                    9365 _Mod_FindHighestUsedPattern_end::
                           9366 ;sound_fx/sound_fx.c:85: BOOL Mod_LoadMusicModule(const char* pFilename)
                           9367 ;	---------------------------------
                           9368 ; Function Mod_LoadMusicModule
                           9369 ; ---------------------------------
   34AD                    9370 _Mod_LoadMusicModule_start::
   34AD                    9371 _Mod_LoadMusicModule:
   34AD DD E5              9372 	push	ix
   34AF DD 21 00 00        9373 	ld	ix,#0
   34B3 DD 39              9374 	add	ix,sp
   34B5 21 ED FF           9375 	ld	hl,#-19
   34B8 39                 9376 	add	hl,sp
   34B9 F9                 9377 	ld	sp,hl
                           9378 ;sound_fx/sound_fx.c:95: r = diag__FLOS_FindFile(&myFile, pFilename);
   34BA 21 0C 00           9379 	ld	hl,#0x000C
   34BD 39                 9380 	add	hl,sp
   34BE 4D                 9381 	ld	c,l
   34BF 44                 9382 	ld	b,h
   34C0 DD 6E 04           9383 	ld	l,4 (ix)
   34C3 DD 66 05           9384 	ld	h,5 (ix)
   34C6 E5                 9385 	push	hl
   34C7 C5                 9386 	push	bc
   34C8 CDr5As03           9387 	call	_diag__FLOS_FindFile
   34CB F1                 9388 	pop	af
   34CC F1                 9389 	pop	af
   34CD 7D                 9390 	ld	a,l
                           9391 ;sound_fx/sound_fx.c:96: if(!r) return FALSE;
   34CE B7                 9392 	or	a,a
   34CF 20 04              9393 	jr	NZ,00102$
   34D1 6F                 9394 	ld	l,a
   34D2 C3rE5s35           9395 	jp	00109$
   34D5                    9396 00102$:
                           9397 ;sound_fx/sound_fx.c:97: fileLen = myFile.size;
   34D5 21 0C 00           9398 	ld	hl,#0x000C
   34D8 39                 9399 	add	hl,sp
   34D9 23                 9400 	inc	hl
   34DA 23                 9401 	inc	hl
   34DB 23                 9402 	inc	hl
   34DC 4E                 9403 	ld	c,(hl)
   34DD 23                 9404 	inc	hl
   34DE 46                 9405 	ld	b,(hl)
   34DF 23                 9406 	inc	hl
   34E0 5E                 9407 	ld	e,(hl)
   34E1 23                 9408 	inc	hl
   34E2 56                 9409 	ld	d,(hl)
   34E3 DD 71 F5           9410 	ld	-11 (ix),c
   34E6 DD 70 F6           9411 	ld	-10 (ix),b
   34E9 DD 73 F7           9412 	ld	-9 (ix),e
   34EC DD 72 F8           9413 	ld	-8 (ix),d
                           9414 ;sound_fx/sound_fx.c:100: if(!load_file_to_buffer(pFilename, 0, bufModFileHeader, 1084, 0))
   34EF 3E 00              9415 	ld	a,#0x00
   34F1 F5                 9416 	push	af
   34F2 33                 9417 	inc	sp
   34F3 21 00 00           9418 	ld	hl,#0x0000
   34F6 E5                 9419 	push	hl
   34F7 21 3C 04           9420 	ld	hl,#0x043C
   34FA E5                 9421 	push	hl
   34FB 21r2Ds06           9422 	ld	hl,#_bufModFileHeader
   34FE E5                 9423 	push	hl
   34FF 21 00 00           9424 	ld	hl,#0x0000
   3502 E5                 9425 	push	hl
   3503 21 00 00           9426 	ld	hl,#0x0000
   3506 E5                 9427 	push	hl
   3507 DD 6E 04           9428 	ld	l,4 (ix)
   350A DD 66 05           9429 	ld	h,5 (ix)
   350D E5                 9430 	push	hl
   350E CDrECs02           9431 	call	_load_file_to_buffer
   3511 FD 21 0D 00        9432 	ld	iy,#0x000D
   3515 FD 39              9433 	add	iy,sp
   3517 FD F9              9434 	ld	sp,iy
                           9435 ;sound_fx/sound_fx.c:101: return FALSE;
   3519 AF                 9436 	xor	a,a
   351A B5                 9437 	or	a,l
   351B 20 04              9438 	jr	NZ,00104$
   351D 6F                 9439 	ld	l,a
   351E C3rE5s35           9440 	jp	00109$
   3521                    9441 00104$:
                           9442 ;sound_fx/sound_fx.c:105: pat = Mod_FindHighestUsedPattern(bufModFileHeader + 952);
   3521 01rE5s09           9443 	ld	bc,#_bufModFileHeader + 952
   3524 C5                 9444 	push	bc
   3525 CDr84s34           9445 	call	_Mod_FindHighestUsedPattern
   3528 F1                 9446 	pop	af
   3529 4D                 9447 	ld	c,l
                           9448 ;sound_fx/sound_fx.c:106: patLen = 1084 + (pat+1)*4*256;
   352A 06 00              9449 	ld	b,#0x00
   352C 03                 9450 	inc	bc
   352D 79                 9451 	ld	a,c
   352E 87                 9452 	add	a,a
   352F 87                 9453 	add	a,a
   3530 47                 9454 	ld	b,a
   3531 0E 00              9455 	ld	c,#0x00
   3533 21 3C 04           9456 	ld	hl,#0x043C
   3536 09                 9457 	add	hl,bc
   3537 4D                 9458 	ld	c,l
   3538 44                 9459 	ld	b,h
                           9460 ;sound_fx/sound_fx.c:107: sampleLen = fileLen - (dword)patLen;
   3539 DD 71 ED           9461 	ld	-19 (ix),c
   353C DD 70 EE           9462 	ld	-18 (ix),b
   353F DD 36 EF 00        9463 	ld	-17 (ix),#0x00
   3543 DD 36 F0 00        9464 	ld	-16 (ix),#0x00
   3547 DD 7E F5           9465 	ld	a,-11 (ix)
   354A DD 96 ED           9466 	sub	a,-19 (ix)
   354D 4F                 9467 	ld	c,a
   354E DD 7E F6           9468 	ld	a,-10 (ix)
   3551 DD 9E EE           9469 	sbc	a,-18 (ix)
   3554 47                 9470 	ld	b,a
   3555 DD 7E F7           9471 	ld	a,-9 (ix)
   3558 DD 9E EF           9472 	sbc	a,-17 (ix)
   355B 5F                 9473 	ld	e,a
   355C DD 7E F8           9474 	ld	a,-8 (ix)
   355F DD 9E F0           9475 	sbc	a,-16 (ix)
   3562 57                 9476 	ld	d,a
   3563 DD 71 F1           9477 	ld	-15 (ix),c
   3566 DD 70 F2           9478 	ld	-14 (ix),b
   3569 DD 73 F3           9479 	ld	-13 (ix),e
   356C DD 72 F4           9480 	ld	-12 (ix),d
                           9481 ;sound_fx/sound_fx.c:114: if(!load_file_to_buffer(pFilename, 0, (byte*) SOUND_MOD_PATTERN_DATA, patLen, BANK_MUSIC_STUFF))
   356F 3E 01              9482 	ld	a,#0x01
   3571 F5                 9483 	push	af
   3572 33                 9484 	inc	sp
   3573 DD 6E EF           9485 	ld	l,-17 (ix)
   3576 DD 66 F0           9486 	ld	h,-16 (ix)
   3579 E5                 9487 	push	hl
   357A DD 6E ED           9488 	ld	l,-19 (ix)
   357D DD 66 EE           9489 	ld	h,-18 (ix)
   3580 E5                 9490 	push	hl
   3581 21 00 A2           9491 	ld	hl,#0xA200
   3584 E5                 9492 	push	hl
   3585 21 00 00           9493 	ld	hl,#0x0000
   3588 E5                 9494 	push	hl
   3589 21 00 00           9495 	ld	hl,#0x0000
   358C E5                 9496 	push	hl
   358D DD 6E 04           9497 	ld	l,4 (ix)
   3590 DD 66 05           9498 	ld	h,5 (ix)
   3593 E5                 9499 	push	hl
   3594 CDrECs02           9500 	call	_load_file_to_buffer
   3597 FD 21 0D 00        9501 	ld	iy,#0x000D
   359B FD 39              9502 	add	iy,sp
   359D FD F9              9503 	ld	sp,iy
                           9504 ;sound_fx/sound_fx.c:115: return FALSE;
   359F AF                 9505 	xor	a,a
   35A0 B5                 9506 	or	a,l
   35A1 20 03              9507 	jr	NZ,00106$
   35A3 6F                 9508 	ld	l,a
   35A4 18 3F              9509 	jr	00109$
   35A6                    9510 00106$:
                           9511 ;sound_fx/sound_fx.c:118: if(!load_file_to_buffer(pFilename, patLen, (byte*) 0x8000, sampleLen, BANK_MOD_SAMPLE1))
   35A6 3E 05              9512 	ld	a,#0x05
   35A8 F5                 9513 	push	af
   35A9 33                 9514 	inc	sp
   35AA DD 6E F3           9515 	ld	l,-13 (ix)
   35AD DD 66 F4           9516 	ld	h,-12 (ix)
   35B0 E5                 9517 	push	hl
   35B1 DD 6E F1           9518 	ld	l,-15 (ix)
   35B4 DD 66 F2           9519 	ld	h,-14 (ix)
   35B7 E5                 9520 	push	hl
   35B8 21 00 80           9521 	ld	hl,#0x8000
   35BB E5                 9522 	push	hl
   35BC DD 6E EF           9523 	ld	l,-17 (ix)
   35BF DD 66 F0           9524 	ld	h,-16 (ix)
   35C2 E5                 9525 	push	hl
   35C3 DD 6E ED           9526 	ld	l,-19 (ix)
   35C6 DD 66 EE           9527 	ld	h,-18 (ix)
   35C9 E5                 9528 	push	hl
   35CA DD 6E 04           9529 	ld	l,4 (ix)
   35CD DD 66 05           9530 	ld	h,5 (ix)
   35D0 E5                 9531 	push	hl
   35D1 CDrECs02           9532 	call	_load_file_to_buffer
   35D4 FD 21 0D 00        9533 	ld	iy,#0x000D
   35D8 FD 39              9534 	add	iy,sp
   35DA FD F9              9535 	ld	sp,iy
                           9536 ;sound_fx/sound_fx.c:119: return FALSE;
   35DC AF                 9537 	xor	a,a
   35DD B5                 9538 	or	a,l
   35DE 20 03              9539 	jr	NZ,00108$
   35E0 6F                 9540 	ld	l,a
   35E1 18 02              9541 	jr	00109$
   35E3                    9542 00108$:
                           9543 ;sound_fx/sound_fx.c:121: return TRUE;
   35E3 2E 01              9544 	ld	l,#0x01
   35E5                    9545 00109$:
   35E5 DD F9              9546 	ld	sp,ix
   35E7 DD E1              9547 	pop	ix
   35E9 C9                 9548 	ret
   35EA                    9549 _Mod_LoadMusicModule_end::
                           9550 ;sound_fx/sound_fx.c:126: void MUSIC_Silence(void)
                           9551 ;	---------------------------------
                           9552 ; Function MUSIC_Silence
                           9553 ; ---------------------------------
   35EA                    9554 _MUSIC_Silence_start::
   35EA                    9555 _MUSIC_Silence:
                           9556 ;sound_fx/sound_fx.c:128: Music_InitTracker();
   35EA CDr00s00           9557 	call	_Music_InitTracker
                           9558 ;sound_fx/sound_fx.c:129: Music_UpdateSoundHardware();
   35ED C3r00s00           9559 	jp	_Music_UpdateSoundHardware
   35F0                    9560 _MUSIC_Silence_end::
                           9561 ;sound_fx/sound_fx.c:132: void MUSIC_Init(void)
                           9562 ;	---------------------------------
                           9563 ; Function MUSIC_Init
                           9564 ; ---------------------------------
   35F0                    9565 _MUSIC_Init_start::
   35F0                    9566 _MUSIC_Init:
                           9567 ;sound_fx/sound_fx.c:134: Music_SetForceSampleBase(0x10000/2);
   35F0 21 00 80           9568 	ld	hl,#0x8000
   35F3 E5                 9569 	push	hl
   35F4 CDr00s00           9570 	call	_Music_SetForceSampleBase
   35F7 F1                 9571 	pop	af
                           9572 ;sound_fx/sound_fx.c:135: Music_InitTracker();
   35F8 C3r00s00           9573 	jp	_Music_InitTracker
   35FB                    9574 _MUSIC_Init_end::
                           9575 ;debug.c:5: void Debug_Move(void)
                           9576 ;	---------------------------------
                           9577 ; Function Debug_Move
                           9578 ; ---------------------------------
   35FB                    9579 _Debug_Move_start::
   35FB                    9580 _Debug_Move:
                           9581 ;debug.c:8: if(keyboard.last_typed_scancode == SC_A) {
   35FB 01r3Ds03           9582 	ld	bc,#_keyboard + 1
   35FE 0A                 9583 	ld	a,(bc)
   35FF D6 1C              9584 	sub	a,#0x1C
   3601 28 01              9585 	jr	Z,00110$
   3603 C9                 9586 	ret
   3604                    9587 00110$:
                           9588 ;debug.c:9: keyboard.last_typed_scancode = 0;
   3604 3E 00              9589 	ld	a,#0x00
   3606 02                 9590 	ld	(bc),a
                           9591 ;debug.c:11: debug.offset_gameobj_for_debug_render++;
   3607 21rF7s02           9592 	ld	hl,#_debug
   360A 4E                 9593 	ld	c,(hl)
   360B 0C                 9594 	inc	c
   360C 71                 9595 	ld	(hl),c
                           9596 ;debug.c:12: if(debug.offset_gameobj_for_debug_render >= POOL_OBJ__MAX_OBJECTS)
   360D 79                 9597 	ld	a,c
   360E D6 20              9598 	sub	a,#0x20
   3610 D8                 9599 	ret	C
                           9600 ;debug.c:13: debug.offset_gameobj_for_debug_render = 0;
   3611 36 00              9601 	ld	(hl),#0x00
   3613 C9                 9602 	ret
   3614                    9603 _Debug_Move_end::
                           9604 ;debug.c:19: void Debug_Draw(void)
                           9605 ;	---------------------------------
                           9606 ; Function Debug_Draw
                           9607 ; ---------------------------------
   3614                    9608 _Debug_Draw_start::
   3614                    9609 _Debug_Draw:
   3614 DD E5              9610 	push	ix
   3616 DD 21 00 00        9611 	ld	ix,#0
   361A DD 39              9612 	add	ix,sp
   361C 21 F8 FF           9613 	ld	hl,#-8
   361F 39                 9614 	add	hl,sp
   3620 F9                 9615 	ld	sp,hl
                           9616 ;debug.c:27: if(counter & 0x80) {
   3621 3Ar6Cs0A           9617 	ld	a,(#_Debug_Draw_counter_1_1+0)
   3624 E6 80              9618 	and	a,#0x80
   3626 28 13              9619 	jr	Z,00102$
                           9620 ;debug.c:28: counter = 0;
   3628 21r6Cs0A           9621 	ld	hl,#_Debug_Draw_counter_1_1 + 0
   362B 36 00              9622 	ld	(hl), #0x00
   362D 21r6Ds0A           9623 	ld	hl,#_Debug_Draw_counter_1_1 + 1
   3630 36 00              9624 	ld	(hl), #0x00
                           9625 ;debug.c:29: corner ^= 1;
   3632 3Ar6Es0A           9626 	ld	a,(#_Debug_Draw_corner_1_1+0)
   3635 EE 01              9627 	xor	a,#0x01
   3637 21r6Es0A           9628 	ld	hl,#_Debug_Draw_corner_1_1 + 0
   363A 77                 9629 	ld	(hl), a
   363B                    9630 00102$:
                           9631 ;debug.c:31: counter++;
   363B FD 21r6Cs0A        9632 	ld	iy,#_Debug_Draw_counter_1_1
   363F FD 34 00           9633 	inc	0 (iy)
   3642 20 07              9634 	jr	NZ,00121$
   3644 FD 21r6Cs0A        9635 	ld	iy,#_Debug_Draw_counter_1_1
   3648 FD 34 01           9636 	inc	1 (iy)
   364B                    9637 00121$:
                           9638 ;debug.c:35: for(i=debug.offset_gameobj_for_debug_render; i<POOL_OBJ__MAX_OBJECTS; i++) {
   364B 21rF7s02           9639 	ld	hl,#_debug
   364E 4E                 9640 	ld	c,(hl)
   364F 06 00              9641 	ld	b,#0x00
   3651 21rEDs05           9642 	ld	hl,#_pool_game_obj + 629
   3654 DD 75 FA           9643 	ld	-6 (ix),l
   3657 DD 74 FB           9644 	ld	-5 (ix),h
   365A                    9645 00108$:
   365A 79                 9646 	ld	a,c
   365B D6 20              9647 	sub	a,#0x20
   365D 78                 9648 	ld	a,b
   365E DE 00              9649 	sbc	a,#0x00
   3660 D2r48s37           9650 	jp	NC,00112$
                           9651 ;debug.c:36: obj = pool_game_obj.active_objects[i];
   3663 59                 9652 	ld	e,c
   3664 50                 9653 	ld	d,b
   3665 CB 23              9654 	sla	e
   3667 CB 12              9655 	rl	d
   3669 DD 7E FA           9656 	ld	a,-6 (ix)
   366C 83                 9657 	add	a,e
   366D 5F                 9658 	ld	e,a
   366E DD 7E FB           9659 	ld	a,-5 (ix)
   3671 8A                 9660 	adc	a,d
   3672 6B                 9661 	ld	l,e
   3673 67                 9662 	ld	h,a
   3674 5E                 9663 	ld	e,(hl)
   3675 23                 9664 	inc	hl
   3676 56                 9665 	ld	d,(hl)
   3677 DD 73 FE           9666 	ld	-2 (ix),e
   367A DD 72 FF           9667 	ld	-1 (ix),d
                           9668 ;debug.c:37: if( obj && obj->in_use) {
   367D DD 7E FE           9669 	ld	a,-2 (ix)
   3680 DD B6 FF           9670 	or	a,-1 (ix)
   3683 CAr44s37           9671 	jp	Z,00110$
   3686 DD 6E FE           9672 	ld	l,-2 (ix)
   3689 DD 66 FF           9673 	ld	h,-1 (ix)
   368C 7E                 9674 	ld	a,(hl)
   368D B7                 9675 	or	a,a
   368E CAr44s37           9676 	jp	Z,00110$
                           9677 ;debug.c:38: x = obj->x + obj->col_x_offset;
   3691 DD 5E FE           9678 	ld	e,-2 (ix)
   3694 DD 56 FF           9679 	ld	d,-1 (ix)
   3697 EB                 9680 	ex	de,hl
   3698 23                 9681 	inc	hl
   3699 4E                 9682 	ld	c,(hl)
   369A 23                 9683 	inc	hl
   369B 46                 9684 	ld	b,(hl)
   369C DD 7E FE           9685 	ld	a,-2 (ix)
   369F C6 0D              9686 	add	a,#0x0D
   36A1 6F                 9687 	ld	l, a
   36A2 DD 7E FF           9688 	ld	a, -1 (ix)
   36A5 CE 00              9689 	adc	a, #0x00
   36A7 67                 9690 	ld	h,a
   36A8 5E                 9691 	ld	e,(hl)
   36A9 23                 9692 	inc	hl
   36AA 56                 9693 	ld	d,(hl)
   36AB 79                 9694 	ld	a,c
   36AC 83                 9695 	add	a,e
   36AD 5F                 9696 	ld	e,a
   36AE 78                 9697 	ld	a,b
   36AF 8A                 9698 	adc	a,d
   36B0 4B                 9699 	ld	c,e
   36B1 47                 9700 	ld	b,a
                           9701 ;debug.c:39: y = obj->y + obj->col_y_offset;
   36B2 DD 7E FE           9702 	ld	a,-2 (ix)
   36B5 C6 03              9703 	add	a,#0x03
   36B7 6F                 9704 	ld	l, a
   36B8 DD 7E FF           9705 	ld	a, -1 (ix)
   36BB CE 00              9706 	adc	a, #0x00
   36BD 67                 9707 	ld	h,a
   36BE 7E                 9708 	ld	a,(hl)
   36BF DD 77 F8           9709 	ld	-8 (ix),a
   36C2 23                 9710 	inc	hl
   36C3 7E                 9711 	ld	a,(hl)
   36C4 DD 77 F9           9712 	ld	-7 (ix),a
   36C7 DD 7E FE           9713 	ld	a,-2 (ix)
   36CA C6 0F              9714 	add	a,#0x0F
   36CC 6F                 9715 	ld	l, a
   36CD DD 7E FF           9716 	ld	a, -1 (ix)
   36D0 CE 00              9717 	adc	a, #0x00
   36D2 67                 9718 	ld	h,a
   36D3 5E                 9719 	ld	e,(hl)
   36D4 23                 9720 	inc	hl
   36D5 56                 9721 	ld	d,(hl)
   36D6 DD 7E F8           9722 	ld	a,-8 (ix)
   36D9 83                 9723 	add	a,e
   36DA 5F                 9724 	ld	e,a
   36DB DD 7E F9           9725 	ld	a,-7 (ix)
   36DE 8A                 9726 	adc	a,d
   36DF 57                 9727 	ld	d,a
   36E0 DD 73 FC           9728 	ld	-4 (ix),e
   36E3 DD 72 FD           9729 	ld	-3 (ix),d
                           9730 ;debug.c:40: if(corner == 1) {
   36E6 3Ar6Es0A           9731 	ld	a,(#_Debug_Draw_corner_1_1+0)
   36E9 D6 01              9732 	sub	a,#0x01
   36EB 20 32              9733 	jr	NZ,00104$
                           9734 ;debug.c:41: x +=  obj->col_width;
   36ED DD 7E FE           9735 	ld	a,-2 (ix)
   36F0 C6 09              9736 	add	a,#0x09
   36F2 6F                 9737 	ld	l, a
   36F3 DD 7E FF           9738 	ld	a, -1 (ix)
   36F6 CE 00              9739 	adc	a, #0x00
   36F8 67                 9740 	ld	h,a
   36F9 5E                 9741 	ld	e,(hl)
   36FA 23                 9742 	inc	hl
   36FB 56                 9743 	ld	d,(hl)
   36FC 79                 9744 	ld	a,c
   36FD 83                 9745 	add	a,e
   36FE 4F                 9746 	ld	c,a
   36FF 78                 9747 	ld	a,b
   3700 8A                 9748 	adc	a,d
   3701 47                 9749 	ld	b,a
                           9750 ;debug.c:42: y +=  obj->col_height;
   3702 DD 7E FE           9751 	ld	a,-2 (ix)
   3705 C6 0B              9752 	add	a,#0x0B
   3707 6F                 9753 	ld	l, a
   3708 DD 7E FF           9754 	ld	a, -1 (ix)
   370B CE 00              9755 	adc	a, #0x00
   370D 67                 9756 	ld	h,a
   370E 5E                 9757 	ld	e,(hl)
   370F 23                 9758 	inc	hl
   3710 56                 9759 	ld	d,(hl)
   3711 DD 7E FC           9760 	ld	a,-4 (ix)
   3714 83                 9761 	add	a,e
   3715 DD 77 FC           9762 	ld	-4 (ix),a
   3718 DD 7E FD           9763 	ld	a,-3 (ix)
   371B 8A                 9764 	adc	a,d
   371C DD 77 FD           9765 	ld	-3 (ix),a
   371F                    9766 00104$:
                           9767 ;debug.c:46: set_sprite_regs(SPRITE_NUM_DEBUG_POINT1, x, y, 1,
   371F 3E 00              9768 	ld	a,#0x00
   3721 F5                 9769 	push	af
   3722 33                 9770 	inc	sp
   3723 21 04 00           9771 	ld	hl,#0x0004
   3726 E5                 9772 	push	hl
   3727 3E 01              9773 	ld	a,#0x01
   3729 F5                 9774 	push	af
   372A 33                 9775 	inc	sp
   372B DD 6E FC           9776 	ld	l,-4 (ix)
   372E DD 66 FD           9777 	ld	h,-3 (ix)
   3731 E5                 9778 	push	hl
   3732 C5                 9779 	push	bc
   3733 3E 32              9780 	ld	a,#0x32
   3735 F5                 9781 	push	af
   3736 33                 9782 	inc	sp
   3737 CDr1Fs09           9783 	call	_set_sprite_regs
   373A FD 21 09 00        9784 	ld	iy,#0x0009
   373E FD 39              9785 	add	iy,sp
   3740 FD F9              9786 	ld	sp,iy
                           9787 ;debug.c:49: return;
   3742 18 04              9788 	jr	00112$
   3744                    9789 00110$:
                           9790 ;debug.c:35: for(i=debug.offset_gameobj_for_debug_render; i<POOL_OBJ__MAX_OBJECTS; i++) {
   3744 03                 9791 	inc	bc
   3745 C3r5As36           9792 	jp	00108$
   3748                    9793 00112$:
   3748 DD F9              9794 	ld	sp,ix
   374A DD E1              9795 	pop	ix
   374C C9                 9796 	ret
   374D                    9797 _Debug_Draw_end::
                           9798 ;debug.c:55: BOOL Debug_CheckCurrentBank(void)
                           9799 ;	---------------------------------
                           9800 ; Function Debug_CheckCurrentBank
                           9801 ; ---------------------------------
   374D                    9802 _Debug_CheckCurrentBank_start::
   374D                    9803 _Debug_CheckCurrentBank:
   374D DD E5              9804 	push	ix
   374F DD 21 00 00        9805 	ld	ix,#0
   3753 DD 39              9806 	add	ix,sp
   3755 21 F6 FF           9807 	ld	hl,#-10
   3758 39                 9808 	add	hl,sp
   3759 F9                 9809 	ld	sp,hl
                           9810 ;debug.c:58: byte b = io__sys_mem_select;
   375A DB 00              9811 	in	a,(_io__sys_mem_select)
   375C 4F                 9812 	ld	c,a
                           9813 ;debug.c:61: if((b-1) != PONG_BANK) {
   375D 59                 9814 	ld	e,c
   375E 16 00              9815 	ld	d,#0x00
   3760 1B                 9816 	dec	de
   3761 7B                 9817 	ld	a,e
   3762 B2                 9818 	or	a,d
   3763 28 4C              9819 	jr	Z,00102$
                           9820 ;debug.c:62: FLOS_PrintStringLFCR("ERR: Not good cur bank.");
   3765 C5                 9821 	push	bc
   3766 21rB8s37           9822 	ld	hl,#__str_11
   3769 E5                 9823 	push	hl
   376A CDr00s00           9824 	call	_FLOS_PrintStringLFCR
   376D F1                 9825 	pop	af
   376E C1                 9826 	pop	bc
                           9827 ;debug.c:63: _ultoa(b, buf, 16);
   376F 21 02 00           9828 	ld	hl,#0x0002
   3772 39                 9829 	add	hl,sp
   3773 DD 75 F6           9830 	ld	-10 (ix),l
   3776 DD 74 F7           9831 	ld	-9 (ix),h
   3779 06 00              9832 	ld	b,#0x00
   377B 11 00 00           9833 	ld	de,#0x0000
   377E 3E 10              9834 	ld	a,#0x10
   3780 F5                 9835 	push	af
   3781 33                 9836 	inc	sp
   3782 DD 6E F6           9837 	ld	l,-10 (ix)
   3785 DD 66 F7           9838 	ld	h,-9 (ix)
   3788 E5                 9839 	push	hl
   3789 D5                 9840 	push	de
   378A C5                 9841 	push	bc
   378B CDr00s00           9842 	call	__ultoa
   378E F1                 9843 	pop	af
   378F F1                 9844 	pop	af
   3790 F1                 9845 	pop	af
   3791 33                 9846 	inc	sp
                           9847 ;debug.c:64: FLOS_PrintString("Cur hardware bank: $");
   3792 21rD0s37           9848 	ld	hl,#__str_12
   3795 E5                 9849 	push	hl
   3796 CDr00s00           9850 	call	_FLOS_PrintString
   3799 F1                 9851 	pop	af
                           9852 ;debug.c:65: FLOS_PrintStringLFCR(buf);
   379A 21 02 00           9853 	ld	hl,#0x0002
   379D 39                 9854 	add	hl,sp
   379E E5                 9855 	push	hl
   379F CDr00s00           9856 	call	_FLOS_PrintStringLFCR
   37A2 F1                 9857 	pop	af
                           9858 ;debug.c:66: buffer[0] = 'E'; buffer[1] = 'R';   // put  E R as "was error" marker
   37A3 21rF9s02           9859 	ld	hl,#_buffer
   37A6 36 45              9860 	ld	(hl),#0x45
   37A8 3E 52              9861 	ld	a,#0x52
   37AA 32rFAs02           9862 	ld	(#_buffer + 1),a
                           9863 ;debug.c:67: return FALSE;
   37AD 2E 00              9864 	ld	l,#0x00
   37AF 18 02              9865 	jr	00103$
   37B1                    9866 00102$:
                           9867 ;debug.c:70: return TRUE;
   37B1 2E 01              9868 	ld	l,#0x01
   37B3                    9869 00103$:
   37B3 DD F9              9870 	ld	sp,ix
   37B5 DD E1              9871 	pop	ix
   37B7 C9                 9872 	ret
   37B8                    9873 _Debug_CheckCurrentBank_end::
   37B8                    9874 __str_11:
   37B8 45 52 52 3A 20 4E  9875 	.ascii "ERR: Not good cur bank."
        6F 74 20 67 6F 6F
        64 20 63 75 72 20
        62 61 6E 6B 2E
   37CF 00                 9876 	.db 0x00
   37D0                    9877 __str_12:
   37D0 43 75 72 20 68 61  9878 	.ascii "Cur hardware bank: $"
        72 64 77 61 72 65
        20 62 61 6E 6B 3A
        20 24
   37E4 00                 9879 	.db 0x00
                           9880 ;pong.c:110: void Game_Initialize(void) // Initialize the game.
                           9881 ;	---------------------------------
                           9882 ; Function Game_Initialize
                           9883 ; ---------------------------------
   37E5                    9884 _Game_Initialize_start::
   37E5                    9885 _Game_Initialize:
                           9886 ;pong.c:112: memset(&YouWinAnim, 0, sizeof(YouWinAnim));
   37E5 21 2A 00           9887 	ld	hl,#0x002A
   37E8 E5                 9888 	push	hl
   37E9 3E 00              9889 	ld	a,#0x00
   37EB F5                 9890 	push	af
   37EC 33                 9891 	inc	sp
   37ED 21rA7s02           9892 	ld	hl,#_YouWinAnim
   37F0 E5                 9893 	push	hl
   37F1 CDr00s00           9894 	call	_memset
   37F4 F1                 9895 	pop	af
   37F5 F1                 9896 	pop	af
   37F6 33                 9897 	inc	sp
                           9898 ;pong.c:115: game.is_paused = game.is_user_pressed_pause = FALSE;
   37F7 01rECs02           9899 	ld	bc,#_game + 4
   37FA 11rEDs02           9900 	ld	de,#_game + 5
   37FD 3E 00              9901 	ld	a,#0x00
   37FF 12                 9902 	ld	(de),a
   3800 02                 9903 	ld	(bc),a
                           9904 ;pong.c:116: game.is_debug_mode = FALSE;
                           9905 ;pong.c:117: game.shadow_sprite_register_bank = 0;
   3801 3E 00              9906 	ld	a,#0x00
   3803 32rEEs02           9907 	ld	(#_game + 6),a
   3806 32rF4s02           9908 	ld	(#_game + 12),a
                           9909 ;pong.c:118: game.global_time = 0;
   3809 21rF5s02           9910 	ld	hl, #_game + 13
   380C 36 00              9911 	ld	(hl),#0x00
   380E 23                 9912 	inc	hl
   380F 36 00              9913 	ld	(hl),#0x00
                           9914 ;pong.c:120: debug.offset_gameobj_for_debug_render = 0;
   3811 21rF7s02           9915 	ld	hl,#_debug
   3814 36 00              9916 	ld	(hl),#0x00
                           9917 ;pong.c:124: PoolGameObj_Init();
   3816 CDrD8s10           9918 	call	_PoolGameObj_Init
                           9919 ;pong.c:126: PoolSprites_Init();
   3819 C3r7As10           9920 	jp	_PoolSprites_Init
   381C                    9921 _Game_Initialize_end::
                           9922 ;pong.c:130: void Game_InitializeMenuGameObjects(void) // Initialize
                           9923 ;	---------------------------------
                           9924 ; Function Game_InitializeMenuGameObjects
                           9925 ; ---------------------------------
   381C                    9926 _Game_InitializeMenuGameObjects_start::
   381C                    9927 _Game_InitializeMenuGameObjects:
                           9928 ;pong.c:132: gameMenu.gobj.in_use = TRUE;
   381C 21rD1s02           9929 	ld	hl,#_gameMenu
   381F 36 01              9930 	ld	(hl),#0x01
                           9931 ;pong.c:133: GameObjGameMenu_Init(&gameMenu, 0, 0);
   3821 21 00 00           9932 	ld	hl,#0x0000
   3824 E5                 9933 	push	hl
   3825 2E 00              9934 	ld	l, #0x00
   3827 E5                 9935 	push	hl
   3828 21rD1s02           9936 	ld	hl,#_gameMenu
   382B E5                 9937 	push	hl
   382C CDrBEs30           9938 	call	_GameObjGameMenu_Init
   382F F1                 9939 	pop	af
   3830 F1                 9940 	pop	af
   3831 F1                 9941 	pop	af
                           9942 ;pong.c:134: PoolGameObj_AddObjToActiveObjects(&gameMenu.gobj);
   3832 21rD1s02           9943 	ld	hl,#_gameMenu
   3835 E5                 9944 	push	hl
   3836 CDr77s11           9945 	call	_PoolGameObj_AddObjToActiveObjects
   3839 F1                 9946 	pop	af
   383A C9                 9947 	ret
   383B                    9948 _Game_InitializeMenuGameObjects_end::
                           9949 ;pong.c:137: void Game_InitializeLevelGameObjects(void) // Initialize
                           9950 ;	---------------------------------
                           9951 ; Function Game_InitializeLevelGameObjects
                           9952 ; ---------------------------------
   383B                    9953 _Game_InitializeLevelGameObjects_start::
   383B                    9954 _Game_InitializeLevelGameObjects:
                           9955 ;pong.c:141: batA.gobj.in_use = TRUE;
   383B 21r47s02           9956 	ld	hl,#_batA
   383E 36 01              9957 	ld	(hl),#0x01
                           9958 ;pong.c:142: GameObjBat_Init(&batA, GAME_FIELD_X_BORDER - BAT_WIDTH, 237/2);
   3840 21 76 00           9959 	ld	hl,#0x0076
   3843 E5                 9960 	push	hl
   3844 2E 02              9961 	ld	l, #0x02
   3846 E5                 9962 	push	hl
   3847 21r47s02           9963 	ld	hl,#_batA
   384A E5                 9964 	push	hl
   384B CDr9Bs22           9965 	call	_GameObjBat_Init
   384E F1                 9966 	pop	af
   384F F1                 9967 	pop	af
   3850 F1                 9968 	pop	af
                           9969 ;pong.c:143: PoolGameObj_AddObjToActiveObjects(&batA.gobj);
   3851 21r47s02           9970 	ld	hl,#_batA
   3854 E5                 9971 	push	hl
   3855 CDr77s11           9972 	call	_PoolGameObj_AddObjToActiveObjects
   3858 F1                 9973 	pop	af
                           9974 ;pong.c:147: batB.gobj.in_use = TRUE;
   3859 21r67s02           9975 	ld	hl,#_batB
   385C 36 01              9976 	ld	(hl),#0x01
                           9977 ;pong.c:148: GameObjBat_Init(&batB, SCREEN_WIDTH - GAME_FIELD_X_BORDER, 237/2);
   385E 21 76 00           9978 	ld	hl,#0x0076
   3861 E5                 9979 	push	hl
   3862 21 66 01           9980 	ld	hl,#0x0166
   3865 E5                 9981 	push	hl
   3866 21r67s02           9982 	ld	hl,#_batB
   3869 E5                 9983 	push	hl
   386A CDr9Bs22           9984 	call	_GameObjBat_Init
   386D F1                 9985 	pop	af
   386E F1                 9986 	pop	af
   386F F1                 9987 	pop	af
                           9988 ;pong.c:149: PoolGameObj_AddObjToActiveObjects(&batB.gobj);
   3870 21r67s02           9989 	ld	hl,#_batB
   3873 E5                 9990 	push	hl
   3874 CDr77s11           9991 	call	_PoolGameObj_AddObjToActiveObjects
   3877 F1                 9992 	pop	af
                           9993 ;pong.c:153: ball1.gobj.in_use = TRUE;
   3878 21r87s02           9994 	ld	hl,#_ball1
   387B 36 01              9995 	ld	(hl),#0x01
                           9996 ;pong.c:154: GameObjBall_Init(&ball1);
   387D E5                 9997 	push	hl
   387E CDr9Fs26           9998 	call	_GameObjBall_Init
   3881 F1                 9999 	pop	af
                          10000 ;pong.c:155: PoolGameObj_AddObjToActiveObjects(&ball1.gobj);
   3882 21r87s02          10001 	ld	hl,#_ball1
   3885 E5                10002 	push	hl
   3886 CDr77s11          10003 	call	_PoolGameObj_AddObjToActiveObjects
   3889 F1                10004 	pop	af
                          10005 ;pong.c:158: scoreA.gobj.in_use = TRUE;
   388A 21r01s02          10006 	ld	hl,#_scoreA
   388D 36 01             10007 	ld	(hl),#0x01
                          10008 ;pong.c:159: GameObjScore_Init(&scoreA, (SCREEN_WIDTH/2)-16*4, 0);
   388F 21 00 00          10009 	ld	hl,#0x0000
   3892 E5                10010 	push	hl
   3893 2E 78             10011 	ld	l, #0x78
   3895 E5                10012 	push	hl
   3896 21r01s02          10013 	ld	hl,#_scoreA
   3899 E5                10014 	push	hl
   389A CDr00s19          10015 	call	_GameObjScore_Init
   389D F1                10016 	pop	af
   389E F1                10017 	pop	af
   389F F1                10018 	pop	af
                          10019 ;pong.c:160: scoreA.sprite_num = SPRITE_NUM_SCORE_A_DIGIT;
   38A0 3E 04             10020 	ld	a,#0x04
   38A2 32r1Es02          10021 	ld	(#_scoreA + 29),a
                          10022 ;pong.c:161: scoreA.sprite_num_RocketsIndicator = SPRITE_NUM_PLAYER_A_NUM_ROCKETS;
   38A5 3E 08             10023 	ld	a,#0x08
   38A7 32r22s02          10024 	ld	(#_scoreA + 33),a
                          10025 ;pong.c:162: PoolGameObj_AddObjToActiveObjects(&scoreA.gobj);
   38AA 21r01s02          10026 	ld	hl,#_scoreA
   38AD E5                10027 	push	hl
   38AE CDr77s11          10028 	call	_PoolGameObj_AddObjToActiveObjects
   38B1 F1                10029 	pop	af
                          10030 ;pong.c:163: GameObjScore_UpdateScore(&scoreA);
   38B2 21r01s02          10031 	ld	hl,#_scoreA
   38B5 E5                10032 	push	hl
   38B6 CDr2Fs1B          10033 	call	_GameObjScore_UpdateScore
   38B9 F1                10034 	pop	af
                          10035 ;pong.c:166: scoreB.gobj.in_use = TRUE;
   38BA 21r24s02          10036 	ld	hl,#_scoreB
   38BD 36 01             10037 	ld	(hl),#0x01
                          10038 ;pong.c:167: GameObjScore_Init(&scoreB, (SCREEN_WIDTH/2)+16*2, 0);
   38BF 21 00 00          10039 	ld	hl,#0x0000
   38C2 E5                10040 	push	hl
   38C3 2E D8             10041 	ld	l, #0xD8
   38C5 E5                10042 	push	hl
   38C6 21r24s02          10043 	ld	hl,#_scoreB
   38C9 E5                10044 	push	hl
   38CA CDr00s19          10045 	call	_GameObjScore_Init
   38CD F1                10046 	pop	af
   38CE F1                10047 	pop	af
   38CF F1                10048 	pop	af
                          10049 ;pong.c:168: scoreB.sprite_num = SPRITE_NUM_SCORE_B_DIGIT;
   38D0 3E 06             10050 	ld	a,#0x06
   38D2 32r41s02          10051 	ld	(#_scoreB + 29),a
                          10052 ;pong.c:169: scoreB.sprite_num_RocketsIndicator = SPRITE_NUM_PLAYER_B_NUM_ROCKETS;
   38D5 3E 0B             10053 	ld	a,#0x0B
   38D7 32r45s02          10054 	ld	(#_scoreB + 33),a
                          10055 ;pong.c:170: PoolGameObj_AddObjToActiveObjects(&scoreB.gobj);
   38DA 21r24s02          10056 	ld	hl,#_scoreB
   38DD E5                10057 	push	hl
   38DE CDr77s11          10058 	call	_PoolGameObj_AddObjToActiveObjects
   38E1 F1                10059 	pop	af
                          10060 ;pong.c:171: GameObjScore_UpdateScore(&scoreB);
   38E2 21r24s02          10061 	ld	hl,#_scoreB
   38E5 E5                10062 	push	hl
   38E6 CDr2Fs1B          10063 	call	_GameObjScore_UpdateScore
   38E9 F1                10064 	pop	af
   38EA C9                10065 	ret
   38EB                   10066 _Game_InitializeLevelGameObjects_end::
                          10067 ;pong.c:177: void Game_Movebat(char input)
                          10068 ;	---------------------------------
                          10069 ; Function Game_Movebat
                          10070 ; ---------------------------------
   38EB                   10071 _Game_Movebat_start::
   38EB                   10072 _Game_Movebat:
   38EB DD E5             10073 	push	ix
   38ED DD 21 00 00       10074 	ld	ix,#0
   38F1 DD 39             10075 	add	ix,sp
                          10076 ;pong.c:179: switch (input)
   38F3 DD 7E 04          10077 	ld	a,4 (ix)
   38F6 D6 41             10078 	sub	a,#0x41
   38F8 28 17             10079 	jr	Z,00101$
   38FA DD 7E 04          10080 	ld	a,4 (ix)
   38FD D6 4A             10081 	sub	a,#0x4A
   38FF 28 24             10082 	jr	Z,00103$
   3901 DD 7E 04          10083 	ld	a,4 (ix)
   3904 D6 4D             10084 	sub	a,#0x4D
   3906 28 27             10085 	jr	Z,00104$
   3908 DD 7E 04          10086 	ld	a,4 (ix)
   390B D6 5A             10087 	sub	a,#0x5A
   390D 28 0C             10088 	jr	Z,00102$
   390F 18 26             10089 	jr	00106$
                          10090 ;pong.c:181: case 'A' :
   3911                   10091 00101$:
                          10092 ;pong.c:182: GameObjBat_MoveUp(&batA);
   3911 21r47s02          10093 	ld	hl,#_batA
   3914 E5                10094 	push	hl
   3915 CDr6Bs24          10095 	call	_GameObjBat_MoveUp
   3918 F1                10096 	pop	af
                          10097 ;pong.c:183: break;
   3919 18 1C             10098 	jr	00106$
                          10099 ;pong.c:185: case 'Z' :
   391B                   10100 00102$:
                          10101 ;pong.c:186: GameObjBat_MoveDown(&batA);
   391B 21r47s02          10102 	ld	hl,#_batA
   391E E5                10103 	push	hl
   391F CDr9Bs24          10104 	call	_GameObjBat_MoveDown
   3922 F1                10105 	pop	af
                          10106 ;pong.c:187: break;
   3923 18 12             10107 	jr	00106$
                          10108 ;pong.c:188: case 'J' :
   3925                   10109 00103$:
                          10110 ;pong.c:189: GameObjBat_MoveUp(&batB);
   3925 21r67s02          10111 	ld	hl,#_batB
   3928 E5                10112 	push	hl
   3929 CDr6Bs24          10113 	call	_GameObjBat_MoveUp
   392C F1                10114 	pop	af
                          10115 ;pong.c:190: break;
   392D 18 08             10116 	jr	00106$
                          10117 ;pong.c:192: case 'M' :
   392F                   10118 00104$:
                          10119 ;pong.c:193: GameObjBat_MoveDown(&batB);
   392F 21r67s02          10120 	ld	hl,#_batB
   3932 E5                10121 	push	hl
   3933 CDr9Bs24          10122 	call	_GameObjBat_MoveDown
   3936 F1                10123 	pop	af
                          10124 ;pong.c:195: }
   3937                   10125 00106$:
   3937 DD E1             10126 	pop	ix
   3939 C9                10127 	ret
   393A                   10128 _Game_Movebat_end::
                          10129 ;pong.c:204: void Game_HandlePlayerInput_Bat(void)
                          10130 ;	---------------------------------
                          10131 ; Function Game_HandlePlayerInput_Bat
                          10132 ; ---------------------------------
   393A                   10133 _Game_HandlePlayerInput_Bat_start::
   393A                   10134 _Game_HandlePlayerInput_Bat:
                          10135 ;pong.c:206: if (player1_input.up)  Game_Movebat ('A');
   393A 21r34s03          10136 	ld	hl,#_player1_input
   393D 7E                10137 	ld	a,(hl)
   393E B7                10138 	or	a,a
   393F 28 08             10139 	jr	Z,00102$
   3941 3E 41             10140 	ld	a,#0x41
   3943 F5                10141 	push	af
   3944 33                10142 	inc	sp
   3945 CDrEBs38          10143 	call	_Game_Movebat
   3948 33                10144 	inc	sp
   3949                   10145 00102$:
                          10146 ;pong.c:207: if (player1_input.down)  Game_Movebat ('Z');
   3949 01r35s03          10147 	ld	bc,#_player1_input + 1
   394C 0A                10148 	ld	a,(bc)
   394D B7                10149 	or	a,a
   394E 28 08             10150 	jr	Z,00104$
   3950 3E 5A             10151 	ld	a,#0x5A
   3952 F5                10152 	push	af
   3953 33                10153 	inc	sp
   3954 CDrEBs38          10154 	call	_Game_Movebat
   3957 33                10155 	inc	sp
   3958                   10156 00104$:
                          10157 ;pong.c:208: if (player1_input.fire1)  GameObjBat_Fire(&batA);
   3958 01r36s03          10158 	ld	bc,#_player1_input + 2
   395B 0A                10159 	ld	a,(bc)
   395C B7                10160 	or	a,a
   395D 28 08             10161 	jr	Z,00106$
   395F 21r47s02          10162 	ld	hl,#_batA
   3962 E5                10163 	push	hl
   3963 CDr4Fs25          10164 	call	_GameObjBat_Fire
   3966 F1                10165 	pop	af
   3967                   10166 00106$:
                          10167 ;pong.c:209: if (player2_input.fire1)  GameObjBat_Fire(&batB);
   3967 01r3As03          10168 	ld	bc,#_player2_input + 2
   396A 0A                10169 	ld	a,(bc)
   396B B7                10170 	or	a,a
   396C 28 08             10171 	jr	Z,00108$
   396E 21r67s02          10172 	ld	hl,#_batB
   3971 E5                10173 	push	hl
   3972 CDr4Fs25          10174 	call	_GameObjBat_Fire
   3975 F1                10175 	pop	af
   3976                   10176 00108$:
                          10177 ;pong.c:211: if(game.is_one_player_mode)
   3976 01rEBs02          10178 	ld	bc,#_game + 3
   3979 0A                10179 	ld	a,(bc)
   397A B7                10180 	or	a,a
   397B 28 03             10181 	jr	Z,00114$
                          10182 ;pong.c:212: ai_update();
   397D C3rA1s31          10183 	jp	_ai_update
   3980                   10184 00114$:
                          10185 ;pong.c:214: if (player2_input.up)  Game_Movebat ('J');
   3980 21r38s03          10186 	ld	hl,#_player2_input
   3983 7E                10187 	ld	a,(hl)
   3984 B7                10188 	or	a,a
   3985 28 08             10189 	jr	Z,00110$
   3987 3E 4A             10190 	ld	a,#0x4A
   3989 F5                10191 	push	af
   398A 33                10192 	inc	sp
   398B CDrEBs38          10193 	call	_Game_Movebat
   398E 33                10194 	inc	sp
   398F                   10195 00110$:
                          10196 ;pong.c:215: if (player2_input.down)  Game_Movebat ('M');
   398F 01r39s03          10197 	ld	bc,#_player2_input + 1
   3992 0A                10198 	ld	a,(bc)
   3993 B7                10199 	or	a,a
   3994 C8                10200 	ret	Z
   3995 3E 4D             10201 	ld	a,#0x4D
   3997 F5                10202 	push	af
   3998 33                10203 	inc	sp
   3999 CDrEBs38          10204 	call	_Game_Movebat
   399C 33                10205 	inc	sp
   399D C9                10206 	ret
   399E                   10207 _Game_HandlePlayerInput_Bat_end::
                          10208 ;pong.c:219: void Game_HandlePlayerInput_PauseMode(void)
                          10209 ;	---------------------------------
                          10210 ; Function Game_HandlePlayerInput_PauseMode
                          10211 ; ---------------------------------
   399E                   10212 _Game_HandlePlayerInput_PauseMode_start::
   399E                   10213 _Game_HandlePlayerInput_PauseMode:
                          10214 ;pong.c:221: if(game.is_user_pressed_pause) {
   399E 01rEDs02          10215 	ld	bc,#_game + 5
   39A1 0A                10216 	ld	a,(bc)
   39A2 B7                10217 	or	a,a
   39A3 28 0A             10218 	jr	Z,00102$
                          10219 ;pong.c:222: game.is_user_pressed_pause = FALSE;
   39A5 3E 00             10220 	ld	a,#0x00
   39A7 02                10221 	ld	(bc),a
                          10222 ;pong.c:223: game.is_paused ^= 1;
   39A8 01rECs02          10223 	ld	bc,#_game + 4
   39AB 0A                10224 	ld	a,(bc)
   39AC EE 01             10225 	xor	a,#0x01
   39AE 02                10226 	ld	(bc),a
   39AF                   10227 00102$:
                          10228 ;pong.c:226: if(keyboard.last_typed_scancode == SC_D) {
   39AF 01r3Ds03          10229 	ld	bc,#_keyboard + 1
   39B2 0A                10230 	ld	a,(bc)
   39B3 D6 23             10231 	sub	a,#0x23
   39B5 28 01             10232 	jr	Z,00110$
   39B7 C9                10233 	ret
   39B8                   10234 00110$:
                          10235 ;pong.c:227: keyboard.last_typed_scancode = 0;
   39B8 3E 00             10236 	ld	a,#0x00
   39BA 02                10237 	ld	(bc),a
                          10238 ;pong.c:228: game.is_debug_mode ^= 1;
   39BB 01rEEs02          10239 	ld	bc,#_game + 6
   39BE 0A                10240 	ld	a,(bc)
   39BF EE 01             10241 	xor	a,#0x01
   39C1 02                10242 	ld	(bc),a
                          10243 ;pong.c:230: game.is_paused ^= 1;
   39C2 01rECs02          10244 	ld	bc,#_game + 4
   39C5 0A                10245 	ld	a,(bc)
   39C6 EE 01             10246 	xor	a,#0x01
   39C8 02                10247 	ld	(bc),a
   39C9 C9                10248 	ret
   39CA                   10249 _Game_HandlePlayerInput_PauseMode_end::
                          10250 ;pong.c:236: void Game_ReInit_Watcher(void)
                          10251 ;	---------------------------------
                          10252 ; Function Game_ReInit_Watcher
                          10253 ; ---------------------------------
   39CA                   10254 _Game_ReInit_Watcher_start::
   39CA                   10255 _Game_ReInit_Watcher:
                          10256 ;pong.c:239: if(scoreA.score >= MAX_SCORE_FOR_LEVEL || scoreB.score >= MAX_SCORE_FOR_LEVEL) {
   39CA 21r19s02          10257 	ld	hl, #_scoreA + 24
   39CD 4E                10258 	ld	c,(hl)
   39CE 23                10259 	inc	hl
   39CF 46                10260 	ld	b,(hl)
   39D0 79                10261 	ld	a,c
   39D1 D6 0A             10262 	sub	a,#0x0A
   39D3 78                10263 	ld	a,b
   39D4 DE 00             10264 	sbc	a,#0x00
   39D6 F2rE8s39          10265 	jp	P,00107$
   39D9 21r3Cs02          10266 	ld	hl, #_scoreB + 24
   39DC 4E                10267 	ld	c,(hl)
   39DD 23                10268 	inc	hl
   39DE 46                10269 	ld	b,(hl)
   39DF 79                10270 	ld	a,c
   39E0 D6 0A             10271 	sub	a,#0x0A
   39E2 78                10272 	ld	a,b
   39E3 DE 00             10273 	sbc	a,#0x00
   39E5 FAr00s3A          10274 	jp	M,00108$
   39E8                   10275 00107$:
                          10276 ;pong.c:240: if(YouWinAnim.gobj.in_use && YouWinAnim.state == DIE) {
   39E8 21rA7s02          10277 	ld	hl,#_YouWinAnim
   39EB 7E                10278 	ld	a,(hl)
   39EC B7                10279 	or	a,a
   39ED C8                10280 	ret	Z
   39EE 01rBEs02          10281 	ld	bc,#_YouWinAnim + 23
   39F1 0A                10282 	ld	a,(bc)
   39F2 D6 02             10283 	sub	a,#0x02
   39F4 28 01             10284 	jr	Z,00119$
   39F6 C9                10285 	ret
   39F7                   10286 00119$:
                          10287 ;pong.c:242: Game_RequestSetState(MENU);
   39F7 3E 01             10288 	ld	a,#0x01
   39F9 F5                10289 	push	af
   39FA 33                10290 	inc	sp
   39FB CDr3Ds3C          10291 	call	_Game_RequestSetState
   39FE 33                10292 	inc	sp
   39FF C9                10293 	ret
   3A00                   10294 00108$:
                          10295 ;pong.c:248: if(ball1.state == DIE
   3A00 01rA4s02          10296 	ld	bc,#_ball1 + 29
   3A03 0A                10297 	ld	a,(bc)
   3A04 D6 02             10298 	sub	a,#0x02
   3A06 28 01             10299 	jr	Z,00121$
   3A08 C9                10300 	ret
   3A09                   10301 00121$:
                          10302 ;pong.c:250: && helper_GameObjScore_IsScoreBlinkedAtLeast(4)
   3A09 3E 04             10303 	ld	a,#0x04
   3A0B F5                10304 	push	af
   3A0C 33                10305 	inc	sp
   3A0D CDrD4s1B          10306 	call	_helper_GameObjScore_IsScoreBlinkedAtLeast
   3A10 33                10307 	inc	sp
   3A11 AF                10308 	xor	a,a
   3A12 B5                10309 	or	a,l
   3A13 C8                10310 	ret	Z
                          10311 ;pong.c:252: Game_Initialize();
   3A14 CDrE5s37          10312 	call	_Game_Initialize
                          10313 ;pong.c:253: Game_InitializeLevelGameObjects();
   3A17 C3r3Bs38          10314 	jp	_Game_InitializeLevelGameObjects
   3A1A                   10315 _Game_ReInit_Watcher_end::
                          10316 ;pong.c:260: void Game_Play(void)
                          10317 ;	---------------------------------
                          10318 ; Function Game_Play
                          10319 ; ---------------------------------
   3A1A                   10320 _Game_Play_start::
   3A1A                   10321 _Game_Play:
   3A1A DD E5             10322 	push	ix
   3A1C DD 21 00 00       10323 	ld	ix,#0
   3A20 DD 39             10324 	add	ix,sp
   3A22 21 F4 FF          10325 	ld	hl,#-12
   3A25 39                10326 	add	hl,sp
   3A26 F9                10327 	ld	sp,hl
                          10328 ;pong.c:262: while (!request_exit) // Check wether key press is ESC if so exit loop
   3A27 21rECs02          10329 	ld	hl,#_game + 4
   3A2A DD 75 F6          10330 	ld	-10 (ix),l
   3A2D DD 74 F7          10331 	ld	-9 (ix),h
   3A30 11rECs02          10332 	ld	de,#_game + 4
   3A33 DD 73 FE          10333 	ld	-2 (ix),e
   3A36 DD 72 FF          10334 	ld	-1 (ix),d
   3A39 DD 73 FC          10335 	ld	-4 (ix),e
   3A3C DD 72 FD          10336 	ld	-3 (ix),d
   3A3F 21rF0s02          10337 	ld	hl,#_game + 8
   3A42 DD 75 FA          10338 	ld	-6 (ix),l
   3A45 DD 74 FB          10339 	ld	-5 (ix),h
   3A48 DD 73 F8          10340 	ld	-8 (ix),e
   3A4B DD 72 F9          10341 	ld	-7 (ix),d
   3A4E                   10342 00123$:
   3A4E AF                10343 	xor	a,a
   3A4F 21r1As03          10344 	ld	hl,#_request_exit + 0
   3A52 B6                10345 	or	a,(hl)
   3A53 C2r89s3B          10346 	jp	NZ,00126$
                          10347 ;pong.c:264: FLOS_WaitVRT();
   3A56 D5                10348 	push	de
   3A57 CDr00s00          10349 	call	_FLOS_WaitVRT
   3A5A D1                10350 	pop	de
                          10351 ;pong.c:266: Game_MarkFrameTime(0xf00);
   3A5B D5                10352 	push	de
   3A5C 21 00 0F          10353 	ld	hl,#0x0F00
   3A5F E5                10354 	push	hl
   3A60 CDrB9s3E          10355 	call	_Game_MarkFrameTime
   3A63 F1                10356 	pop	af
   3A64 D1                10357 	pop	de
                          10358 ;pong.c:267: SET_LIVE_SPRITE_REGISTER_BANK(game.shadow_sprite_register_bank^1);
   3A65 01rF4s02          10359 	ld	bc,#_game + 12
   3A68 0A                10360 	ld	a,(bc)
   3A69 EE 01             10361 	xor	a,#0x01
   3A6B 4F                10362 	ld	c,a
   3A6C CB 21             10363 	sla	c
   3A6E CB 21             10364 	sla	c
   3A70 79                10365 	ld	a,c
   3A71 F6 09             10366 	or	a,#0x09
   3A73 21 07 02          10367 	ld	hl,#_mm__vreg_sprctrl + 0
   3A76 77                10368 	ld	(hl), a
                          10369 ;pong.c:268: clear_shadow_sprite_regs();
   3A77 D5                10370 	push	de
   3A78 CDrDDs07          10371 	call	_clear_shadow_sprite_regs
   3A7B D1                10372 	pop	de
                          10373 ;pong.c:272: Sound_PlayFx();
   3A7C D5                10374 	push	de
   3A7D CDr00s00          10375 	call	_Sound_PlayFx
   3A80 D1                10376 	pop	de
                          10377 ;pong.c:274: Game_HandlePlayerInput_PauseMode();
   3A81 D5                10378 	push	de
   3A82 CDr9Es39          10379 	call	_Game_HandlePlayerInput_PauseMode
   3A85 D1                10380 	pop	de
                          10381 ;pong.c:275: if(!game.is_paused)
   3A86 DD 6E F6          10382 	ld	l,-10 (ix)
   3A89 DD 66 F7          10383 	ld	h,-9 (ix)
   3A8C 7E                10384 	ld	a,(hl)
   3A8D B7                10385 	or	a,a
   3A8E 20 05             10386 	jr	NZ,00102$
                          10387 ;pong.c:276: Joystick_GetInput();
   3A90 D5                10388 	push	de
   3A91 CDr4Fs0F          10389 	call	_Joystick_GetInput
   3A94 D1                10390 	pop	de
   3A95                   10391 00102$:
                          10392 ;pong.c:277: PoolSprites_FreeAllSprites();
   3A95 D5                10393 	push	de
   3A96 CDrD2s10          10394 	call	_PoolSprites_FreeAllSprites
   3A99 D1                10395 	pop	de
                          10396 ;pong.c:280: if(!game.is_paused && game.game_state == LEVEL) {
   3A9A 1A                10397 	ld	a,(de)
   3A9B B7                10398 	or	a,a
   3A9C 20 0C             10399 	jr	NZ,00104$
   3A9E 21rE8s02          10400 	ld	hl,#_game
   3AA1 7E                10401 	ld	a,(hl)
   3AA2 B7                10402 	or	a,a
   3AA3 20 05             10403 	jr	NZ,00104$
                          10404 ;pong.c:281: Game_HandlePlayerInput_Bat();
   3AA5 D5                10405 	push	de
   3AA6 CDr3As39          10406 	call	_Game_HandlePlayerInput_Bat
   3AA9 D1                10407 	pop	de
   3AAA                   10408 00104$:
                          10409 ;pong.c:284: if(!game.is_paused)
   3AAA DD 6E FE          10410 	ld	l,-2 (ix)
   3AAD DD 66 FF          10411 	ld	h,-1 (ix)
   3AB0 7E                10412 	ld	a,(hl)
   3AB1 B7                10413 	or	a,a
   3AB2 20 05             10414 	jr	NZ,00107$
                          10415 ;pong.c:285: PoolGameObj_ApplyFuncMoveToObjects();
   3AB4 D5                10416 	push	de
   3AB5 CDr6Bs12          10417 	call	_PoolGameObj_ApplyFuncMoveToObjects
   3AB8 D1                10418 	pop	de
   3AB9                   10419 00107$:
                          10420 ;pong.c:292: PoolGameObj_ApplyFuncDrawToObjects();
   3AB9 D5                10421 	push	de
   3ABA CDrE0s12          10422 	call	_PoolGameObj_ApplyFuncDrawToObjects
   3ABD D1                10423 	pop	de
                          10424 ;pong.c:293: if(game.is_paused && game.is_debug_mode) {
   3ABE DD 6E FC          10425 	ld	l,-4 (ix)
   3AC1 DD 66 FD          10426 	ld	h,-3 (ix)
   3AC4 7E                10427 	ld	a,(hl)
   3AC5 B7                10428 	or	a,a
   3AC6 28 11             10429 	jr	Z,00109$
   3AC8 01rEEs02          10430 	ld	bc,#_game + 6
   3ACB 0A                10431 	ld	a,(bc)
   3ACC B7                10432 	or	a,a
   3ACD 28 0A             10433 	jr	Z,00109$
                          10434 ;pong.c:294: Debug_Move();
   3ACF D5                10435 	push	de
   3AD0 CDrFBs35          10436 	call	_Debug_Move
   3AD3 D1                10437 	pop	de
                          10438 ;pong.c:295: Debug_Draw();
   3AD4 D5                10439 	push	de
   3AD5 CDr14s36          10440 	call	_Debug_Draw
   3AD8 D1                10441 	pop	de
   3AD9                   10442 00109$:
                          10443 ;pong.c:302: Game_ReInit_Watcher();
   3AD9 D5                10444 	push	de
   3ADA CDrCAs39          10445 	call	_Game_ReInit_Watcher
   3ADD D1                10446 	pop	de
                          10447 ;pong.c:304: if(game.isMusicEnabled) {
   3ADE DD 6E FA          10448 	ld	l,-6 (ix)
   3AE1 DD 66 FB          10449 	ld	h,-5 (ix)
   3AE4 7E                10450 	ld	a,(hl)
   3AE5 B7                10451 	or	a,a
   3AE6 28 0A             10452 	jr	Z,00112$
                          10453 ;pong.c:305: Music_PlayTracker();
   3AE8 D5                10454 	push	de
   3AE9 CDr00s00          10455 	call	_Music_PlayTracker
   3AEC D1                10456 	pop	de
                          10457 ;pong.c:306: Music_UpdateSoundHardware();
   3AED D5                10458 	push	de
   3AEE CDr00s00          10459 	call	_Music_UpdateSoundHardware
   3AF1 D1                10460 	pop	de
   3AF2                   10461 00112$:
                          10462 ;pong.c:310: if(game.isRequestSetState) {
   3AF2 01rE9s02          10463 	ld	bc,#_game + 1
   3AF5 0A                10464 	ld	a,(bc)
   3AF6 B7                10465 	or	a,a
   3AF7 28 16             10466 	jr	Z,00116$
                          10467 ;pong.c:311: game.isRequestSetState = FALSE;
   3AF9 3E 00             10468 	ld	a,#0x00
   3AFB 02                10469 	ld	(bc),a
                          10470 ;pong.c:312: if(!Game_SetState(game.new_state))
   3AFC 21rEAs02          10471 	ld	hl,#_game + 2
   3AFF 4E                10472 	ld	c,(hl)
   3B00 D5                10473 	push	de
   3B01 79                10474 	ld	a,c
   3B02 F5                10475 	push	af
   3B03 33                10476 	inc	sp
   3B04 CDrA1s3D          10477 	call	_Game_SetState
   3B07 33                10478 	inc	sp
   3B08 4D                10479 	ld	c,l
   3B09 D1                10480 	pop	de
   3B0A AF                10481 	xor	a,a
   3B0B B1                10482 	or	a,c
                          10483 ;pong.c:313: return;
   3B0C CAr89s3B          10484 	jp	Z,00126$
   3B0F                   10485 00116$:
                          10486 ;pong.c:317: game.shadow_sprite_register_bank ^= 1;
   3B0F 21rF4s02          10487 	ld	hl,#_game + 12
   3B12 DD 75 F4          10488 	ld	-12 (ix),l
   3B15 DD 74 F5          10489 	ld	-11 (ix),h
   3B18 7E                10490 	ld	a,(hl)
   3B19 EE 01             10491 	xor	a,#0x01
   3B1B DD 6E F4          10492 	ld	l,-12 (ix)
   3B1E DD 66 F5          10493 	ld	h,-11 (ix)
   3B21 77                10494 	ld	(hl),a
                          10495 ;pong.c:318: if(!game.is_paused)
   3B22 DD 6E F8          10496 	ld	l,-8 (ix)
   3B25 DD 66 F9          10497 	ld	h,-7 (ix)
   3B28 7E                10498 	ld	a,(hl)
   3B29 B7                10499 	or	a,a
   3B2A 20 16             10500 	jr	NZ,00118$
                          10501 ;pong.c:319: game.global_time++;
   3B2C 21rF5s02          10502 	ld	hl,#_game + 13
   3B2F DD 75 F4          10503 	ld	-12 (ix),l
   3B32 DD 74 F5          10504 	ld	-11 (ix),h
   3B35 4E                10505 	ld	c,(hl)
   3B36 23                10506 	inc	hl
   3B37 46                10507 	ld	b,(hl)
   3B38 03                10508 	inc	bc
   3B39 DD 6E F4          10509 	ld	l,-12 (ix)
   3B3C DD 66 F5          10510 	ld	h,-11 (ix)
   3B3F 71                10511 	ld	(hl),c
   3B40 23                10512 	inc	hl
   3B41 70                10513 	ld	(hl),b
   3B42                   10514 00118$:
                          10515 ;pong.c:320: Game_MarkFrameTime(0x000);
   3B42 D5                10516 	push	de
   3B43 21 00 00          10517 	ld	hl,#0x0000
   3B46 E5                10518 	push	hl
   3B47 CDrB9s3E          10519 	call	_Game_MarkFrameTime
   3B4A F1                10520 	pop	af
   3B4B D1                10521 	pop	de
                          10522 ;pong.c:322: if(Keyboard_GetLastPressedScancode() == SC_LSHIFT) {
   3B4C D5                10523 	push	de
   3B4D CDr9As0D          10524 	call	_Keyboard_GetLastPressedScancode
   3B50 4D                10525 	ld	c,l
   3B51 D1                10526 	pop	de
   3B52 79                10527 	ld	a,c
   3B53 D6 12             10528 	sub	a,#0x12
   3B55 20 18             10529 	jr	NZ,00120$
                          10530 ;pong.c:323: debug.isShowFrameTime ^= 1; keyboard.prev_pressed_scancode = 0;
   3B57 21rF8s02          10531 	ld	hl,#_debug + 1
   3B5A DD 75 F4          10532 	ld	-12 (ix),l
   3B5D DD 74 F5          10533 	ld	-11 (ix),h
   3B60 7E                10534 	ld	a,(hl)
   3B61 EE 01             10535 	xor	a,#0x01
   3B63 DD 6E F4          10536 	ld	l,-12 (ix)
   3B66 DD 66 F5          10537 	ld	h,-11 (ix)
   3B69 77                10538 	ld	(hl),a
   3B6A 3E 00             10539 	ld	a,#0x00
   3B6C 32r3Es03          10540 	ld	(#_keyboard + 2),a
   3B6F                   10541 00120$:
                          10542 ;pong.c:338: if(!Debug_CheckCurrentBank()) {
   3B6F D5                10543 	push	de
   3B70 CDr4Ds37          10544 	call	_Debug_CheckCurrentBank
   3B73 4D                10545 	ld	c,l
   3B74 D1                10546 	pop	de
   3B75 AF                10547 	xor	a,a
   3B76 B1                10548 	or	a,c
   3B77 C2r4Es3A          10549 	jp	NZ,00123$
                          10550 ;pong.c:339: Game_MarkFrameTime(0x00F);
   3B7A D5                10551 	push	de
   3B7B 21 0F 00          10552 	ld	hl,#0x000F
   3B7E E5                10553 	push	hl
   3B7F CDrB9s3E          10554 	call	_Game_MarkFrameTime
   3B82 F1                10555 	pop	af
   3B83 D1                10556 	pop	de
                          10557 ;pong.c:343: ENDASM();
                          10558 ;;
   3B84 F3                10559 		           di
   3B85 76                10560 		           halt
                          10561 		           
   3B86 C3r4Es3A          10562 	jp	00123$
   3B89                   10563 00126$:
   3B89 DD F9             10564 	ld	sp,ix
   3B8B DD E1             10565 	pop	ix
   3B8D C9                10566 	ret
   3B8E                   10567 _Game_Play_end::
                          10568 ;pong.c:352: void Game_InitLevelBegining(void)
                          10569 ;	---------------------------------
                          10570 ; Function Game_InitLevelBegining
                          10571 ; ---------------------------------
   3B8E                   10572 _Game_InitLevelBegining_start::
   3B8E                   10573 _Game_InitLevelBegining:
                          10574 ;pong.c:354: scoreA.score = 0;  // Intialize score
   3B8E 21r19s02          10575 	ld	hl, #_scoreA + 24
   3B91 36 00             10576 	ld	(hl),#0x00
   3B93 23                10577 	inc	hl
   3B94 36 00             10578 	ld	(hl),#0x00
                          10579 ;pong.c:355: scoreB.score = 0;
   3B96 21r3Cs02          10580 	ld	hl, #_scoreB + 24
   3B99 36 00             10581 	ld	(hl),#0x00
   3B9B 23                10582 	inc	hl
   3B9C 36 00             10583 	ld	(hl),#0x00
                          10584 ;pong.c:356: scoreA.num_rockets = scoreB.num_rockets = 3;
   3B9E 01r23s02          10585 	ld	bc,#_scoreA + 34
   3BA1 11r46s02          10586 	ld	de,#_scoreB + 34
   3BA4 3E 03             10587 	ld	a,#0x03
   3BA6 12                10588 	ld	(de),a
   3BA7 02                10589 	ld	(bc),a
   3BA8 C9                10590 	ret
   3BA9                   10591 _Game_InitLevelBegining_end::
                          10592 ;pong.c:362: int main (void)
                          10593 ;	---------------------------------
                          10594 ; Function main
                          10595 ; ---------------------------------
   3BA9                   10596 _main_start::
   3BA9                   10597 _main:
                          10598 ;pong.c:365: game.isRequestSetState = FALSE;
   3BA9 3E 00             10599 	ld	a,#0x00
   3BAB 32rE9s02          10600 	ld	(#_game + 1),a
                          10601 ;pong.c:366: loadingIcon.isLoaded = FALSE;
   3BAE 21r00s00          10602 	ld	hl,#_loadingIcon
   3BB1 36 00             10603 	ld	(hl),#0x00
                          10604 ;pong.c:367: game.isFLOSVideoMode = TRUE;
   3BB3 3E 01             10605 	ld	a,#0x01
   3BB5 32rF1s02          10606 	ld	(#_game + 9),a
                          10607 ;pong.c:368: debug.isShowFrameTime = FALSE;
   3BB8 3E 00             10608 	ld	a,#0x00
   3BBA 32rF8s02          10609 	ld	(#_debug + 1),a
                          10610 ;pong.c:374: if(!Debug_CheckCurrentBank())
   3BBD CDr4Ds37          10611 	call	_Debug_CheckCurrentBank
   3BC0 AF                10612 	xor	a,a
   3BC1 B5                10613 	or	a,l
   3BC2 20 04             10614 	jr	NZ,00102$
                          10615 ;pong.c:375: return NO_REBOOT;
   3BC4 21 00 00          10616 	ld	hl,#0x0000
   3BC7 C9                10617 	ret
   3BC8                   10618 00102$:
                          10619 ;pong.c:377: initgraph();
   3BC8 CDr92s07          10620 	call	_initgraph
                          10621 ;pong.c:378: Game_SetState(STARTUP);
   3BCB 3E 03             10622 	ld	a,#0x03
   3BCD F5                10623 	push	af
   3BCE 33                10624 	inc	sp
   3BCF CDrA1s3D          10625 	call	_Game_SetState
   3BD2 33                10626 	inc	sp
                          10627 ;pong.c:380: if(!LoadingIcon_Load())
   3BD3 CDr43s07          10628 	call	_LoadingIcon_Load
   3BD6 AF                10629 	xor	a,a
   3BD7 B5                10630 	or	a,l
   3BD8 20 04             10631 	jr	NZ,00104$
                          10632 ;pong.c:381: return NO_REBOOT;
   3BDA 21 00 00          10633 	ld	hl,#0x0000
   3BDD C9                10634 	ret
   3BDE                   10635 00104$:
                          10636 ;pong.c:385: if(!Game_LoadSinTable())
   3BDE CDr7Ds3E          10637 	call	_Game_LoadSinTable
   3BE1 AF                10638 	xor	a,a
   3BE2 B5                10639 	or	a,l
   3BE3 20 04             10640 	jr	NZ,00106$
                          10641 ;pong.c:386: return REBOOT;
   3BE5 21 FF 00          10642 	ld	hl,#0x00FF
   3BE8 C9                10643 	ret
   3BE9                   10644 00106$:
                          10645 ;pong.c:387: if(!Sound_LoadSoundCode())
   3BE9 CDr1Ds33          10646 	call	_Sound_LoadSoundCode
   3BEC AF                10647 	xor	a,a
   3BED B5                10648 	or	a,l
   3BEE 20 04             10649 	jr	NZ,00108$
                          10650 ;pong.c:388: return REBOOT;
   3BF0 21 FF 00          10651 	ld	hl,#0x00FF
   3BF3 C9                10652 	ret
   3BF4                   10653 00108$:
                          10654 ;pong.c:390: if(!Sound_LoadSounds())
   3BF4 CDr51s33          10655 	call	_Sound_LoadSounds
   3BF7 AF                10656 	xor	a,a
   3BF8 B5                10657 	or	a,l
   3BF9 20 04             10658 	jr	NZ,00110$
                          10659 ;pong.c:391: return REBOOT;
   3BFB 21 FF 00          10660 	ld	hl,#0x00FF
   3BFE C9                10661 	ret
   3BFF                   10662 00110$:
                          10663 ;pong.c:392: if(!Sound_LoadFxDescriptors())
   3BFF CDr80s33          10664 	call	_Sound_LoadFxDescriptors
   3C02 AF                10665 	xor	a,a
   3C03 B5                10666 	or	a,l
   3C04 20 04             10667 	jr	NZ,00112$
                          10668 ;pong.c:393: return REBOOT;
   3C06 21 FF 00          10669 	ld	hl,#0x00FF
   3C09 C9                10670 	ret
   3C0A                   10671 00112$:
                          10672 ;pong.c:394: Sound_InitFx();
   3C0A CDrB3s33          10673 	call	_Sound_InitFx
                          10674 ;pong.c:398: if(!load_sprites())
   3C0D CDrC6s0A          10675 	call	_load_sprites
   3C10 AF                10676 	xor	a,a
   3C11 B5                10677 	or	a,l
   3C12 20 04             10678 	jr	NZ,00114$
                          10679 ;pong.c:399: return REBOOT;
   3C14 21 FF 00          10680 	ld	hl,#0x00FF
   3C17 C9                10681 	ret
   3C18                   10682 00114$:
                          10683 ;pong.c:401: Keyboard_Init();
   3C18 CDr8Cs0D          10684 	call	_Keyboard_Init
                          10685 ;pong.c:402: install_irq_handler();
   3C1B CDr28s0F          10686 	call	_install_irq_handler
                          10687 ;pong.c:404: if(!Game_SetState(MENU))
   3C1E 3E 01             10688 	ld	a,#0x01
   3C20 F5                10689 	push	af
   3C21 33                10690 	inc	sp
   3C22 CDrA1s3D          10691 	call	_Game_SetState
   3C25 33                10692 	inc	sp
   3C26 AF                10693 	xor	a,a
   3C27 B5                10694 	or	a,l
   3C28 20 04             10695 	jr	NZ,00116$
                          10696 ;pong.c:405: return REBOOT;
   3C2A 21 FF 00          10697 	ld	hl,#0x00FF
   3C2D C9                10698 	ret
   3C2E                   10699 00116$:
                          10700 ;pong.c:406: Game_Play (); // Game Engine
   3C2E CDr1As3A          10701 	call	_Game_Play
                          10702 ;pong.c:410: Sys_ClearIRQFlags(CLEAR_IRQ_KEYBOARD);
   3C31 3E 01             10703 	ld	a,#0x01
   3C33 F5                10704 	push	af
   3C34 33                10705 	inc	sp
   3C35 CDrD6s02          10706 	call	_Sys_ClearIRQFlags
   3C38 33                10707 	inc	sp
                          10708 ;pong.c:411: return REBOOT;
   3C39 21 FF 00          10709 	ld	hl,#0x00FF
   3C3C C9                10710 	ret
   3C3D                   10711 _main_end::
                          10712 ;pong.c:414: void Game_RequestSetState(GameState state)
                          10713 ;	---------------------------------
                          10714 ; Function Game_RequestSetState
                          10715 ; ---------------------------------
   3C3D                   10716 _Game_RequestSetState_start::
   3C3D                   10717 _Game_RequestSetState:
   3C3D DD E5             10718 	push	ix
   3C3F DD 21 00 00       10719 	ld	ix,#0
   3C43 DD 39             10720 	add	ix,sp
                          10721 ;pong.c:416: game.isRequestSetState = TRUE;
   3C45 3E 01             10722 	ld	a,#0x01
   3C47 32rE9s02          10723 	ld	(#_game + 1),a
                          10724 ;pong.c:417: game.new_state = state;
   3C4A 01rEAs02          10725 	ld	bc,#_game + 2
   3C4D DD 7E 04          10726 	ld	a,4 (ix)
   3C50 02                10727 	ld	(bc),a
   3C51 DD E1             10728 	pop	ix
   3C53 C9                10729 	ret
   3C54                   10730 _Game_RequestSetState_end::
                          10731 ;pong.c:421: BOOL Game_LoadStateData(GameState state, GameState prev_state)
                          10732 ;	---------------------------------
                          10733 ; Function Game_LoadStateData
                          10734 ; ---------------------------------
   3C54                   10735 _Game_LoadStateData_start::
   3C54                   10736 _Game_LoadStateData:
   3C54 DD E5             10737 	push	ix
   3C56 DD 21 00 00       10738 	ld	ix,#0
   3C5A DD 39             10739 	add	ix,sp
   3C5C F5                10740 	push	af
   3C5D 3B                10741 	dec	sp
                          10742 ;pong.c:457: for(i=0 ;i<num; i++)
   3C5E 0E 00             10743 	ld	c,#0x00
   3C60                   10744 00104$:
                          10745 ;pong.c:458: if(state == gameStateData[i].s && prev_state == gameStateData[i].prev_s)
   3C60 79                10746 	ld	a,c
   3C61 FE 03             10747 	cp	a,#0x03
   3C63 30 2F             10748 	jr	NC,00107$
   3C65 07                10749 	rlca
   3C66 07                10750 	rlca
   3C67 07                10751 	rlca
   3C68 E6 F8             10752 	and	a,#0xF8
   3C6A 47                10753 	ld	b, a
   3C6B C6r83             10754 	add	a,#<_Game_LoadStateData_gameStateData_1_1
   3C6D 5F                10755 	ld	e,a
   3C6E 3Es0A             10756 	ld	a,#>_Game_LoadStateData_gameStateData_1_1
   3C70 CE 00             10757 	adc	a,#0x00
   3C72 57                10758 	ld	d,a
   3C73 1A                10759 	ld	a,(de)
   3C74 5F                10760 	ld	e,a
   3C75 DD 7E 04          10761 	ld	a,4 (ix)
   3C78 93                10762 	sub	e
   3C79 20 16             10763 	jr	NZ,00106$
   3C7B 3Er83             10764 	ld	a,#<_Game_LoadStateData_gameStateData_1_1
   3C7D 80                10765 	add	a,b
   3C7E 47                10766 	ld	b,a
   3C7F 3Es0A             10767 	ld	a,#>_Game_LoadStateData_gameStateData_1_1
   3C81 CE 00             10768 	adc	a,#0x00
   3C83 5F                10769 	ld	e,a
   3C84 04                10770 	inc	b
   3C85 20 01             10771 	jr	NZ,00139$
   3C87 1C                10772 	inc	e
   3C88                   10773 00139$:
   3C88 68                10774 	ld	l,b
   3C89 63                10775 	ld	h,e
   3C8A 46                10776 	ld	b,(hl)
   3C8B DD 7E 05          10777 	ld	a,5 (ix)
   3C8E 90                10778 	sub	b
   3C8F 28 03             10779 	jr	Z,00107$
                          10780 ;pong.c:459: break;
   3C91                   10781 00106$:
                          10782 ;pong.c:457: for(i=0 ;i<num; i++)
   3C91 0C                10783 	inc	c
   3C92 18 CC             10784 	jr	00104$
   3C94                   10785 00107$:
                          10786 ;pong.c:460: if(i == num) return TRUE;    // state was not found in struct, just return
   3C94 79                10787 	ld	a,c
   3C95 D6 03             10788 	sub	a,#0x03
   3C97 20 05             10789 	jr	NZ,00109$
   3C99 2E 01             10790 	ld	l,#0x01
   3C9B C3r58s3D          10791 	jp	00123$
   3C9E                   10792 00109$:
                          10793 ;pong.c:462: TileMap_Clear();
   3C9E C5                10794 	push	bc
   3C9F CDr54s0C          10795 	call	_TileMap_Clear
   3CA2 C1                10796 	pop	bc
                          10797 ;pong.c:463: LoadingIcon_Enable(TRUE);
   3CA3 C5                10798 	push	bc
   3CA4 3E 01             10799 	ld	a,#0x01
   3CA6 F5                10800 	push	af
   3CA7 33                10801 	inc	sp
   3CA8 CDr9Ds06          10802 	call	_LoadingIcon_Enable
   3CAB 33                10803 	inc	sp
   3CAC C1                10804 	pop	bc
                          10805 ;pong.c:466: pTilesDesc = gameStateData[i].tiles;
   3CAD 79                10806 	ld	a,c
   3CAE 07                10807 	rlca
   3CAF 07                10808 	rlca
   3CB0 07                10809 	rlca
   3CB1 E6 F8             10810 	and	a,#0xF8
   3CB3 DD 77 FD          10811 	ld	-3 (ix),a
   3CB6 C6r83             10812 	add	a,#<_Game_LoadStateData_gameStateData_1_1
   3CB8 6F                10813 	ld	l,a
   3CB9 3Es0A             10814 	ld	a,#>_Game_LoadStateData_gameStateData_1_1
   3CBB CE 00             10815 	adc	a,#0x00
   3CBD 67                10816 	ld	h,a
   3CBE 23                10817 	inc	hl
   3CBF 23                10818 	inc	hl
   3CC0 5E                10819 	ld	e,(hl)
   3CC1 23                10820 	inc	hl
   3CC2 56                10821 	ld	d,(hl)
                          10822 ;pong.c:467: while(pTilesDesc->pFilenameTiles != NULL) {
   3CC3                   10823 00112$:
   3CC3 6B                10824 	ld	l,e
   3CC4 62                10825 	ld	h,d
   3CC5 7E                10826 	ld	a,(hl)
   3CC6 DD 77 FE          10827 	ld	-2 (ix),a
   3CC9 23                10828 	inc	hl
   3CCA 7E                10829 	ld	a,(hl)
   3CCB DD 77 FF          10830 	ld	-1 (ix),a
   3CCE DD 7E FE          10831 	ld	a,-2 (ix)
   3CD1 DD B6 FF          10832 	or	a,-1 (ix)
   3CD4 28 27             10833 	jr	Z,00114$
                          10834 ;pong.c:468: if(!Background_LoadTiles(pTilesDesc->pFilenameTiles, pTilesDesc->vramAddrTiles))
   3CD6 4B                10835 	ld	c,e
   3CD7 42                10836 	ld	b,d
   3CD8 69                10837 	ld	l,c
   3CD9 60                10838 	ld	h,b
   3CDA 23                10839 	inc	hl
   3CDB 23                10840 	inc	hl
   3CDC 4E                10841 	ld	c,(hl)
   3CDD 23                10842 	inc	hl
   3CDE 46                10843 	ld	b,(hl)
   3CDF D5                10844 	push	de
   3CE0 C5                10845 	push	bc
   3CE1 DD 6E FE          10846 	ld	l,-2 (ix)
   3CE4 DD 66 FF          10847 	ld	h,-1 (ix)
   3CE7 E5                10848 	push	hl
   3CE8 CDr2Bs0B          10849 	call	_Background_LoadTiles
   3CEB F1                10850 	pop	af
   3CEC F1                10851 	pop	af
   3CED 4D                10852 	ld	c,l
   3CEE D1                10853 	pop	de
   3CEF AF                10854 	xor	a,a
                          10855 ;pong.c:469: return FALSE;
   3CF0 B1                10856 	or	a,c
   3CF1 20 04             10857 	jr	NZ,00111$
   3CF3 6F                10858 	ld	l,a
   3CF4 C3r58s3D          10859 	jp	00123$
   3CF7                   10860 00111$:
                          10861 ;pong.c:470: pTilesDesc++;
   3CF7 13                10862 	inc	de
   3CF8 13                10863 	inc	de
   3CF9 13                10864 	inc	de
   3CFA 13                10865 	inc	de
   3CFB 18 C6             10866 	jr	00112$
   3CFD                   10867 00114$:
                          10868 ;pong.c:475: pFilename = gameStateData[i].pFilenameMusic;
   3CFD 3Er83             10869 	ld	a,#<_Game_LoadStateData_gameStateData_1_1
   3CFF DD 86 FD          10870 	add	a,-3 (ix)
   3D02 6F                10871 	ld	l,a
   3D03 3Es0A             10872 	ld	a,#>_Game_LoadStateData_gameStateData_1_1
   3D05 CE 00             10873 	adc	a,#0x00
   3D07 67                10874 	ld	h,a
   3D08 23                10875 	inc	hl
   3D09 23                10876 	inc	hl
   3D0A 23                10877 	inc	hl
   3D0B 23                10878 	inc	hl
   3D0C 4E                10879 	ld	c,(hl)
   3D0D 23                10880 	inc	hl
   3D0E 46                10881 	ld	b,(hl)
                          10882 ;pong.c:476: if(pFilename) {
   3D0F 79                10883 	ld	a,c
   3D10 B0                10884 	or	a,b
   3D11 28 0F             10885 	jr	Z,00118$
                          10886 ;pong.c:477: if(!Mod_LoadMusicModule(pFilename))
   3D13 C5                10887 	push	bc
   3D14 CDrADs34          10888 	call	_Mod_LoadMusicModule
   3D17 F1                10889 	pop	af
                          10890 ;pong.c:478: return FALSE;
   3D18 AF                10891 	xor	a,a
   3D19 B5                10892 	or	a,l
   3D1A 20 03             10893 	jr	NZ,00116$
   3D1C 6F                10894 	ld	l,a
   3D1D 18 39             10895 	jr	00123$
   3D1F                   10896 00116$:
                          10897 ;pong.c:479: MUSIC_Init();
   3D1F CDrF0s35          10898 	call	_MUSIC_Init
   3D22                   10899 00118$:
                          10900 ;pong.c:482: LoadingIcon_Enable(FALSE);
   3D22 3E 00             10901 	ld	a,#0x00
   3D24 F5                10902 	push	af
   3D25 33                10903 	inc	sp
   3D26 CDr9Ds06          10904 	call	_LoadingIcon_Enable
   3D29 33                10905 	inc	sp
                          10906 ;pong.c:484: pFilename = gameStateData[i].pFilenamePalette;
   3D2A 3Er83             10907 	ld	a,#<_Game_LoadStateData_gameStateData_1_1
   3D2C DD 86 FD          10908 	add	a,-3 (ix)
   3D2F 5F                10909 	ld	e,a
   3D30 3Es0A             10910 	ld	a,#>_Game_LoadStateData_gameStateData_1_1
   3D32 CE 00             10911 	adc	a,#0x00
   3D34 57                10912 	ld	d,a
   3D35 21 06 00          10913 	ld	hl,#0x0006
   3D38 19                10914 	add	hl,de
   3D39 5E                10915 	ld	e,(hl)
   3D3A 23                10916 	inc	hl
   3D3B 56                10917 	ld	d,(hl)
   3D3C 4B                10918 	ld	c,e
   3D3D 42                10919 	ld	b,d
                          10920 ;pong.c:485: if(pFilename) {
   3D3E 79                10921 	ld	a,c
   3D3F B0                10922 	or	a,b
   3D40 28 0C             10923 	jr	Z,00122$
                          10924 ;pong.c:486: if(!Util_LoadPalette(pFilename))
   3D42 C5                10925 	push	bc
   3D43 CDr8Ds02          10926 	call	_Util_LoadPalette
   3D46 F1                10927 	pop	af
                          10928 ;pong.c:487: return FALSE;
   3D47 AF                10929 	xor	a,a
   3D48 B5                10930 	or	a,l
   3D49 20 03             10931 	jr	NZ,00122$
   3D4B 6F                10932 	ld	l,a
   3D4C 18 0A             10933 	jr	00123$
   3D4E                   10934 00122$:
                          10935 ;pong.c:489: Background_InitTilemap(0);
   3D4E 21 00 00          10936 	ld	hl,#0x0000
   3D51 E5                10937 	push	hl
   3D52 CDrADs0C          10938 	call	_Background_InitTilemap
   3D55 F1                10939 	pop	af
                          10940 ;pong.c:491: return TRUE;
   3D56 2E 01             10941 	ld	l,#0x01
   3D58                   10942 00123$:
   3D58 DD F9             10943 	ld	sp,ix
   3D5A DD E1             10944 	pop	ix
   3D5C C9                10945 	ret
   3D5D                   10946 _Game_LoadStateData_end::
   3D5D                   10947 __str_13:
   3D5D 4D 45 4E 55 2E 54 10948 	.ascii "MENU.TIL"
        49 4C
   3D65 00                10949 	.db 0x00
   3D66                   10950 __str_14:
   3D66 43 52 45 44 49 54 10951 	.ascii "CREDITS.TIL"
        53 2E 54 49 4C
   3D71 00                10952 	.db 0x00
   3D72                   10953 __str_15:
   3D72 42 31 2E 54 49 4C 10954 	.ascii "B1.TIL"
   3D78 00                10955 	.db 0x00
   3D79                   10956 __str_16:
   3D79 42 41 4C 4C 44 52 10957 	.ascii "BALLDRE2.MOD"
        45 32 2E 4D 4F 44
   3D85 00                10958 	.db 0x00
   3D86                   10959 __str_17:
   3D86 4D 45 4E 55 2E 50 10960 	.ascii "MENU.PAL"
        41 4C
   3D8E 00                10961 	.db 0x00
   3D8F                   10962 __str_18:
   3D8F 4D 4F 4E 44 41 59 10963 	.ascii "MONDAY.MOD"
        2E 4D 4F 44
   3D99 00                10964 	.db 0x00
   3D9A                   10965 __str_19:
   3D9A 42 31 2E 50 41 4C 10966 	.ascii "B1.PAL"
   3DA0 00                10967 	.db 0x00
                          10968 ;pong.c:494: BOOL Game_SetState(GameState state)
                          10969 ;	---------------------------------
                          10970 ; Function Game_SetState
                          10971 ; ---------------------------------
   3DA1                   10972 _Game_SetState_start::
   3DA1                   10973 _Game_SetState:
   3DA1 DD E5             10974 	push	ix
   3DA3 DD 21 00 00       10975 	ld	ix,#0
   3DA7 DD 39             10976 	add	ix,sp
                          10977 ;pong.c:498: if(state == game.game_state)
   3DA9 21rE8s02          10978 	ld	hl,#_game
   3DAC 4E                10979 	ld	c,(hl)
   3DAD DD 7E 04          10980 	ld	a,4 (ix)
   3DB0 91                10981 	sub	c
   3DB1 20 05             10982 	jr	NZ,00102$
                          10983 ;pong.c:499: return TRUE;
   3DB3 2E 01             10984 	ld	l,#0x01
   3DB5 C3r61s3E          10985 	jp	00119$
   3DB8                   10986 00102$:
                          10987 ;pong.c:501: prev_game_state = game.game_state;
                          10988 ;pong.c:502: game.game_state = state;
   3DB8 21rE8s02          10989 	ld	hl,#_game
   3DBB DD 7E 04          10990 	ld	a,4 (ix)
   3DBE 77                10991 	ld	(hl),a
                          10992 ;pong.c:504: if(state == LEVEL) {
   3DBF AF                10993 	xor	a,a
   3DC0 DD B6 04          10994 	or	a,4 (ix)
   3DC3 20 37             10995 	jr	NZ,00106$
                          10996 ;pong.c:505: game.isMusicEnabled = FALSE;
   3DC5 11rF0s02          10997 	ld	de,#_game + 8
   3DC8 3E 00             10998 	ld	a,#0x00
   3DCA 12                10999 	ld	(de),a
                          11000 ;pong.c:506: game.isSoundfxEnabled = TRUE;
   3DCB 11rEFs02          11001 	ld	de,#_game + 7
   3DCE 3E 01             11002 	ld	a,#0x01
   3DD0 12                11003 	ld	(de),a
                          11004 ;pong.c:508: MUSIC_Silence();
   3DD1 C5                11005 	push	bc
   3DD2 CDrEAs35          11006 	call	_MUSIC_Silence
   3DD5 C1                11007 	pop	bc
                          11008 ;pong.c:510: if(!Game_LoadStateData(state, prev_game_state))
   3DD6 C5                11009 	push	bc
   3DD7 79                11010 	ld	a,c
   3DD8 F5                11011 	push	af
   3DD9 33                11012 	inc	sp
   3DDA DD 7E 04          11013 	ld	a,4 (ix)
   3DDD F5                11014 	push	af
   3DDE 33                11015 	inc	sp
   3DDF CDr54s3C          11016 	call	_Game_LoadStateData
   3DE2 F1                11017 	pop	af
   3DE3 7D                11018 	ld	a,l
   3DE4 C1                11019 	pop	bc
   3DE5 47                11020 	ld	b,a
                          11021 ;pong.c:511: return FALSE;
   3DE6 B7                11022 	or	a,a
   3DE7 20 04             11023 	jr	NZ,00104$
   3DE9 6F                11024 	ld	l,a
   3DEA C3r61s3E          11025 	jp	00119$
   3DED                   11026 00104$:
                          11027 ;pong.c:515: Game_InitLevelBegining();
   3DED C5                11028 	push	bc
   3DEE CDr8Es3B          11029 	call	_Game_InitLevelBegining
   3DF1 C1                11030 	pop	bc
                          11031 ;pong.c:516: Game_Initialize();
   3DF2 C5                11032 	push	bc
   3DF3 CDrE5s37          11033 	call	_Game_Initialize
   3DF6 C1                11034 	pop	bc
                          11035 ;pong.c:517: Game_InitializeLevelGameObjects();
   3DF7 C5                11036 	push	bc
   3DF8 CDr3Bs38          11037 	call	_Game_InitializeLevelGameObjects
   3DFB C1                11038 	pop	bc
   3DFC                   11039 00106$:
                          11040 ;pong.c:519: if(state == MENU) {
   3DFC DD 7E 04          11041 	ld	a,4 (ix)
   3DFF D6 01             11042 	sub	a,#0x01
   3E01 20 3D             11043 	jr	NZ,00114$
                          11044 ;pong.c:520: game.isMusicEnabled = TRUE;
   3E03 11rF0s02          11045 	ld	de,#_game + 8
   3E06 3E 01             11046 	ld	a,#0x01
   3E08 12                11047 	ld	(de),a
                          11048 ;pong.c:521: game.isSoundfxEnabled = FALSE;
   3E09 11rEFs02          11049 	ld	de,#_game + 7
   3E0C 3E 00             11050 	ld	a,#0x00
   3E0E 12                11051 	ld	(de),a
                          11052 ;pong.c:523: if(prev_game_state == CREDITS)
   3E0F 79                11053 	ld	a,c
   3E10 D6 02             11054 	sub	a,#0x02
   3E12 20 0A             11055 	jr	NZ,00108$
                          11056 ;pong.c:524: Background_InitTilemap(0);
   3E14 C5                11057 	push	bc
   3E15 21 00 00          11058 	ld	hl,#0x0000
   3E18 E5                11059 	push	hl
   3E19 CDrADs0C          11060 	call	_Background_InitTilemap
   3E1C F1                11061 	pop	af
   3E1D C1                11062 	pop	bc
   3E1E                   11063 00108$:
                          11064 ;pong.c:525: if(prev_game_state == LEVEL)
   3E1E AF                11065 	xor	a,a
   3E1F B1                11066 	or	a,c
   3E20 20 05             11067 	jr	NZ,00110$
                          11068 ;pong.c:526: MUSIC_Silence();
   3E22 C5                11069 	push	bc
   3E23 CDrEAs35          11070 	call	_MUSIC_Silence
   3E26 C1                11071 	pop	bc
   3E27                   11072 00110$:
                          11073 ;pong.c:528: if(!Game_LoadStateData(state, prev_game_state))
   3E27 79                11074 	ld	a,c
   3E28 F5                11075 	push	af
   3E29 33                11076 	inc	sp
   3E2A DD 7E 04          11077 	ld	a,4 (ix)
   3E2D F5                11078 	push	af
   3E2E 33                11079 	inc	sp
   3E2F CDr54s3C          11080 	call	_Game_LoadStateData
   3E32 F1                11081 	pop	af
                          11082 ;pong.c:529: return FALSE;
   3E33 AF                11083 	xor	a,a
   3E34 B5                11084 	or	a,l
   3E35 20 03             11085 	jr	NZ,00112$
   3E37 6F                11086 	ld	l,a
   3E38 18 27             11087 	jr	00119$
   3E3A                   11088 00112$:
                          11089 ;pong.c:532: Game_Initialize();
   3E3A CDrE5s37          11090 	call	_Game_Initialize
                          11091 ;pong.c:533: Game_InitializeMenuGameObjects();
   3E3D CDr1Cs38          11092 	call	_Game_InitializeMenuGameObjects
   3E40                   11093 00114$:
                          11094 ;pong.c:536: if(state == CREDITS) {
   3E40 DD 7E 04          11095 	ld	a,4 (ix)
   3E43 D6 02             11096 	sub	a,#0x02
   3E45 20 08             11097 	jr	NZ,00116$
                          11098 ;pong.c:539: Background_InitTilemap(TILES_CREDITS_VRAM_ADDR/0x100);
   3E47 21 60 01          11099 	ld	hl,#0x0160
   3E4A E5                11100 	push	hl
   3E4B CDrADs0C          11101 	call	_Background_InitTilemap
   3E4E F1                11102 	pop	af
   3E4F                   11103 00116$:
                          11104 ;pong.c:542: if(state == STARTUP) {
   3E4F DD 7E 04          11105 	ld	a,4 (ix)
   3E52 D6 03             11106 	sub	a,#0x03
   3E54 20 03             11107 	jr	NZ,00118$
                          11108 ;pong.c:543: TileMap_Clear();
   3E56 CDr54s0C          11109 	call	_TileMap_Clear
   3E59                   11110 00118$:
                          11111 ;pong.c:548: Keyboard_Init();
   3E59 CDr8Cs0D          11112 	call	_Keyboard_Init
                          11113 ;pong.c:549: Input_ClearPlayersInput();
   3E5C CDr6Ds0D          11114 	call	_Input_ClearPlayersInput
                          11115 ;pong.c:550: return TRUE;
   3E5F 2E 01             11116 	ld	l,#0x01
   3E61                   11117 00119$:
   3E61 DD E1             11118 	pop	ix
   3E63 C9                11119 	ret
   3E64                   11120 _Game_SetState_end::
                          11121 ;pong.c:577: void setfillstyle (int color1,int color2)
                          11122 ;	---------------------------------
                          11123 ; Function setfillstyle
                          11124 ; ---------------------------------
   3E64                   11125 _setfillstyle_start::
   3E64                   11126 _setfillstyle:
   3E64 DD E5             11127 	push	ix
   3E66 DD 21 00 00       11128 	ld	ix,#0
   3E6A DD 39             11129 	add	ix,sp
                          11130 ;pong.c:580: cur_color = color2;
   3E6C DD 7E 06          11131 	ld	a,6 (ix)
   3E6F 21r9Bs0A          11132 	ld	hl,#_cur_color + 0
   3E72 77                11133 	ld	(hl), a
   3E73 DD 7E 07          11134 	ld	a,7 (ix)
   3E76 21r9Cs0A          11135 	ld	hl,#_cur_color + 1
   3E79 77                11136 	ld	(hl), a
   3E7A DD E1             11137 	pop	ix
   3E7C C9                11138 	ret
   3E7D                   11139 _setfillstyle_end::
                          11140 ;pong.c:591: BOOL Game_LoadSinTable(void)
                          11141 ;	---------------------------------
                          11142 ; Function Game_LoadSinTable
                          11143 ; ---------------------------------
   3E7D                   11144 _Game_LoadSinTable_start::
   3E7D                   11145 _Game_LoadSinTable:
                          11146 ;pong.c:593: if(!load_file_to_buffer("SINE_TAB.BIN", 0, (byte*)MULT_TABLE, 0x200, 0))
   3E7D 3E 00             11147 	ld	a,#0x00
   3E7F F5                11148 	push	af
   3E80 33                11149 	inc	sp
   3E81 21 00 00          11150 	ld	hl,#0x0000
   3E84 E5                11151 	push	hl
   3E85 21 00 02          11152 	ld	hl,#0x0200
   3E88 E5                11153 	push	hl
   3E89 26 06             11154 	ld	h, #0x06
   3E8B E5                11155 	push	hl
   3E8C 21 00 00          11156 	ld	hl,#0x0000
   3E8F E5                11157 	push	hl
   3E90 21 00 00          11158 	ld	hl,#0x0000
   3E93 E5                11159 	push	hl
   3E94 21rACs3E          11160 	ld	hl,#__str_20
   3E97 E5                11161 	push	hl
   3E98 CDrECs02          11162 	call	_load_file_to_buffer
   3E9B FD 21 0D 00       11163 	ld	iy,#0x000D
   3E9F FD 39             11164 	add	iy,sp
   3EA1 FD F9             11165 	ld	sp,iy
                          11166 ;pong.c:594: return FALSE;
   3EA3 AF                11167 	xor	a,a
   3EA4 B5                11168 	or	a,l
   3EA5 20 02             11169 	jr	NZ,00102$
   3EA7 6F                11170 	ld	l,a
   3EA8 C9                11171 	ret
   3EA9                   11172 00102$:
                          11173 ;pong.c:595: return TRUE;
   3EA9 2E 01             11174 	ld	l,#0x01
   3EAB C9                11175 	ret
   3EAC                   11176 _Game_LoadSinTable_end::
   3EAC                   11177 __str_20:
   3EAC 53 49 4E 45 5F 54 11178 	.ascii "SINE_TAB.BIN"
        41 42 2E 42 49 4E
   3EB8 00                11179 	.db 0x00
                          11180 ;pong.c:598: void Game_MarkFrameTime(ushort color)
                          11181 ;	---------------------------------
                          11182 ; Function Game_MarkFrameTime
                          11183 ; ---------------------------------
   3EB9                   11184 _Game_MarkFrameTime_start::
   3EB9                   11185 _Game_MarkFrameTime:
   3EB9 DD E5             11186 	push	ix
   3EBB DD 21 00 00       11187 	ld	ix,#0
   3EBF DD 39             11188 	add	ix,sp
                          11189 ;pong.c:600: if(debug.isShowFrameTime)
   3EC1 01rF8s02          11190 	ld	bc,#_debug + 1
   3EC4 0A                11191 	ld	a,(bc)
   3EC5 B7                11192 	or	a,a
   3EC6 28 0B             11193 	jr	Z,00103$
                          11194 ;pong.c:601: MarkFrameTime(color);
   3EC8 DD 6E 04          11195 	ld	l,4 (ix)
   3ECB DD 66 05          11196 	ld	h,5 (ix)
   3ECE E5                11197 	push	hl
   3ECF CDr00s00          11198 	call	_MarkFrameTime
   3ED2 F1                11199 	pop	af
   3ED3                   11200 00103$:
   3ED3 DD E1             11201 	pop	ix
   3ED5 C9                11202 	ret
   3ED6                   11203 _Game_MarkFrameTime_end::
                          11204 	.area _CODE
                          11205 	.area _CABS
