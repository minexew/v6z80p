//// Engine
public class Engine
{
    GameObj[10] obj;
    
    PlatformGfx() myPlatformGfx;
    
    bool isExitRequested;
    
    public const int screen_width  = 320;
    public const int screen_height = 240;
    
    /// Constructor
    Engine()
    {
        Debug.Print("Engine()\n");    
                
        isExitRequested = false;
        // init with zero (null) value
        for(int i = 0; i < obj.Length; i++)
            obj[i] = null;
            
        
        
        // create obj and add  behavior
        obj[0] = new GameObj();
        obj[0].Init(this);
        MovingBehavior moving_behavior = new MovingBehavior();
        moving_behavior.xvel = 1;        
        obj[0].AddBehavior(moving_behavior);

        // create obj and add  behavior
        obj[1] = new GameObj();
        obj[1].Init(this);
        BouncedBehavior bounced_behavior = new BouncedBehavior();
        bounced_behavior.xvel = 1;
        bounced_behavior.x1_bounce = 0;
        bounced_behavior.x2_bounce = 160;
        obj[1].AddBehavior(bounced_behavior);
                

        
        obj[0].x = 0;  obj[0].y = 0;         
        obj[1].x = 0;  obj[1].y = 40;         
        //obj[2].x = 0;  obj[2].y = 80; 
        
    }

    public void Run()
    {
        Debug.Print("Engine.Run()\n");            

        while(!isExitRequested)
        {

            
            myPlatformGfx.OnGameLoopBegin();
                        
            if(!PlatformInput.HandleInput())
                isExitRequested = true;
            
            // move phase
            for(int i = 0; i < obj.Length; i++)
                if(obj[i] != null) {
                    obj[i].DoAllBehaviors();    // do all behaviors
                    obj[i].Move();
                }

            // draw phase
            for(int i = 0; i < obj.Length; i++)
                if(obj[i] != null)
                    obj[i].Draw();
                                        
            myPlatformGfx.OnGameLoopEnd();
            
            
            //native {   
            //    DEBUG_PRINT("obj x = %i, y = %i \n",  self->obj[0]->x, self->obj[0]->y);    
            //}
            //if(obj[0].x > 20) isExitRequested = true;
            
            
            
            // do only one pass of loop (for debug reason)
            //isExitRequested = true;
            
        }
    }
    

    


  
       
}


public class Startup
{
    Engine engine;
    
    Startup()
    {
        Debug.Print("Startup()\n");  
    }
    
    public void Run()
    {
        Debug.Print("Startup.Run()\n");    
    
        
        PlatformGfx.InitVideo(engine.screen_width, engine.screen_height);        
        engine = new Engine();
        
        engine.Run();
        PlatformGfx.CleanupVideo();

    }
    
}
