                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ANSI-C Compiler
                              3 ; Version 2.9.0 #5416 (Mar 22 2009) (MINGW32)
                              4 ; This file was generated Sun Jun 13 14:08:44 2010
                              5 ;--------------------------------------------------------
                              6 	.module tstgfx1
                              7 	.optsdcc -mz80
                              8 	
                              9 ;--------------------------------------------------------
                             10 ; Public variables in this module
                             11 ;--------------------------------------------------------
                             12 	.globl _main
                             13 	.globl _SetPalette
                             14 	.globl _FillVideoMem
                             15 	.globl _SetVideoMode
                             16 	.globl _myPalette
                             17 	.globl _own_sp
                             18 ;--------------------------------------------------------
                             19 ; special function registers
                             20 ;--------------------------------------------------------
                    0000     21 _io__sys_mem_select	=	0x0000
                    0002     22 _io__sys_keyboard_data	=	0x0002
                    0003     23 _io__sys_ps2_joy_control	=	0x0003
                    0005     24 _io__sys_joy_com_flags	=	0x0005
                    0001     25 _io__sys_irq_enable	=	0x0001
                    0002     26 _io__sys_clear_irq_flags	=	0x0002
                             27 ;--------------------------------------------------------
                             28 ;  ram data
                             29 ;--------------------------------------------------------
                             30 	.area _DATA
                    0200     31 _mm__vreg_xhws	=	0x0200
                    0201     32 _mm__vreg_vidctrl	=	0x0201
                    0202     33 _mm__vreg_window	=	0x0202
                    0203     34 _mm__vreg_yhws_bplcount	=	0x0203
                    0204     35 _mm__vreg_rasthi	=	0x0204
                    0206     36 _mm__vreg_vidpage	=	0x0206
                    0207     37 _mm__vreg_sprctrl	=	0x0207
                    0208     38 _mm__mult_write	=	0x0208
                    020A     39 _mm__mult_index	=	0x020a
                    020C     40 _mm__vreg_ext_vidctrl	=	0x020c
                    0700     41 _mm__vreg_read	=	0x0700
                    0704     42 _mm__mult_read	=	0x0704
                    0600     43 _mm__mult_table	=	0x0600
                    0240     44 _mm__bitplane0a_loc__byte0	=	0x0240
                    0241     45 _mm__bitplane0a_loc__byte1	=	0x0241
                    0242     46 _mm__bitplane0a_loc__byte2	=	0x0242
                    0243     47 _mm__bitplane0a_loc__byte3	=	0x0243
                             48 ;--------------------------------------------------------
                             49 ; overlayable items in  ram 
                             50 ;--------------------------------------------------------
                             51 	.area _OVERLAY
                             52 ;--------------------------------------------------------
                             53 ; external initialized ram data
                             54 ;--------------------------------------------------------
                             55 ;--------------------------------------------------------
                             56 ; global & static initialisations
                             57 ;--------------------------------------------------------
                             58 	.area _HOME
                             59 	.area _GSINIT
                             60 	.area _GSFINAL
                             61 	.area _GSINIT
                             62 ;--------------------------------------------------------
                             63 ; Home
                             64 ;--------------------------------------------------------
                             65 	.area _HOME
                             66 	.area _HOME
                             67 ;--------------------------------------------------------
                             68 ; code
                             69 ;--------------------------------------------------------
                             70 	.area _CODE
                             71 ;tstgfx1.c:27: void SetVideoMode(void)
                             72 ;	---------------------------------
                             73 ; Function SetVideoMode
                             74 ; ---------------------------------
   0000                      75 _SetVideoMode_start::
   0000                      76 _SetVideoMode:
                             77 ;tstgfx1.c:30: mm__vreg_vidctrl = BITMAP_MODE|CHUNKY_PIXEL_MODE;
   0000 21 01 02             78 	ld	hl,#_mm__vreg_vidctrl + 0
   0003 36 80                79 	ld	(hl), #0x80
                             80 ;tstgfx1.c:34: mm__vreg_rasthi = 0;
   0005 21 04 02             81 	ld	hl,#_mm__vreg_rasthi + 0
   0008 36 00                82 	ld	(hl), #0x00
                             83 ;tstgfx1.c:35: mm__vreg_window = (Y_WINDOW_START<<4)|Y_WINDOW_STOP;
   000A 21 02 02             84 	ld	hl,#_mm__vreg_window + 0
   000D 36 5A                85 	ld	(hl), #0x5A
                             86 ;tstgfx1.c:37: mm__vreg_rasthi = SWITCH_TO_X_WINDOW_REGISTER;
   000F 21 04 02             87 	ld	hl,#_mm__vreg_rasthi + 0
   0012 36 04                88 	ld	(hl), #0x04
                             89 ;tstgfx1.c:38: mm__vreg_window = (X_WINDOW_START<<4)|X_WINDOW_STOP;
   0014 21 02 02             90 	ld	hl,#_mm__vreg_window + 0
   0017 36 8C                91 	ld	(hl), #0x8C
                             92 ;tstgfx1.c:41: mm__bitplane0a_loc__byte0 = 0;      // [7:0] bits
   0019 21 40 02             93 	ld	hl,#_mm__bitplane0a_loc__byte0 + 0
   001C 36 00                94 	ld	(hl), #0x00
                             95 ;tstgfx1.c:42: mm__bitplane0a_loc__byte1 = 0;      // [15:8] 
   001E 21 41 02             96 	ld	hl,#_mm__bitplane0a_loc__byte1 + 0
   0021 36 00                97 	ld	(hl), #0x00
                             98 ;tstgfx1.c:43: mm__bitplane0a_loc__byte2 = 0;      // [18:16] 
   0023 21 42 02             99 	ld	hl,#_mm__bitplane0a_loc__byte2 + 0
   0026 36 00               100 	ld	(hl), #0x00
   0028 C9                  101 	ret
   0029                     102 _SetVideoMode_end::
   0029                     103 _own_sp:
   0029 FF FF               104 	.dw #0xFFFF
                            105 ;tstgfx1.c:47: void FillVideoMem(void)
                            106 ;	---------------------------------
                            107 ; Function FillVideoMem
                            108 ; ---------------------------------
   002B                     109 _FillVideoMem_start::
   002B                     110 _FillVideoMem:
                            111 ;tstgfx1.c:54: for(i=0; i<totalVideoPages; i++) {
   002B 01 00 00            112 	ld	bc,#0x0000
   002E                     113 00101$:
   002E 78                  114 	ld	a,b
   002F D6 08               115 	sub	a,#0x08
   0031 D0                  116 	ret	NC
                            117 ;tstgfx1.c:55: PAGE_IN_VIDEO_RAM();        
   0032 DB 00               118 	in	a,(_io__sys_mem_select)
   0034 F6 40               119 	or	a,#0x40
   0036 D3 00               120 	out	(_io__sys_mem_select),a
                            121 ;tstgfx1.c:56: SET_VIDEO_PAGE(i);
   0038 21 06 02            122 	ld	hl,#_mm__vreg_vidpage + 0
   003B 70                  123 	ld	(hl), b
                            124 ;tstgfx1.c:57: memset((byte*)(VIDEO_BASE), colorIndex, 0x2000);        // fill 8KB video page
   003C C5                  125 	push	bc
   003D 21 00 20            126 	ld	hl,#0x2000
   0040 E5                  127 	push	hl
   0041 79                  128 	ld	a,c
   0042 F5                  129 	push	af
   0043 33                  130 	inc	sp
   0044 2E 00               131 	ld	l, #0x00
   0046 E5                  132 	push	hl
   0047 CDr00s00            133 	call	_memset
   004A F1                  134 	pop	af
   004B F1                  135 	pop	af
   004C 33                  136 	inc	sp
   004D C1                  137 	pop	bc
                            138 ;tstgfx1.c:58: PAGE_OUT_VIDEO_RAM();
   004E DB 00               139 	in	a,(_io__sys_mem_select)
   0050 5F                  140 	ld	e,a
   0051 E6 BF               141 	and	a,#0xBF
   0053 D3 00               142 	out	(_io__sys_mem_select),a
                            143 ;tstgfx1.c:59: colorIndex += 1;
   0055 0C                  144 	inc	c
                            145 ;tstgfx1.c:54: for(i=0; i<totalVideoPages; i++) {
   0056 04                  146 	inc	b
   0057 18 D5               147 	jr	00101$
   0059                     148 _FillVideoMem_end::
                            149 ;tstgfx1.c:76: void SetPalette(void)
                            150 ;	---------------------------------
                            151 ; Function SetPalette
                            152 ; ---------------------------------
   0059                     153 _SetPalette_start::
   0059                     154 _SetPalette:
                            155 ;tstgfx1.c:79: memcpy((void*) PALETTE, myPalette, sizeof(myPalette));
   0059 11 00 00            156 	ld	de,#0x0000
   005C 21r65s00            157 	ld	hl,#_myPalette
   005F 01 10 00            158 	ld	bc,#0x0010
   0062 ED B0               159 	ldir
   0064 C9                  160 	ret
   0065                     161 _SetPalette_end::
   0065                     162 _myPalette:
   0065 00 00               163 	.dw #0x0000
   0067 FF 0F               164 	.dw #0x0FFF
   0069 00 0F               165 	.dw #0x0F00
   006B F0 00               166 	.dw #0x00F0
   006D 0F 00               167 	.dw #0x000F
   006F F0 0F               168 	.dw #0x0FF0
   0071 FF 00               169 	.dw #0x00FF
   0073 0F 0F               170 	.dw #0x0F0F
                            171 ;tstgfx1.c:82: int main(void)
                            172 ;	---------------------------------
                            173 ; Function main
                            174 ; ---------------------------------
   0075                     175 _main_start::
   0075                     176 _main:
   0075 DD E5               177 	push	ix
   0077 DD 21 00 00         178 	ld	ix,#0
   007B DD 39               179 	add	ix,sp
   007D F5                  180 	push	af
                            181 ;tstgfx1.c:87: SetVideoMode();
   007E CDr00s00            182 	call	_SetVideoMode
                            183 ;tstgfx1.c:88: SetPalette();
   0081 CDr59s00            184 	call	_SetPalette
                            185 ;tstgfx1.c:89: FillVideoMem();
   0084 CDr2Bs00            186 	call	_FillVideoMem
                            187 ;tstgfx1.c:91: FLOS_WaitKeyPress(&asciicode, &scancode);
   0087 21 00 00            188 	ld	hl,#0x0000
   008A 39                  189 	add	hl,sp
   008B 4D                  190 	ld	c,l
   008C 44                  191 	ld	b,h
   008D 21 01 00            192 	ld	hl,#0x0001
   0090 39                  193 	add	hl,sp
   0091 C5                  194 	push	bc
   0092 E5                  195 	push	hl
   0093 CDr00s00            196 	call	_FLOS_WaitKeyPress
   0096 F1                  197 	pop	af
   0097 F1                  198 	pop	af
                            199 ;tstgfx1.c:92: FLOS_FlosDisplay();
   0098 CDr00s00            200 	call	_FLOS_FlosDisplay
                            201 ;tstgfx1.c:94: return NO_REBOOT;
   009B 21 00 00            202 	ld	hl,#0x0000
   009E DD F9               203 	ld	sp,ix
   00A0 DD E1               204 	pop	ix
   00A2 C9                  205 	ret
   00A3                     206 _main_end::
                            207 	.area _CODE
                            208 	.area _CABS
