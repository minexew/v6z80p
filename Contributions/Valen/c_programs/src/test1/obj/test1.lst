                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ANSI-C Compiler
                              3 ; Version 2.9.0 #5416 (Mar 22 2009) (MINGW32)
                              4 ; This file was generated Tue Jun 08 18:21:49 2010
                              5 ;--------------------------------------------------------
                              6 	.module test1
                              7 	.optsdcc -mz80
                              8 	
                              9 ;--------------------------------------------------------
                             10 ; Public variables in this module
                             11 ;--------------------------------------------------------
                             12 	.globl _main
                             13 	.globl _buf
                             14 	.globl _buffer
                             15 	.globl _myFile
                             16 	.globl _pFilename
                             17 	.globl _own_sp
                             18 	.globl _proccess_cmd_line
                             19 	.globl _TestVersion
                             20 	.globl _test1
                             21 	.globl _test2
                             22 	.globl _test3
                             23 	.globl _test4
                             24 	.globl _PrintCurDirName
                             25 	.globl _test5
                             26 	.globl _test6
                             27 	.globl _DiagMessage
                             28 	.globl _PrintNum
                             29 	.globl _WaitKeyPress
                             30 	.globl _GetSP
                             31 ;--------------------------------------------------------
                             32 ; special function registers
                             33 ;--------------------------------------------------------
                             34 ;--------------------------------------------------------
                             35 ;  ram data
                             36 ;--------------------------------------------------------
                             37 	.area _DATA
   0000                      38 _pFilename::
   0000                      39 	.ds 2
   0002                      40 _myFile::
   0002                      41 	.ds 7
   0009                      42 _buffer::
   0009                      43 	.ds 33
   002A                      44 _buf::
   002A                      45 	.ds 8
                             46 ;--------------------------------------------------------
                             47 ; overlayable items in  ram 
                             48 ;--------------------------------------------------------
                             49 	.area _OVERLAY
                             50 ;--------------------------------------------------------
                             51 ; external initialized ram data
                             52 ;--------------------------------------------------------
                             53 ;--------------------------------------------------------
                             54 ; global & static initialisations
                             55 ;--------------------------------------------------------
                             56 	.area _HOME
                             57 	.area _GSINIT
                             58 	.area _GSFINAL
                             59 	.area _GSINIT
                             60 ;--------------------------------------------------------
                             61 ; Home
                             62 ;--------------------------------------------------------
                             63 	.area _HOME
                             64 	.area _HOME
                             65 ;--------------------------------------------------------
                             66 ; code
                             67 ;--------------------------------------------------------
                             68 	.area _CODE
                             69 ;test1.c:47: int main (void)
                             70 ;	---------------------------------
                             71 ; Function main
                             72 ; ---------------------------------
   0000                      73 _main_start::
   0000                      74 _main:
                             75 ;test1.c:50: MarkFrameTime(0x00f);
   0000 21 0F 00             76 	ld	hl,#0x000F
   0003 E5                   77 	push	hl
   0004 CDr00s00             78 	call	_MarkFrameTime
   0007 F1                   79 	pop	af
                             80 ;test1.c:51: FLOS_ClearScreen();
   0008 CDr00s00             81 	call	_FLOS_ClearScreen
                             82 ;test1.c:53: proccess_cmd_line();
   000B CDrEDs00             83 	call	_proccess_cmd_line
                             84 ;test1.c:55: if(!TestVersion()) {
   000E CDr0Es01             85 	call	_TestVersion
   0011 AF                   86 	xor	a,a
   0012 B5                   87 	or	a,l
   0013 20 2E                88 	jr	NZ,00102$
                             89 ;test1.c:56: FLOS_PrintString("FLOS v");
   0015 21rC3s00             90 	ld	hl,#__str_0
   0018 E5                   91 	push	hl
   0019 CDr00s00             92 	call	_FLOS_PrintString
   001C F1                   93 	pop	af
                             94 ;test1.c:57: _uitoa(OS_VERSION_REQ, buffer, 16);
   001D 3E 10                95 	ld	a,#0x10
   001F F5                   96 	push	af
   0020 33                   97 	inc	sp
   0021 21r09s00             98 	ld	hl,#_buffer
   0024 E5                   99 	push	hl
   0025 21 55 05            100 	ld	hl,#0x0555
   0028 E5                  101 	push	hl
   0029 CDr00s00            102 	call	__uitoa
   002C F1                  103 	pop	af
   002D F1                  104 	pop	af
   002E 33                  105 	inc	sp
                            106 ;test1.c:58: FLOS_PrintString(buffer);
   002F 21r09s00            107 	ld	hl,#_buffer
   0032 E5                  108 	push	hl
   0033 CDr00s00            109 	call	_FLOS_PrintString
   0036 F1                  110 	pop	af
                            111 ;test1.c:59: FLOS_PrintStringLFCR("+ req. to run this program");
   0037 21rCAs00            112 	ld	hl,#__str_1
   003A E5                  113 	push	hl
   003B CDr00s00            114 	call	_FLOS_PrintStringLFCR
   003E F1                  115 	pop	af
                            116 ;test1.c:60: return NO_REBOOT;
   003F 21 00 00            117 	ld	hl,#0x0000
   0042 C9                  118 	ret
   0043                     119 00102$:
                            120 ;test1.c:64: CALL_TEST(1);
   0043 CDr86s01            121 	call	_test1
   0046 AF                  122 	xor	a,a
   0047 B5                  123 	or	a,l
   0048 20 0C               124 	jr	NZ,00104$
   004A 21 00 0F            125 	ld	hl,#0x0F00
   004D E5                  126 	push	hl
   004E CDr00s00            127 	call	_MarkFrameTime
   0051 F1                  128 	pop	af
   0052 21 00 00            129 	ld	hl,#0x0000
   0055 C9                  130 	ret
   0056                     131 00104$:
                            132 ;test1.c:65: CALL_TEST(2);
   0056 CDrB8s02            133 	call	_test2
   0059 AF                  134 	xor	a,a
   005A B5                  135 	or	a,l
   005B 20 0C               136 	jr	NZ,00106$
   005D 21 00 0F            137 	ld	hl,#0x0F00
   0060 E5                  138 	push	hl
   0061 CDr00s00            139 	call	_MarkFrameTime
   0064 F1                  140 	pop	af
   0065 21 00 00            141 	ld	hl,#0x0000
   0068 C9                  142 	ret
   0069                     143 00106$:
                            144 ;test1.c:66: CALL_TEST(3);
   0069 CDr08s04            145 	call	_test3
   006C AF                  146 	xor	a,a
   006D B5                  147 	or	a,l
   006E 20 0C               148 	jr	NZ,00108$
   0070 21 00 0F            149 	ld	hl,#0x0F00
   0073 E5                  150 	push	hl
   0074 CDr00s00            151 	call	_MarkFrameTime
   0077 F1                  152 	pop	af
   0078 21 00 00            153 	ld	hl,#0x0000
   007B C9                  154 	ret
   007C                     155 00108$:
                            156 ;test1.c:67: CALL_TEST(4);
   007C CDr64s05            157 	call	_test4
   007F AF                  158 	xor	a,a
   0080 B5                  159 	or	a,l
   0081 20 0C               160 	jr	NZ,00110$
   0083 21 00 0F            161 	ld	hl,#0x0F00
   0086 E5                  162 	push	hl
   0087 CDr00s00            163 	call	_MarkFrameTime
   008A F1                  164 	pop	af
   008B 21 00 00            165 	ld	hl,#0x0000
   008E C9                  166 	ret
   008F                     167 00110$:
                            168 ;test1.c:68: CALL_TEST(5);
   008F CDr01s07            169 	call	_test5
   0092 AF                  170 	xor	a,a
   0093 B5                  171 	or	a,l
   0094 20 0C               172 	jr	NZ,00112$
   0096 21 00 0F            173 	ld	hl,#0x0F00
   0099 E5                  174 	push	hl
   009A CDr00s00            175 	call	_MarkFrameTime
   009D F1                  176 	pop	af
   009E 21 00 00            177 	ld	hl,#0x0000
   00A1 C9                  178 	ret
   00A2                     179 00112$:
                            180 ;test1.c:69: CALL_TEST(6);
   00A2 CDrDDs07            181 	call	_test6
   00A5 AF                  182 	xor	a,a
   00A6 B5                  183 	or	a,l
   00A7 20 0C               184 	jr	NZ,00114$
   00A9 21 00 0F            185 	ld	hl,#0x0F00
   00AC E5                  186 	push	hl
   00AD CDr00s00            187 	call	_MarkFrameTime
   00B0 F1                  188 	pop	af
   00B1 21 00 00            189 	ld	hl,#0x0000
   00B4 C9                  190 	ret
   00B5                     191 00114$:
                            192 ;test1.c:72: FLOS_PrintStringLFCR("TEST OK");
   00B5 21rE5s00            193 	ld	hl,#__str_2
   00B8 E5                  194 	push	hl
   00B9 CDr00s00            195 	call	_FLOS_PrintStringLFCR
   00BC F1                  196 	pop	af
                            197 ;test1.c:78: return NO_REBOOT;
   00BD 21 00 00            198 	ld	hl,#0x0000
   00C0 C9                  199 	ret
   00C1                     200 _main_end::
   00C1                     201 _own_sp:
   00C1 00 80               202 	.dw #0x8000
   00C3                     203 __str_0:
   00C3 46 4C 4F 53 20 76   204 	.ascii "FLOS v"
   00C9 00                  205 	.db 0x00
   00CA                     206 __str_1:
   00CA 2B 20 72 65 71 2E   207 	.ascii "+ req. to run this program"
        20 74 6F 20 72 75
        6E 20 74 68 69 73
        20 70 72 6F 67 72
        61 6D
   00E4 00                  208 	.db 0x00
   00E5                     209 __str_2:
   00E5 54 45 53 54 20 4F   210 	.ascii "TEST OK"
        4B
   00EC 00                  211 	.db 0x00
                            212 ;test1.c:82: void proccess_cmd_line(void)
                            213 ;	---------------------------------
                            214 ; Function proccess_cmd_line
                            215 ; ---------------------------------
   00ED                     216 _proccess_cmd_line_start::
   00ED                     217 _proccess_cmd_line:
                            218 ;test1.c:86: cmdline = FLOS_GetCmdLine();
   00ED CDr00s00            219 	call	_FLOS_GetCmdLine
   00F0 44                  220 	ld	b,h
   00F1 4D                  221 	ld	c,l
                            222 ;test1.c:88: pFilename =  (cmdline == NULL) ? "NOFILE" : cmdline;
   00F2 79                  223 	ld	a,c
   00F3 B0                  224 	or	a,b
   00F4 20 06               225 	jr	NZ,00103$
   00F6 21r07s01            226 	ld	hl,#__str_3
   00F9 EB                  227 	ex	de,hl
   00FA 18 02               228 	jr	00104$
   00FC                     229 00103$:
   00FC 59                  230 	ld	e,c
   00FD 50                  231 	ld	d,b
   00FE                     232 00104$:
   00FE 21r00s00            233 	ld	hl,#_pFilename + 0
   0101 73                  234 	ld	(hl), e
   0102 21r01s00            235 	ld	hl,#_pFilename + 1
   0105 72                  236 	ld	(hl), d
   0106 C9                  237 	ret
   0107                     238 _proccess_cmd_line_end::
   0107                     239 __str_3:
   0107 4E 4F 46 49 4C 45   240 	.ascii "NOFILE"
   010D 00                  241 	.db 0x00
                            242 ;test1.c:101: BOOL TestVersion(void)
                            243 ;	---------------------------------
                            244 ; Function TestVersion
                            245 ; ---------------------------------
   010E                     246 _TestVersion_start::
   010E                     247 _TestVersion:
   010E DD E5               248 	push	ix
   0110 DD 21 00 00         249 	ld	ix,#0
   0114 DD 39               250 	add	ix,sp
   0116 F5                  251 	push	af
   0117 F5                  252 	push	af
                            253 ;test1.c:106: FLOS_GetVersion(&os_version_word, &hw_version_word);
   0118 21 00 00            254 	ld	hl,#0x0000
   011B 39                  255 	add	hl,sp
   011C 4D                  256 	ld	c,l
   011D 44                  257 	ld	b,h
   011E 21 02 00            258 	ld	hl,#0x0002
   0121 39                  259 	add	hl,sp
   0122 C5                  260 	push	bc
   0123 E5                  261 	push	hl
   0124 CDr00s00            262 	call	_FLOS_GetVersion
   0127 F1                  263 	pop	af
   0128 F1                  264 	pop	af
                            265 ;test1.c:107: FLOS_PrintString("OS: ");
   0129 21r78s01            266 	ld	hl,#__str_4
   012C E5                  267 	push	hl
   012D CDr00s00            268 	call	_FLOS_PrintString
   0130 F1                  269 	pop	af
                            270 ;test1.c:108: PrintNum(os_version_word);
   0131 DD 4E FE            271 	ld	c,-2 (ix)
   0134 DD 46 FF            272 	ld	b,-1 (ix)
   0137 21 00 00            273 	ld	hl,#0x0000
   013A E5                  274 	push	hl
   013B C5                  275 	push	bc
   013C CDr23s09            276 	call	_PrintNum
   013F F1                  277 	pop	af
   0140 F1                  278 	pop	af
                            279 ;test1.c:109: FLOS_PrintString("   HW: ");
   0141 21r7Ds01            280 	ld	hl,#__str_5
   0144 E5                  281 	push	hl
   0145 CDr00s00            282 	call	_FLOS_PrintString
   0148 F1                  283 	pop	af
                            284 ;test1.c:110: PrintNum(hw_version_word);
   0149 DD 4E FC            285 	ld	c,-4 (ix)
   014C DD 46 FD            286 	ld	b,-3 (ix)
   014F 21 00 00            287 	ld	hl,#0x0000
   0152 E5                  288 	push	hl
   0153 C5                  289 	push	bc
   0154 CDr23s09            290 	call	_PrintNum
   0157 F1                  291 	pop	af
   0158 F1                  292 	pop	af
                            293 ;test1.c:111: FLOS_PrintStringLFCR("");
   0159 21r85s01            294 	ld	hl,#__str_6
   015C E5                  295 	push	hl
   015D CDr00s00            296 	call	_FLOS_PrintStringLFCR
   0160 F1                  297 	pop	af
                            298 ;test1.c:113: if(os_version_word < OS_VERSION_REQ)
   0161 DD 7E FE            299 	ld	a,-2 (ix)
   0164 D6 55               300 	sub	a,#0x55
   0166 DD 7E FF            301 	ld	a,-1 (ix)
   0169 DE 05               302 	sbc	a,#0x05
   016B 30 04               303 	jr	NC,00102$
                            304 ;test1.c:114: return FALSE;
   016D 2E 00               305 	ld	l,#0x00
   016F 18 02               306 	jr	00103$
   0171                     307 00102$:
                            308 ;test1.c:117: return TRUE;
   0171 2E 01               309 	ld	l,#0x01
   0173                     310 00103$:
   0173 DD F9               311 	ld	sp,ix
   0175 DD E1               312 	pop	ix
   0177 C9                  313 	ret
   0178                     314 _TestVersion_end::
   0178                     315 __str_4:
   0178 4F 53 3A 20         316 	.ascii "OS: "
   017C 00                  317 	.db 0x00
   017D                     318 __str_5:
   017D 20 20 20 48 57 3A   319 	.ascii "   HW: "
        20
   0184 00                  320 	.db 0x00
   0185                     321 __str_6:
   0185 00                  322 	.db 0x00
                            323 ;test1.c:123: BOOL test1(void)
                            324 ;	---------------------------------
                            325 ; Function test1
                            326 ; ---------------------------------
   0186                     327 _test1_start::
   0186                     328 _test1:
                            329 ;test1.c:127: r = FLOS_CheckDiskAvailable();
   0186 CDr00s00            330 	call	_FLOS_CheckDiskAvailable
                            331 ;test1.c:128: if(!r) {
   0189 AF                  332 	xor	a,a
   018A B5                  333 	or	a,l
   018B 20 10               334 	jr	NZ,00102$
                            335 ;test1.c:129: DiagMessage("CheckDiskAvailable failed: ", "");
   018D 21r7Es02            336 	ld	hl,#__str_8
   0190 E5                  337 	push	hl
   0191 21r62s02            338 	ld	hl,#__str_7
   0194 E5                  339 	push	hl
   0195 CDrC2s08            340 	call	_DiagMessage
   0198 F1                  341 	pop	af
   0199 F1                  342 	pop	af
                            343 ;test1.c:130: return FALSE;
   019A 2E 00               344 	ld	l,#0x00
   019C C9                  345 	ret
   019D                     346 00102$:
                            347 ;test1.c:136: r = FLOS_FindFile(&myFile, pFilename);
   019D 2Ar00s00            348 	ld	hl,(_pFilename)
   01A0 E5                  349 	push	hl
   01A1 21r02s00            350 	ld	hl,#_myFile
   01A4 E5                  351 	push	hl
   01A5 CDr00s00            352 	call	_FLOS_FindFile
   01A8 F1                  353 	pop	af
   01A9 F1                  354 	pop	af
   01AA 45                  355 	ld	b,l
   01AB 48                  356 	ld	c,b
                            357 ;test1.c:137: if(!r) {
   01AC AF                  358 	xor	a,a
   01AD B1                  359 	or	a,c
   01AE 20 10               360 	jr	NZ,00104$
                            361 ;test1.c:138: DiagMessage("FindFile failed: ", pFilename);
   01B0 2Ar00s00            362 	ld	hl,(_pFilename)
   01B3 E5                  363 	push	hl
   01B4 21r7Fs02            364 	ld	hl,#__str_9
   01B7 E5                  365 	push	hl
   01B8 CDrC2s08            366 	call	_DiagMessage
   01BB F1                  367 	pop	af
   01BC F1                  368 	pop	af
                            369 ;test1.c:139: return FALSE;
   01BD 2E 00               370 	ld	l,#0x00
   01BF C9                  371 	ret
   01C0                     372 00104$:
                            373 ;test1.c:143: FLOS_PrintString("FindFile: ");
   01C0 21r91s02            374 	ld	hl,#__str_10
   01C3 E5                  375 	push	hl
   01C4 CDr00s00            376 	call	_FLOS_PrintString
   01C7 F1                  377 	pop	af
                            378 ;test1.c:144: FLOS_PrintString(pFilename);
   01C8 2Ar00s00            379 	ld	hl,(_pFilename)
   01CB E5                  380 	push	hl
   01CC CDr00s00            381 	call	_FLOS_PrintString
   01CF F1                  382 	pop	af
                            383 ;test1.c:145: FLOS_PrintString(PS_LFCR);
   01D0 21r9Cs02            384 	ld	hl,#__str_11
   01D3 E5                  385 	push	hl
   01D4 CDr00s00            386 	call	_FLOS_PrintString
   01D7 F1                  387 	pop	af
                            388 ;test1.c:147: _ultoa(myFile.size, buffer, 16);
   01D8 21r05s00            389 	ld	hl, #_myFile + 3
   01DB 4E                  390 	ld	c,(hl)
   01DC 23                  391 	inc	hl
   01DD 46                  392 	ld	b,(hl)
   01DE 23                  393 	inc	hl
   01DF 5E                  394 	ld	e,(hl)
   01E0 23                  395 	inc	hl
   01E1 56                  396 	ld	d,(hl)
   01E2 3E 10               397 	ld	a,#0x10
   01E4 F5                  398 	push	af
   01E5 33                  399 	inc	sp
   01E6 21r09s00            400 	ld	hl,#_buffer
   01E9 E5                  401 	push	hl
   01EA D5                  402 	push	de
   01EB C5                  403 	push	bc
   01EC CDr00s00            404 	call	__ultoa
   01EF F1                  405 	pop	af
   01F0 F1                  406 	pop	af
   01F1 F1                  407 	pop	af
   01F2 33                  408 	inc	sp
                            409 ;test1.c:148: FLOS_PrintString("Size: $");
   01F3 21r9Es02            410 	ld	hl,#__str_12
   01F6 E5                  411 	push	hl
   01F7 CDr00s00            412 	call	_FLOS_PrintString
   01FA F1                  413 	pop	af
                            414 ;test1.c:149: FLOS_PrintString(buffer);
   01FB 21r09s00            415 	ld	hl,#_buffer
   01FE E5                  416 	push	hl
   01FF CDr00s00            417 	call	_FLOS_PrintString
   0202 F1                  418 	pop	af
                            419 ;test1.c:151: _ultoa(myFile.z80_address, buffer, 16);
   0203 21r02s00            420 	ld	hl,#_myFile
   0206 4E                  421 	ld	c,(hl)
   0207 23                  422 	inc	hl
   0208 46                  423 	ld	b,(hl)
   0209 11 00 00            424 	ld	de,#0x0000
   020C 3E 10               425 	ld	a,#0x10
   020E F5                  426 	push	af
   020F 33                  427 	inc	sp
   0210 21r09s00            428 	ld	hl,#_buffer
   0213 E5                  429 	push	hl
   0214 D5                  430 	push	de
   0215 C5                  431 	push	bc
   0216 CDr00s00            432 	call	__ultoa
   0219 F1                  433 	pop	af
   021A F1                  434 	pop	af
   021B F1                  435 	pop	af
   021C 33                  436 	inc	sp
                            437 ;test1.c:152: FLOS_PrintString(" Addr: $");
   021D 21rA6s02            438 	ld	hl,#__str_13
   0220 E5                  439 	push	hl
   0221 CDr00s00            440 	call	_FLOS_PrintString
   0224 F1                  441 	pop	af
                            442 ;test1.c:153: FLOS_PrintString(buffer);
   0225 21r09s00            443 	ld	hl,#_buffer
   0228 E5                  444 	push	hl
   0229 CDr00s00            445 	call	_FLOS_PrintString
   022C F1                  446 	pop	af
                            447 ;test1.c:155: _ultoa(myFile.z80_bank, buffer, 16);
   022D 21r04s00            448 	ld	hl,#_myFile + 2
   0230 4E                  449 	ld	c,(hl)
   0231 06 00               450 	ld	b,#0x00
   0233 11 00 00            451 	ld	de,#0x0000
   0236 3E 10               452 	ld	a,#0x10
   0238 F5                  453 	push	af
   0239 33                  454 	inc	sp
   023A 21r09s00            455 	ld	hl,#_buffer
   023D E5                  456 	push	hl
   023E D5                  457 	push	de
   023F C5                  458 	push	bc
   0240 CDr00s00            459 	call	__ultoa
   0243 F1                  460 	pop	af
   0244 F1                  461 	pop	af
   0245 F1                  462 	pop	af
   0246 33                  463 	inc	sp
                            464 ;test1.c:156: FLOS_PrintString(" Bank: $");
   0247 21rAFs02            465 	ld	hl,#__str_14
   024A E5                  466 	push	hl
   024B CDr00s00            467 	call	_FLOS_PrintString
   024E F1                  468 	pop	af
                            469 ;test1.c:157: FLOS_PrintString(buffer);
   024F 21r09s00            470 	ld	hl,#_buffer
   0252 E5                  471 	push	hl
   0253 CDr00s00            472 	call	_FLOS_PrintString
   0256 F1                  473 	pop	af
                            474 ;test1.c:158: FLOS_PrintString(PS_LFCR);
   0257 21r9Cs02            475 	ld	hl,#__str_11
   025A E5                  476 	push	hl
   025B CDr00s00            477 	call	_FLOS_PrintString
   025E F1                  478 	pop	af
                            479 ;test1.c:160: return TRUE;
   025F 2E 01               480 	ld	l,#0x01
   0261 C9                  481 	ret
   0262                     482 _test1_end::
   0262                     483 __str_7:
   0262 43 68 65 63 6B 44   484 	.ascii "CheckDiskAvailable failed: "
        69 73 6B 41 76 61
        69 6C 61 62 6C 65
        20 66 61 69 6C 65
        64 3A 20
   027D 00                  485 	.db 0x00
   027E                     486 __str_8:
   027E 00                  487 	.db 0x00
   027F                     488 __str_9:
   027F 46 69 6E 64 46 69   489 	.ascii "FindFile failed: "
        6C 65 20 66 61 69
        6C 65 64 3A 20
   0290 00                  490 	.db 0x00
   0291                     491 __str_10:
   0291 46 69 6E 64 46 69   492 	.ascii "FindFile: "
        6C 65 3A 20
   029B 00                  493 	.db 0x00
   029C                     494 __str_11:
   029C 0B                  495 	.db 0x0B
   029D 00                  496 	.db 0x00
   029E                     497 __str_12:
   029E 53 69 7A 65 3A 20   498 	.ascii "Size: $"
        24
   02A5 00                  499 	.db 0x00
   02A6                     500 __str_13:
   02A6 20 41 64 64 72 3A   501 	.ascii " Addr: $"
        20 24
   02AE 00                  502 	.db 0x00
   02AF                     503 __str_14:
   02AF 20 42 61 6E 6B 3A   504 	.ascii " Bank: $"
        20 24
   02B7 00                  505 	.db 0x00
                            506 ;test1.c:166: BOOL test2(void)
                            507 ;	---------------------------------
                            508 ; Function test2
                            509 ; ---------------------------------
   02B8                     510 _test2_start::
   02B8                     511 _test2:
                            512 ;test1.c:173: FLOS_SetLoadLength(8);
   02B8 21 00 00            513 	ld	hl,#0x0000
   02BB E5                  514 	push	hl
   02BC 21 08 00            515 	ld	hl,#0x0008
   02BF E5                  516 	push	hl
   02C0 CDr00s00            517 	call	_FLOS_SetLoadLength
   02C3 F1                  518 	pop	af
   02C4 F1                  519 	pop	af
                            520 ;test1.c:175: r = FLOS_ForceLoad( buf, 0 );
   02C5 3E 00               521 	ld	a,#0x00
   02C7 F5                  522 	push	af
   02C8 33                  523 	inc	sp
   02C9 21r2As00            524 	ld	hl,#_buf
   02CC E5                  525 	push	hl
   02CD CDr00s00            526 	call	_FLOS_ForceLoad
   02D0 F1                  527 	pop	af
   02D1 33                  528 	inc	sp
                            529 ;test1.c:176: if(!r) {
   02D2 AF                  530 	xor	a,a
   02D3 B5                  531 	or	a,l
   02D4 20 10               532 	jr	NZ,00102$
                            533 ;test1.c:177: DiagMessage("ForceLoad failed: ", pFilename);
   02D6 2Ar00s00            534 	ld	hl,(_pFilename)
   02D9 E5                  535 	push	hl
   02DA 21rD0s03            536 	ld	hl,#__str_15
   02DD E5                  537 	push	hl
   02DE CDrC2s08            538 	call	_DiagMessage
   02E1 F1                  539 	pop	af
   02E2 F1                  540 	pop	af
                            541 ;test1.c:178: return FALSE;
   02E3 2E 00               542 	ld	l,#0x00
   02E5 C9                  543 	ret
   02E6                     544 00102$:
                            545 ;test1.c:181: FLOS_PrintString("Data at $0000: ");
   02E6 21rE3s03            546 	ld	hl,#__str_16
   02E9 E5                  547 	push	hl
   02EA CDr00s00            548 	call	_FLOS_PrintString
   02ED F1                  549 	pop	af
                            550 ;test1.c:182: FLOS_PrintString(PS_LFCR);
   02EE 21rF3s03            551 	ld	hl,#__str_17
   02F1 E5                  552 	push	hl
   02F2 CDr00s00            553 	call	_FLOS_PrintString
   02F5 F1                  554 	pop	af
                            555 ;test1.c:184: for(i=0; i<8; i++) {
   02F6 06 00               556 	ld	b,#0x00
   02F8                     557 00105$:
   02F8 78                  558 	ld	a,b
   02F9 D6 08               559 	sub	a,#0x08
   02FB 30 35               560 	jr	NC,00108$
                            561 ;test1.c:185: _itoa(buf[i], buffer, 16);
   02FD 3Er2A               562 	ld	a,#<_buf
   02FF 80                  563 	add	a,b
   0300 5F                  564 	ld	e,a
   0301 3Es00               565 	ld	a,#>_buf
   0303 CE 00               566 	adc	a,#0x00
   0305 57                  567 	ld	d,a
   0306 1A                  568 	ld	a,(de)
   0307 5F                  569 	ld	e,a
   0308 16 00               570 	ld	d,#0x00
   030A C5                  571 	push	bc
   030B 3E 10               572 	ld	a,#0x10
   030D F5                  573 	push	af
   030E 33                  574 	inc	sp
   030F 21r09s00            575 	ld	hl,#_buffer
   0312 E5                  576 	push	hl
   0313 D5                  577 	push	de
   0314 CDr00s00            578 	call	__itoa
   0317 F1                  579 	pop	af
   0318 F1                  580 	pop	af
   0319 33                  581 	inc	sp
   031A C1                  582 	pop	bc
                            583 ;test1.c:186: FLOS_PrintString("  ");
   031B C5                  584 	push	bc
   031C 21rF5s03            585 	ld	hl,#__str_18
   031F E5                  586 	push	hl
   0320 CDr00s00            587 	call	_FLOS_PrintString
   0323 F1                  588 	pop	af
   0324 C1                  589 	pop	bc
                            590 ;test1.c:187: FLOS_PrintString(buffer);
   0325 C5                  591 	push	bc
   0326 21r09s00            592 	ld	hl,#_buffer
   0329 E5                  593 	push	hl
   032A CDr00s00            594 	call	_FLOS_PrintString
   032D F1                  595 	pop	af
   032E C1                  596 	pop	bc
                            597 ;test1.c:184: for(i=0; i<8; i++) {
   032F 04                  598 	inc	b
   0330 18 C6               599 	jr	00105$
   0332                     600 00108$:
                            601 ;test1.c:190: FLOS_PrintString(PS_LFCR);
   0332 21rF3s03            602 	ld	hl,#__str_17
   0335 E5                  603 	push	hl
   0336 CDr00s00            604 	call	_FLOS_PrintString
   0339 F1                  605 	pop	af
                            606 ;test1.c:193: FLOS_SetFilePointer(0x10);
   033A 21 00 00            607 	ld	hl,#0x0000
   033D E5                  608 	push	hl
   033E 21 10 00            609 	ld	hl,#0x0010
   0341 E5                  610 	push	hl
   0342 CDr00s00            611 	call	_FLOS_SetFilePointer
   0345 F1                  612 	pop	af
   0346 F1                  613 	pop	af
                            614 ;test1.c:194: FLOS_SetLoadLength(8);
   0347 21 00 00            615 	ld	hl,#0x0000
   034A E5                  616 	push	hl
   034B 21 08 00            617 	ld	hl,#0x0008
   034E E5                  618 	push	hl
   034F CDr00s00            619 	call	_FLOS_SetLoadLength
   0352 F1                  620 	pop	af
   0353 F1                  621 	pop	af
                            622 ;test1.c:195: r = FLOS_ForceLoad( buf, 0 );
   0354 3E 00               623 	ld	a,#0x00
   0356 F5                  624 	push	af
   0357 33                  625 	inc	sp
   0358 21r2As00            626 	ld	hl,#_buf
   035B E5                  627 	push	hl
   035C CDr00s00            628 	call	_FLOS_ForceLoad
   035F F1                  629 	pop	af
   0360 33                  630 	inc	sp
   0361 45                  631 	ld	b,l
   0362 48                  632 	ld	c,b
                            633 ;test1.c:196: if(!r) {
   0363 AF                  634 	xor	a,a
   0364 B1                  635 	or	a,c
   0365 20 10               636 	jr	NZ,00104$
                            637 ;test1.c:197: DiagMessage("ForceLoad failed: ", pFilename);
   0367 2Ar00s00            638 	ld	hl,(_pFilename)
   036A E5                  639 	push	hl
   036B 21rD0s03            640 	ld	hl,#__str_15
   036E E5                  641 	push	hl
   036F CDrC2s08            642 	call	_DiagMessage
   0372 F1                  643 	pop	af
   0373 F1                  644 	pop	af
                            645 ;test1.c:198: return FALSE;
   0374 2E 00               646 	ld	l,#0x00
   0376 C9                  647 	ret
   0377                     648 00104$:
                            649 ;test1.c:200: FLOS_PrintString("Data at $0010: ");
   0377 21rF8s03            650 	ld	hl,#__str_19
   037A E5                  651 	push	hl
   037B CDr00s00            652 	call	_FLOS_PrintString
   037E F1                  653 	pop	af
                            654 ;test1.c:201: FLOS_PrintString(PS_LFCR);
   037F 21rF3s03            655 	ld	hl,#__str_17
   0382 E5                  656 	push	hl
   0383 CDr00s00            657 	call	_FLOS_PrintString
   0386 F1                  658 	pop	af
                            659 ;test1.c:203: for(i=0; i<8; i++) {
   0387 0E 00               660 	ld	c,#0x00
   0389                     661 00109$:
   0389 79                  662 	ld	a,c
   038A D6 08               663 	sub	a,#0x08
   038C 30 37               664 	jr	NC,00112$
                            665 ;test1.c:204: _itoa(buf[i], buffer, 16);
   038E 3Er2A               666 	ld	a,#<_buf
   0390 81                  667 	add	a,c
   0391 5F                  668 	ld	e,a
   0392 3Es00               669 	ld	a,#>_buf
   0394 CE 00               670 	adc	a,#0x00
   0396 57                  671 	ld	d,a
   0397 1A                  672 	ld	a,(de)
   0398 47                  673 	ld	b,a
   0399 1E 00               674 	ld	e,#0x00
   039B C5                  675 	push	bc
   039C 3E 10               676 	ld	a,#0x10
   039E F5                  677 	push	af
   039F 33                  678 	inc	sp
   03A0 21r09s00            679 	ld	hl,#_buffer
   03A3 E5                  680 	push	hl
   03A4 68                  681 	ld	l,b
   03A5 63                  682 	ld	h,e
   03A6 E5                  683 	push	hl
   03A7 CDr00s00            684 	call	__itoa
   03AA F1                  685 	pop	af
   03AB F1                  686 	pop	af
   03AC 33                  687 	inc	sp
   03AD C1                  688 	pop	bc
                            689 ;test1.c:205: FLOS_PrintString("  ");
   03AE C5                  690 	push	bc
   03AF 21rF5s03            691 	ld	hl,#__str_18
   03B2 E5                  692 	push	hl
   03B3 CDr00s00            693 	call	_FLOS_PrintString
   03B6 F1                  694 	pop	af
   03B7 C1                  695 	pop	bc
                            696 ;test1.c:206: FLOS_PrintString(buffer);
   03B8 C5                  697 	push	bc
   03B9 21r09s00            698 	ld	hl,#_buffer
   03BC E5                  699 	push	hl
   03BD CDr00s00            700 	call	_FLOS_PrintString
   03C0 F1                  701 	pop	af
   03C1 C1                  702 	pop	bc
                            703 ;test1.c:203: for(i=0; i<8; i++) {
   03C2 0C                  704 	inc	c
   03C3 18 C4               705 	jr	00109$
   03C5                     706 00112$:
                            707 ;test1.c:208: FLOS_PrintString(PS_LFCR);
   03C5 21rF3s03            708 	ld	hl,#__str_17
   03C8 E5                  709 	push	hl
   03C9 CDr00s00            710 	call	_FLOS_PrintString
   03CC F1                  711 	pop	af
                            712 ;test1.c:211: return TRUE;
   03CD 2E 01               713 	ld	l,#0x01
   03CF C9                  714 	ret
   03D0                     715 _test2_end::
   03D0                     716 __str_15:
   03D0 46 6F 72 63 65 4C   717 	.ascii "ForceLoad failed: "
        6F 61 64 20 66 61
        69 6C 65 64 3A 20
   03E2 00                  718 	.db 0x00
   03E3                     719 __str_16:
   03E3 44 61 74 61 20 61   720 	.ascii "Data at $0000: "
        74 20 24 30 30 30
        30 3A 20
   03F2 00                  721 	.db 0x00
   03F3                     722 __str_17:
   03F3 0B                  723 	.db 0x0B
   03F4 00                  724 	.db 0x00
   03F5                     725 __str_18:
   03F5 20 20               726 	.ascii "  "
   03F7 00                  727 	.db 0x00
   03F8                     728 __str_19:
   03F8 44 61 74 61 20 61   729 	.ascii "Data at $0010: "
        74 20 24 30 30 31
        30 3A 20
   0407 00                  730 	.db 0x00
                            731 ;test1.c:214: BOOL test3(void)
                            732 ;	---------------------------------
                            733 ; Function test3
                            734 ; ---------------------------------
   0408                     735 _test3_start::
   0408                     736 _test3:
                            737 ;test1.c:220: blocks = FLOS_GetTotalSectors();
   0408 CDr00s00            738 	call	_FLOS_GetTotalSectors
   040B 44                  739 	ld	b,h
   040C 4D                  740 	ld	c,l
                            741 ;test1.c:222: FLOS_PrintString("Drive total sectors: $");
   040D C5                  742 	push	bc
   040E D5                  743 	push	de
   040F 21rC3s04            744 	ld	hl,#__str_20
   0412 E5                  745 	push	hl
   0413 CDr00s00            746 	call	_FLOS_PrintString
   0416 F1                  747 	pop	af
   0417 D1                  748 	pop	de
   0418 C1                  749 	pop	bc
                            750 ;test1.c:223: _ultoa(blocks, buffer, 16);
   0419 3E 10               751 	ld	a,#0x10
   041B F5                  752 	push	af
   041C 33                  753 	inc	sp
   041D 21r09s00            754 	ld	hl,#_buffer
   0420 E5                  755 	push	hl
   0421 D5                  756 	push	de
   0422 C5                  757 	push	bc
   0423 CDr00s00            758 	call	__ultoa
   0426 F1                  759 	pop	af
   0427 F1                  760 	pop	af
   0428 F1                  761 	pop	af
   0429 33                  762 	inc	sp
                            763 ;test1.c:224: FLOS_PrintString(buffer);
   042A 21r09s00            764 	ld	hl,#_buffer
   042D E5                  765 	push	hl
   042E CDr00s00            766 	call	_FLOS_PrintString
   0431 F1                  767 	pop	af
                            768 ;test1.c:225: FLOS_PrintString(PS_LFCR);
   0432 21rDAs04            769 	ld	hl,#__str_21
   0435 E5                  770 	push	hl
   0436 CDr00s00            771 	call	_FLOS_PrintString
   0439 F1                  772 	pop	af
                            773 ;test1.c:228: FLOS_PrintStringLFCR("Creating file... ");
   043A 21rDCs04            774 	ld	hl,#__str_22
   043D E5                  775 	push	hl
   043E CDr00s00            776 	call	_FLOS_PrintStringLFCR
   0441 F1                  777 	pop	af
                            778 ;test1.c:229: pFilename = "MYTEST.TMP";
                            779 ;test1.c:230: r = FLOS_CreateFile(pFilename);
   0442 21rEEs04            780 	ld	hl,#__str_23
   0445 E5                  781 	push	hl
   0446 CDr00s00            782 	call	_FLOS_CreateFile
   0449 F1                  783 	pop	af
                            784 ;test1.c:231: if(!r) {
   044A AF                  785 	xor	a,a
   044B B5                  786 	or	a,l
   044C 20 10               787 	jr	NZ,00102$
                            788 ;test1.c:232: DiagMessage("CreateFile failed: ", pFilename);
   044E 21rEEs04            789 	ld	hl,#__str_23
   0451 E5                  790 	push	hl
   0452 21rF9s04            791 	ld	hl,#__str_24
   0455 E5                  792 	push	hl
   0456 CDrC2s08            793 	call	_DiagMessage
   0459 F1                  794 	pop	af
   045A F1                  795 	pop	af
                            796 ;test1.c:233: return FALSE;
   045B 2E 00               797 	ld	l,#0x00
   045D C9                  798 	ret
   045E                     799 00102$:
                            800 ;test1.c:238: FLOS_PrintStringLFCR("Writing bytes to file...");
   045E 21r0Ds05            801 	ld	hl,#__str_25
   0461 E5                  802 	push	hl
   0462 CDr00s00            803 	call	_FLOS_PrintStringLFCR
   0465 F1                  804 	pop	af
                            805 ;test1.c:239: r = FLOS_WriteBytesToFile(pFilename, (byte*) 0x1000, 0, 0x2000);
   0466 21 00 00            806 	ld	hl,#0x0000
   0469 E5                  807 	push	hl
   046A 21 00 20            808 	ld	hl,#0x2000
   046D E5                  809 	push	hl
   046E 3E 00               810 	ld	a,#0x00
   0470 F5                  811 	push	af
   0471 33                  812 	inc	sp
   0472 26 10               813 	ld	h, #0x10
   0474 E5                  814 	push	hl
   0475 21rEEs04            815 	ld	hl,#__str_23
   0478 E5                  816 	push	hl
   0479 CDr00s00            817 	call	_FLOS_WriteBytesToFile
   047C FD 21 09 00         818 	ld	iy,#0x0009
   0480 FD 39               819 	add	iy,sp
   0482 FD F9               820 	ld	sp,iy
   0484 45                  821 	ld	b,l
   0485 48                  822 	ld	c,b
                            823 ;test1.c:240: if(!r) {
   0486 AF                  824 	xor	a,a
   0487 B1                  825 	or	a,c
   0488 20 10               826 	jr	NZ,00104$
                            827 ;test1.c:241: DiagMessage("WriteBytesToFile failed: ", pFilename);
   048A 21rEEs04            828 	ld	hl,#__str_23
   048D E5                  829 	push	hl
   048E 21r26s05            830 	ld	hl,#__str_26
   0491 E5                  831 	push	hl
   0492 CDrC2s08            832 	call	_DiagMessage
   0495 F1                  833 	pop	af
   0496 F1                  834 	pop	af
                            835 ;test1.c:242: return FALSE;
   0497 2E 00               836 	ld	l,#0x00
   0499 C9                  837 	ret
   049A                     838 00104$:
                            839 ;test1.c:246: FLOS_PrintStringLFCR("Erasing file... ");
   049A 21r40s05            840 	ld	hl,#__str_27
   049D E5                  841 	push	hl
   049E CDr00s00            842 	call	_FLOS_PrintStringLFCR
   04A1 F1                  843 	pop	af
                            844 ;test1.c:247: r = FLOS_EraseFile(pFilename);
   04A2 21rEEs04            845 	ld	hl,#__str_23
   04A5 E5                  846 	push	hl
   04A6 CDr00s00            847 	call	_FLOS_EraseFile
   04A9 F1                  848 	pop	af
   04AA 45                  849 	ld	b,l
   04AB 48                  850 	ld	c,b
                            851 ;test1.c:248: if(!r) {
   04AC AF                  852 	xor	a,a
   04AD B1                  853 	or	a,c
   04AE 20 10               854 	jr	NZ,00106$
                            855 ;test1.c:249: DiagMessage("EraseFile failed: ", pFilename);
   04B0 21rEEs04            856 	ld	hl,#__str_23
   04B3 E5                  857 	push	hl
   04B4 21r51s05            858 	ld	hl,#__str_28
   04B7 E5                  859 	push	hl
   04B8 CDrC2s08            860 	call	_DiagMessage
   04BB F1                  861 	pop	af
   04BC F1                  862 	pop	af
                            863 ;test1.c:250: return FALSE;
   04BD 2E 00               864 	ld	l,#0x00
   04BF C9                  865 	ret
   04C0                     866 00106$:
                            867 ;test1.c:253: return TRUE;
   04C0 2E 01               868 	ld	l,#0x01
   04C2 C9                  869 	ret
   04C3                     870 _test3_end::
   04C3                     871 __str_20:
   04C3 44 72 69 76 65 20   872 	.ascii "Drive total sectors: $"
        74 6F 74 61 6C 20
        73 65 63 74 6F 72
        73 3A 20 24
   04D9 00                  873 	.db 0x00
   04DA                     874 __str_21:
   04DA 0B                  875 	.db 0x0B
   04DB 00                  876 	.db 0x00
   04DC                     877 __str_22:
   04DC 43 72 65 61 74 69   878 	.ascii "Creating file... "
        6E 67 20 66 69 6C
        65 2E 2E 2E 20
   04ED 00                  879 	.db 0x00
   04EE                     880 __str_23:
   04EE 4D 59 54 45 53 54   881 	.ascii "MYTEST.TMP"
        2E 54 4D 50
   04F8 00                  882 	.db 0x00
   04F9                     883 __str_24:
   04F9 43 72 65 61 74 65   884 	.ascii "CreateFile failed: "
        46 69 6C 65 20 66
        61 69 6C 65 64 3A
        20
   050C 00                  885 	.db 0x00
   050D                     886 __str_25:
   050D 57 72 69 74 69 6E   887 	.ascii "Writing bytes to file..."
        67 20 62 79 74 65
        73 20 74 6F 20 66
        69 6C 65 2E 2E 2E
   0525 00                  888 	.db 0x00
   0526                     889 __str_26:
   0526 57 72 69 74 65 42   890 	.ascii "WriteBytesToFile failed: "
        79 74 65 73 54 6F
        46 69 6C 65 20 66
        61 69 6C 65 64 3A
        20
   053F 00                  891 	.db 0x00
   0540                     892 __str_27:
   0540 45 72 61 73 69 6E   893 	.ascii "Erasing file... "
        67 20 66 69 6C 65
        2E 2E 2E 20
   0550 00                  894 	.db 0x00
   0551                     895 __str_28:
   0551 45 72 61 73 65 46   896 	.ascii "EraseFile failed: "
        69 6C 65 20 66 61
        69 6C 65 64 3A 20
   0563 00                  897 	.db 0x00
                            898 ;test1.c:256: BOOL test4(void)
                            899 ;	---------------------------------
                            900 ; Function test4
                            901 ; ---------------------------------
   0564                     902 _test4_start::
   0564                     903 _test4:
                            904 ;test1.c:260: const char* pDirName = "TMPDIR";
                            905 ;test1.c:262: FLOS_PrintStringLFCR("Creating dir... ");
   0564 21r1Cs06            906 	ld	hl,#__str_30
   0567 E5                  907 	push	hl
   0568 CDr00s00            908 	call	_FLOS_PrintStringLFCR
   056B F1                  909 	pop	af
                            910 ;test1.c:263: r = FLOS_MakeDir(pDirName);
   056C 21r15s06            911 	ld	hl,#__str_29
   056F E5                  912 	push	hl
   0570 CDr00s00            913 	call	_FLOS_MakeDir
   0573 F1                  914 	pop	af
                            915 ;test1.c:264: if(!r) {
   0574 AF                  916 	xor	a,a
   0575 B5                  917 	or	a,l
   0576 20 10               918 	jr	NZ,00102$
                            919 ;test1.c:265: DiagMessage("MakeDir failed: ", pDirName);
   0578 21r15s06            920 	ld	hl,#__str_29
   057B E5                  921 	push	hl
   057C 21r2Ds06            922 	ld	hl,#__str_31
   057F E5                  923 	push	hl
   0580 CDrC2s08            924 	call	_DiagMessage
   0583 F1                  925 	pop	af
   0584 F1                  926 	pop	af
                            927 ;test1.c:266: return FALSE;
   0585 2E 00               928 	ld	l,#0x00
   0587 C9                  929 	ret
   0588                     930 00102$:
                            931 ;test1.c:269: FLOS_PrintStringLFCR("Change dir... ");
   0588 21r3Es06            932 	ld	hl,#__str_32
   058B E5                  933 	push	hl
   058C CDr00s00            934 	call	_FLOS_PrintStringLFCR
   058F F1                  935 	pop	af
                            936 ;test1.c:270: r = FLOS_ChangeDir(pDirName);
   0590 21r15s06            937 	ld	hl,#__str_29
   0593 E5                  938 	push	hl
   0594 CDr00s00            939 	call	_FLOS_ChangeDir
   0597 F1                  940 	pop	af
   0598 45                  941 	ld	b,l
   0599 48                  942 	ld	c,b
                            943 ;test1.c:271: if(!r) {
   059A AF                  944 	xor	a,a
   059B B1                  945 	or	a,c
   059C 20 10               946 	jr	NZ,00104$
                            947 ;test1.c:272: DiagMessage("ChangeDir failed: ", pDirName);
   059E 21r15s06            948 	ld	hl,#__str_29
   05A1 E5                  949 	push	hl
   05A2 21r4Ds06            950 	ld	hl,#__str_33
   05A5 E5                  951 	push	hl
   05A6 CDrC2s08            952 	call	_DiagMessage
   05A9 F1                  953 	pop	af
   05AA F1                  954 	pop	af
                            955 ;test1.c:273: return FALSE;
   05AB 2E 00               956 	ld	l,#0x00
   05AD C9                  957 	ret
   05AE                     958 00104$:
                            959 ;test1.c:277: if(!PrintCurDirName())
   05AE CDrB4s06            960 	call	_PrintCurDirName
                            961 ;test1.c:278: return FALSE;
   05B1 AF                  962 	xor	a,a
   05B2 B5                  963 	or	a,l
   05B3 20 02               964 	jr	NZ,00106$
   05B5 6F                  965 	ld	l,a
   05B6 C9                  966 	ret
   05B7                     967 00106$:
                            968 ;test1.c:281: FLOS_PrintStringLFCR("Parent dir... ");
   05B7 21r60s06            969 	ld	hl,#__str_34
   05BA E5                  970 	push	hl
   05BB CDr00s00            971 	call	_FLOS_PrintStringLFCR
   05BE F1                  972 	pop	af
                            973 ;test1.c:282: r = FLOS_ParentDir();
   05BF CDr00s00            974 	call	_FLOS_ParentDir
   05C2 45                  975 	ld	b,l
   05C3 48                  976 	ld	c,b
                            977 ;test1.c:283: if(!r) {
   05C4 AF                  978 	xor	a,a
   05C5 B1                  979 	or	a,c
   05C6 20 10               980 	jr	NZ,00108$
                            981 ;test1.c:284: DiagMessage("ParentDir failed: ", "");
   05C8 21r82s06            982 	ld	hl,#__str_36
   05CB E5                  983 	push	hl
   05CC 21r6Fs06            984 	ld	hl,#__str_35
   05CF E5                  985 	push	hl
   05D0 CDrC2s08            986 	call	_DiagMessage
   05D3 F1                  987 	pop	af
   05D4 F1                  988 	pop	af
                            989 ;test1.c:285: return FALSE;
   05D5 2E 00               990 	ld	l,#0x00
   05D7 C9                  991 	ret
   05D8                     992 00108$:
                            993 ;test1.c:289: FLOS_PrintStringLFCR("Deleting dir... ");
   05D8 21r83s06            994 	ld	hl,#__str_37
   05DB E5                  995 	push	hl
   05DC CDr00s00            996 	call	_FLOS_PrintStringLFCR
   05DF F1                  997 	pop	af
                            998 ;test1.c:290: r = FLOS_DeleteDir(pDirName);
   05E0 21r15s06            999 	ld	hl,#__str_29
   05E3 E5                 1000 	push	hl
   05E4 CDr00s00           1001 	call	_FLOS_DeleteDir
   05E7 F1                 1002 	pop	af
   05E8 45                 1003 	ld	b,l
   05E9 48                 1004 	ld	c,b
                           1005 ;test1.c:291: if(!r) {
   05EA AF                 1006 	xor	a,a
   05EB B1                 1007 	or	a,c
   05EC 20 10              1008 	jr	NZ,00110$
                           1009 ;test1.c:292: DiagMessage("DeleteDir failed: ", pDirName);
   05EE 21r15s06           1010 	ld	hl,#__str_29
   05F1 E5                 1011 	push	hl
   05F2 21r94s06           1012 	ld	hl,#__str_38
   05F5 E5                 1013 	push	hl
   05F6 CDrC2s08           1014 	call	_DiagMessage
   05F9 F1                 1015 	pop	af
   05FA F1                 1016 	pop	af
                           1017 ;test1.c:293: return FALSE;
   05FB 2E 00              1018 	ld	l,#0x00
   05FD C9                 1019 	ret
   05FE                    1020 00110$:
                           1021 ;test1.c:296: FLOS_PrintStringLFCR("ROOT dir... ");
   05FE 21rA7s06           1022 	ld	hl,#__str_39
   0601 E5                 1023 	push	hl
   0602 CDr00s00           1024 	call	_FLOS_PrintStringLFCR
   0605 F1                 1025 	pop	af
                           1026 ;test1.c:297: FLOS_RootDir();
   0606 CDr00s00           1027 	call	_FLOS_RootDir
                           1028 ;test1.c:300: if(!PrintCurDirName())
   0609 CDrB4s06           1029 	call	_PrintCurDirName
                           1030 ;test1.c:301: return FALSE;
   060C AF                 1031 	xor	a,a
   060D B5                 1032 	or	a,l
   060E 20 02              1033 	jr	NZ,00112$
   0610 6F                 1034 	ld	l,a
   0611 C9                 1035 	ret
   0612                    1036 00112$:
                           1037 ;test1.c:304: return TRUE;
   0612 2E 01              1038 	ld	l,#0x01
   0614 C9                 1039 	ret
   0615                    1040 _test4_end::
   0615                    1041 __str_29:
   0615 54 4D 50 44 49 52  1042 	.ascii "TMPDIR"
   061B 00                 1043 	.db 0x00
   061C                    1044 __str_30:
   061C 43 72 65 61 74 69  1045 	.ascii "Creating dir... "
        6E 67 20 64 69 72
        2E 2E 2E 20
   062C 00                 1046 	.db 0x00
   062D                    1047 __str_31:
   062D 4D 61 6B 65 44 69  1048 	.ascii "MakeDir failed: "
        72 20 66 61 69 6C
        65 64 3A 20
   063D 00                 1049 	.db 0x00
   063E                    1050 __str_32:
   063E 43 68 61 6E 67 65  1051 	.ascii "Change dir... "
        20 64 69 72 2E 2E
        2E 20
   064C 00                 1052 	.db 0x00
   064D                    1053 __str_33:
   064D 43 68 61 6E 67 65  1054 	.ascii "ChangeDir failed: "
        44 69 72 20 66 61
        69 6C 65 64 3A 20
   065F 00                 1055 	.db 0x00
   0660                    1056 __str_34:
   0660 50 61 72 65 6E 74  1057 	.ascii "Parent dir... "
        20 64 69 72 2E 2E
        2E 20
   066E 00                 1058 	.db 0x00
   066F                    1059 __str_35:
   066F 50 61 72 65 6E 74  1060 	.ascii "ParentDir failed: "
        44 69 72 20 66 61
        69 6C 65 64 3A 20
   0681 00                 1061 	.db 0x00
   0682                    1062 __str_36:
   0682 00                 1063 	.db 0x00
   0683                    1064 __str_37:
   0683 44 65 6C 65 74 69  1065 	.ascii "Deleting dir... "
        6E 67 20 64 69 72
        2E 2E 2E 20
   0693 00                 1066 	.db 0x00
   0694                    1067 __str_38:
   0694 44 65 6C 65 74 65  1068 	.ascii "DeleteDir failed: "
        44 69 72 20 66 61
        69 6C 65 64 3A 20
   06A6 00                 1069 	.db 0x00
   06A7                    1070 __str_39:
   06A7 52 4F 4F 54 20 64  1071 	.ascii "ROOT dir... "
        69 72 2E 2E 2E 20
   06B3 00                 1072 	.db 0x00
                           1073 ;test1.c:307: BOOL PrintCurDirName(void)
                           1074 ;	---------------------------------
                           1075 ; Function PrintCurDirName
                           1076 ; ---------------------------------
   06B4                    1077 _PrintCurDirName_start::
   06B4                    1078 _PrintCurDirName:
                           1079 ;test1.c:311: FLOS_PrintString("Dirname: ");
   06B4 21rDDs06           1080 	ld	hl,#__str_40
   06B7 E5                 1081 	push	hl
   06B8 CDr00s00           1082 	call	_FLOS_PrintString
   06BB F1                 1083 	pop	af
                           1084 ;test1.c:312: p = FLOS_GetDirName();
   06BC CDr00s00           1085 	call	_FLOS_GetDirName
   06BF 44                 1086 	ld	b,h
   06C0 4D                 1087 	ld	c,l
                           1088 ;test1.c:313: if(!p) {
   06C1 79                 1089 	ld	a,c
   06C2 B0                 1090 	or	a,b
   06C3 20 10              1091 	jr	NZ,00102$
                           1092 ;test1.c:314: DiagMessage("FLOS_GetDirName failed: ", "");
   06C5 21r00s07           1093 	ld	hl,#__str_42
   06C8 E5                 1094 	push	hl
   06C9 21rE7s06           1095 	ld	hl,#__str_41
   06CC E5                 1096 	push	hl
   06CD CDrC2s08           1097 	call	_DiagMessage
   06D0 F1                 1098 	pop	af
   06D1 F1                 1099 	pop	af
                           1100 ;test1.c:315: return FALSE;
   06D2 2E 00              1101 	ld	l,#0x00
   06D4 C9                 1102 	ret
   06D5                    1103 00102$:
                           1104 ;test1.c:317: FLOS_PrintStringLFCR(p);
   06D5 C5                 1105 	push	bc
   06D6 CDr00s00           1106 	call	_FLOS_PrintStringLFCR
   06D9 F1                 1107 	pop	af
                           1108 ;test1.c:319: return TRUE;
   06DA 2E 01              1109 	ld	l,#0x01
   06DC C9                 1110 	ret
   06DD                    1111 _PrintCurDirName_end::
   06DD                    1112 __str_40:
   06DD 44 69 72 6E 61 6D  1113 	.ascii "Dirname: "
        65 3A 20
   06E6 00                 1114 	.db 0x00
   06E7                    1115 __str_41:
   06E7 46 4C 4F 53 5F 47  1116 	.ascii "FLOS_GetDirName failed: "
        65 74 44 69 72 4E
        61 6D 65 20 66 61
        69 6C 65 64 3A 20
   06FF 00                 1117 	.db 0x00
   0700                    1118 __str_42:
   0700 00                 1119 	.db 0x00
                           1120 ;test1.c:323: BOOL test5(void)
                           1121 ;	---------------------------------
                           1122 ; Function test5
                           1123 ; ---------------------------------
   0701                    1124 _test5_start::
   0701                    1125 _test5:
   0701 DD E5              1126 	push	ix
   0703 DD 21 00 00        1127 	ld	ix,#0
   0707 DD 39              1128 	add	ix,sp
   0709 F5                 1129 	push	af
                           1130 ;test1.c:330: FLOS_PrintStringLFCR("FLOS_WaitKeyPress... press any key");
   070A 21r93s07           1131 	ld	hl,#__str_43
   070D E5                 1132 	push	hl
   070E CDr00s00           1133 	call	_FLOS_PrintStringLFCR
   0711 F1                 1134 	pop	af
                           1135 ;test1.c:331: FLOS_WaitKeyPress(&asciicode, &scancode);
   0712 21 00 00           1136 	ld	hl,#0x0000
   0715 39                 1137 	add	hl,sp
   0716 4D                 1138 	ld	c,l
   0717 44                 1139 	ld	b,h
   0718 21 01 00           1140 	ld	hl,#0x0001
   071B 39                 1141 	add	hl,sp
   071C C5                 1142 	push	bc
   071D E5                 1143 	push	hl
   071E CDr00s00           1144 	call	_FLOS_WaitKeyPress
   0721 F1                 1145 	pop	af
   0722 F1                 1146 	pop	af
                           1147 ;test1.c:332: FLOS_PrintString("scancode: $");
   0723 21rB6s07           1148 	ld	hl,#__str_44
   0726 E5                 1149 	push	hl
   0727 CDr00s00           1150 	call	_FLOS_PrintString
   072A F1                 1151 	pop	af
                           1152 ;test1.c:333: _ultoa(scancode, buffer, 16);
   072B DD 4E FE           1153 	ld	c,-2 (ix)
   072E 06 00              1154 	ld	b,#0x00
   0730 11 00 00           1155 	ld	de,#0x0000
   0733 3E 10              1156 	ld	a,#0x10
   0735 F5                 1157 	push	af
   0736 33                 1158 	inc	sp
   0737 21r09s00           1159 	ld	hl,#_buffer
   073A E5                 1160 	push	hl
   073B D5                 1161 	push	de
   073C C5                 1162 	push	bc
   073D CDr00s00           1163 	call	__ultoa
   0740 F1                 1164 	pop	af
   0741 F1                 1165 	pop	af
   0742 F1                 1166 	pop	af
   0743 33                 1167 	inc	sp
                           1168 ;test1.c:334: FLOS_PrintString(buffer);
   0744 21r09s00           1169 	ld	hl,#_buffer
   0747 E5                 1170 	push	hl
   0748 CDr00s00           1171 	call	_FLOS_PrintString
   074B F1                 1172 	pop	af
                           1173 ;test1.c:335: FLOS_PrintString(" ascii: $");
   074C 21rC2s07           1174 	ld	hl,#__str_45
   074F E5                 1175 	push	hl
   0750 CDr00s00           1176 	call	_FLOS_PrintString
   0753 F1                 1177 	pop	af
                           1178 ;test1.c:336: _ultoa(asciicode, buffer, 16);
   0754 DD 4E FF           1179 	ld	c,-1 (ix)
   0757 06 00              1180 	ld	b,#0x00
   0759 11 00 00           1181 	ld	de,#0x0000
   075C 3E 10              1182 	ld	a,#0x10
   075E F5                 1183 	push	af
   075F 33                 1184 	inc	sp
   0760 21r09s00           1185 	ld	hl,#_buffer
   0763 E5                 1186 	push	hl
   0764 D5                 1187 	push	de
   0765 C5                 1188 	push	bc
   0766 CDr00s00           1189 	call	__ultoa
   0769 F1                 1190 	pop	af
   076A F1                 1191 	pop	af
   076B F1                 1192 	pop	af
   076C 33                 1193 	inc	sp
                           1194 ;test1.c:337: FLOS_PrintStringLFCR(buffer);
   076D 21r09s00           1195 	ld	hl,#_buffer
   0770 E5                 1196 	push	hl
   0771 CDr00s00           1197 	call	_FLOS_PrintStringLFCR
   0774 F1                 1198 	pop	af
                           1199 ;test1.c:342: r = FLOS_SetCursorPos(10, 18);
   0775 21 0A 12           1200 	ld	hl,#0x120A
   0778 E5                 1201 	push	hl
   0779 CDr00s00           1202 	call	_FLOS_SetCursorPos
   077C F1                 1203 	pop	af
   077D 7D                 1204 	ld	a,l
                           1205 ;test1.c:343: if(!r)
                           1206 ;test1.c:344: return FALSE;
   077E B7                 1207 	or	a,a
   077F 20 03              1208 	jr	NZ,00102$
   0781 6F                 1209 	ld	l,a
   0782 18 0A              1210 	jr	00103$
   0784                    1211 00102$:
                           1212 ;test1.c:345: FLOS_PrintStringLFCR("SetCursorPos... ");
   0784 21rCCs07           1213 	ld	hl,#__str_46
   0787 E5                 1214 	push	hl
   0788 CDr00s00           1215 	call	_FLOS_PrintStringLFCR
   078B F1                 1216 	pop	af
                           1217 ;test1.c:348: return TRUE;
   078C 2E 01              1218 	ld	l,#0x01
   078E                    1219 00103$:
   078E DD F9              1220 	ld	sp,ix
   0790 DD E1              1221 	pop	ix
   0792 C9                 1222 	ret
   0793                    1223 _test5_end::
   0793                    1224 __str_43:
   0793 46 4C 4F 53 5F 57  1225 	.ascii "FLOS_WaitKeyPress... press any key"
        61 69 74 4B 65 79
        50 72 65 73 73 2E
        2E 2E 20 70 72 65
        73 73 20 61 6E 79
        20 6B 65 79
   07B5 00                 1226 	.db 0x00
   07B6                    1227 __str_44:
   07B6 73 63 61 6E 63 6F  1228 	.ascii "scancode: $"
        64 65 3A 20 24
   07C1 00                 1229 	.db 0x00
   07C2                    1230 __str_45:
   07C2 20 61 73 63 69 69  1231 	.ascii " ascii: $"
        3A 20 24
   07CB 00                 1232 	.db 0x00
   07CC                    1233 __str_46:
   07CC 53 65 74 43 75 72  1234 	.ascii "SetCursorPos... "
        73 6F 72 50 6F 73
        2E 2E 2E 20
   07DC 00                 1235 	.db 0x00
                           1236 ;test1.c:352: BOOL test6(void)
                           1237 ;	---------------------------------
                           1238 ; Function test6
                           1239 ; ---------------------------------
   07DD                    1240 _test6_start::
   07DD                    1241 _test6:
   07DD DD E5              1242 	push	ix
   07DF DD 21 00 00        1243 	ld	ix,#0
   07E3 DD 39              1244 	add	ix,sp
   07E5 21 F4 FF           1245 	ld	hl,#-12
   07E8 39                 1246 	add	hl,sp
   07E9 F9                 1247 	ld	sp,hl
                           1248 ;test1.c:357: FLOS_PrintStringLFCR("Press ENTER key to DIR test...");
   07EA 21r8Cs08           1249 	ld	hl,#__str_47
   07ED E5                 1250 	push	hl
   07EE CDr00s00           1251 	call	_FLOS_PrintStringLFCR
   07F1 F1                 1252 	pop	af
                           1253 ;test1.c:359: WaitKeyPress(0x5A);
   07F2 3E 5A              1254 	ld	a,#0x5A
   07F4 F5                 1255 	push	af
   07F5 33                 1256 	inc	sp
   07F6 CDr53s09           1257 	call	_WaitKeyPress
   07F9 33                 1258 	inc	sp
                           1259 ;test1.c:361: FLOS_ClearScreen();
   07FA CDr00s00           1260 	call	_FLOS_ClearScreen
                           1261 ;test1.c:363: FLOS_PrintStringLFCR("Dir list:");
   07FD 21rABs08           1262 	ld	hl,#__str_48
   0800 E5                 1263 	push	hl
   0801 CDr00s00           1264 	call	_FLOS_PrintStringLFCR
   0804 F1                 1265 	pop	af
                           1266 ;test1.c:365: FLOS_DirListFirstEntry();
   0805 CDr00s00           1267 	call	_FLOS_DirListFirstEntry
                           1268 ;test1.c:366: while(1) {
   0808 21 04 00           1269 	ld	hl,#0x0004
   080B 39                 1270 	add	hl,sp
   080C 4D                 1271 	ld	c,l
   080D 44                 1272 	ld	b,h
   080E 21 06 00           1273 	ld	hl,#0x0006
   0811 09                 1274 	add	hl,bc
   0812 DD 75 F6           1275 	ld	-10 (ix),l
   0815 DD 74 F7           1276 	ld	-9 (ix),h
   0818 21 07 00           1277 	ld	hl,#0x0007
   081B 09                 1278 	add	hl,bc
   081C DD 75 F4           1279 	ld	-12 (ix),l
   081F DD 74 F5           1280 	ld	-11 (ix),h
   0822                    1281 00109$:
                           1282 ;test1.c:367: FLOS_DirListGetEntry(&e);
   0822 21 04 00           1283 	ld	hl,#0x0004
   0825 39                 1284 	add	hl,sp
   0826 E5                 1285 	push	hl
   0827 CDr00s00           1286 	call	_FLOS_DirListGetEntry
   082A F1                 1287 	pop	af
                           1288 ;test1.c:368: if(e.err_code == END_OF_DIR) break;
   082B DD 6E F4           1289 	ld	l,-12 (ix)
   082E DD 66 F5           1290 	ld	h,-11 (ix)
   0831 7E                 1291 	ld	a,(hl)
   0832 D6 24              1292 	sub	a,#0x24
   0834 CAr85s08           1293 	jp	Z,00110$
                           1294 ;test1.c:370: FLOS_PrintString(e.pFilename);
   0837 21 04 00           1295 	ld	hl,#0x0004
   083A 39                 1296 	add	hl,sp
   083B 5E                 1297 	ld	e,(hl)
   083C 23                 1298 	inc	hl
   083D 56                 1299 	ld	d,(hl)
   083E D5                 1300 	push	de
   083F CDr00s00           1301 	call	_FLOS_PrintString
   0842 F1                 1302 	pop	af
                           1303 ;test1.c:372: if(e.file_flag == 1)
   0843 DD 6E F6           1304 	ld	l,-10 (ix)
   0846 DD 66 F7           1305 	ld	h,-9 (ix)
   0849 7E                 1306 	ld	a,(hl)
   084A D6 01              1307 	sub	a,#0x01
   084C 20 0A              1308 	jr	NZ,00104$
                           1309 ;test1.c:373: FLOS_PrintStringLFCR("  (DIR)");
   084E 21rB5s08           1310 	ld	hl,#__str_49
   0851 E5                 1311 	push	hl
   0852 CDr00s00           1312 	call	_FLOS_PrintStringLFCR
   0855 F1                 1313 	pop	af
   0856 18 24              1314 	jr	00105$
   0858                    1315 00104$:
                           1316 ;test1.c:375: FLOS_PrintString("  $");
   0858 21rBDs08           1317 	ld	hl,#__str_50
   085B E5                 1318 	push	hl
   085C CDr00s00           1319 	call	_FLOS_PrintString
   085F F1                 1320 	pop	af
                           1321 ;test1.c:376: PrintNum(e.len);
   0860 21 04 00           1322 	ld	hl,#0x0004
   0863 39                 1323 	add	hl,sp
   0864 23                 1324 	inc	hl
   0865 23                 1325 	inc	hl
   0866 5E                 1326 	ld	e,(hl)
   0867 23                 1327 	inc	hl
   0868 56                 1328 	ld	d,(hl)
   0869 23                 1329 	inc	hl
   086A 4E                 1330 	ld	c,(hl)
   086B 23                 1331 	inc	hl
   086C 46                 1332 	ld	b,(hl)
   086D C5                 1333 	push	bc
   086E D5                 1334 	push	de
   086F CDr23s09           1335 	call	_PrintNum
   0872 F1                 1336 	pop	af
   0873 F1                 1337 	pop	af
                           1338 ;test1.c:377: FLOS_PrintStringLFCR("");
   0874 21rC1s08           1339 	ld	hl,#__str_51
   0877 E5                 1340 	push	hl
   0878 CDr00s00           1341 	call	_FLOS_PrintStringLFCR
   087B F1                 1342 	pop	af
   087C                    1343 00105$:
                           1344 ;test1.c:380: if(FLOS_DirListNextEntry() == END_OF_DIR) break;
   087C CDr00s00           1345 	call	_FLOS_DirListNextEntry
   087F 7D                 1346 	ld	a,l
   0880 D6 24              1347 	sub	a,#0x24
   0882 C2r22s08           1348 	jp	NZ,00109$
   0885                    1349 00110$:
                           1350 ;test1.c:387: return TRUE;
   0885 2E 01              1351 	ld	l,#0x01
   0887 DD F9              1352 	ld	sp,ix
   0889 DD E1              1353 	pop	ix
   088B C9                 1354 	ret
   088C                    1355 _test6_end::
   088C                    1356 __str_47:
   088C 50 72 65 73 73 20  1357 	.ascii "Press ENTER key to DIR test..."
        45 4E 54 45 52 20
        6B 65 79 20 74 6F
        20 44 49 52 20 74
        65 73 74 2E 2E 2E
   08AA 00                 1358 	.db 0x00
   08AB                    1359 __str_48:
   08AB 44 69 72 20 6C 69  1360 	.ascii "Dir list:"
        73 74 3A
   08B4 00                 1361 	.db 0x00
   08B5                    1362 __str_49:
   08B5 20 20 28 44 49 52  1363 	.ascii "  (DIR)"
        29
   08BC 00                 1364 	.db 0x00
   08BD                    1365 __str_50:
   08BD 20 20 24           1366 	.ascii "  $"
   08C0 00                 1367 	.db 0x00
   08C1                    1368 __str_51:
   08C1 00                 1369 	.db 0x00
                           1370 ;test1.c:390: void DiagMessage(char* pMsg, char* pFilename)
                           1371 ;	---------------------------------
                           1372 ; Function DiagMessage
                           1373 ; ---------------------------------
   08C2                    1374 _DiagMessage_start::
   08C2                    1375 _DiagMessage:
   08C2 DD E5              1376 	push	ix
   08C4 DD 21 00 00        1377 	ld	ix,#0
   08C8 DD 39              1378 	add	ix,sp
                           1379 ;test1.c:394: err = FLOS_GetLastError();
   08CA CDr00s00           1380 	call	_FLOS_GetLastError
   08CD 4D                 1381 	ld	c,l
                           1382 ;test1.c:396: FLOS_PrintString(pMsg);
   08CE C5                 1383 	push	bc
   08CF DD 6E 04           1384 	ld	l,4 (ix)
   08D2 DD 66 05           1385 	ld	h,5 (ix)
   08D5 E5                 1386 	push	hl
   08D6 CDr00s00           1387 	call	_FLOS_PrintString
   08D9 F1                 1388 	pop	af
   08DA C1                 1389 	pop	bc
                           1390 ;test1.c:397: FLOS_PrintString(pFilename);
   08DB C5                 1391 	push	bc
   08DC DD 6E 06           1392 	ld	l,6 (ix)
   08DF DD 66 07           1393 	ld	h,7 (ix)
   08E2 E5                 1394 	push	hl
   08E3 CDr00s00           1395 	call	_FLOS_PrintString
   08E6 F1                 1396 	pop	af
   08E7 C1                 1397 	pop	bc
                           1398 ;test1.c:399: FLOS_PrintString(" OS_err: $");
   08E8 C5                 1399 	push	bc
   08E9 21r16s09           1400 	ld	hl,#__str_52
   08EC E5                 1401 	push	hl
   08ED CDr00s00           1402 	call	_FLOS_PrintString
   08F0 F1                 1403 	pop	af
   08F1 C1                 1404 	pop	bc
                           1405 ;test1.c:400: _uitoa(err, buffer, 16);
   08F2 06 00              1406 	ld	b,#0x00
   08F4 3E 10              1407 	ld	a,#0x10
   08F6 F5                 1408 	push	af
   08F7 33                 1409 	inc	sp
   08F8 21r09s00           1410 	ld	hl,#_buffer
   08FB E5                 1411 	push	hl
   08FC C5                 1412 	push	bc
   08FD CDr00s00           1413 	call	__uitoa
   0900 F1                 1414 	pop	af
   0901 F1                 1415 	pop	af
   0902 33                 1416 	inc	sp
                           1417 ;test1.c:401: FLOS_PrintString(buffer);
   0903 21r09s00           1418 	ld	hl,#_buffer
   0906 E5                 1419 	push	hl
   0907 CDr00s00           1420 	call	_FLOS_PrintString
   090A F1                 1421 	pop	af
                           1422 ;test1.c:402: FLOS_PrintString(PS_LFCR);
   090B 21r21s09           1423 	ld	hl,#__str_53
   090E E5                 1424 	push	hl
   090F CDr00s00           1425 	call	_FLOS_PrintString
   0912 F1                 1426 	pop	af
   0913 DD E1              1427 	pop	ix
   0915 C9                 1428 	ret
   0916                    1429 _DiagMessage_end::
   0916                    1430 __str_52:
   0916 20 4F 53 5F 65 72  1431 	.ascii " OS_err: $"
        72 3A 20 24
   0920 00                 1432 	.db 0x00
   0921                    1433 __str_53:
   0921 0B                 1434 	.db 0x0B
   0922 00                 1435 	.db 0x00
                           1436 ;test1.c:408: void PrintNum(dword n)
                           1437 ;	---------------------------------
                           1438 ; Function PrintNum
                           1439 ; ---------------------------------
   0923                    1440 _PrintNum_start::
   0923                    1441 _PrintNum:
   0923 DD E5              1442 	push	ix
   0925 DD 21 00 00        1443 	ld	ix,#0
   0929 DD 39              1444 	add	ix,sp
                           1445 ;test1.c:410: _ultoa(n, buffer, 16);
   092B 3E 10              1446 	ld	a,#0x10
   092D F5                 1447 	push	af
   092E 33                 1448 	inc	sp
   092F 21r09s00           1449 	ld	hl,#_buffer
   0932 E5                 1450 	push	hl
   0933 DD 6E 06           1451 	ld	l,6 (ix)
   0936 DD 66 07           1452 	ld	h,7 (ix)
   0939 E5                 1453 	push	hl
   093A DD 6E 04           1454 	ld	l,4 (ix)
   093D DD 66 05           1455 	ld	h,5 (ix)
   0940 E5                 1456 	push	hl
   0941 CDr00s00           1457 	call	__ultoa
   0944 F1                 1458 	pop	af
   0945 F1                 1459 	pop	af
   0946 F1                 1460 	pop	af
   0947 33                 1461 	inc	sp
                           1462 ;test1.c:411: FLOS_PrintString(buffer);
   0948 21r09s00           1463 	ld	hl,#_buffer
   094B E5                 1464 	push	hl
   094C CDr00s00           1465 	call	_FLOS_PrintString
   094F F1                 1466 	pop	af
   0950 DD E1              1467 	pop	ix
   0952 C9                 1468 	ret
   0953                    1469 _PrintNum_end::
                           1470 ;test1.c:415: void WaitKeyPress(byte scancode)
                           1471 ;	---------------------------------
                           1472 ; Function WaitKeyPress
                           1473 ; ---------------------------------
   0953                    1474 _WaitKeyPress_start::
   0953                    1475 _WaitKeyPress:
   0953 DD E5              1476 	push	ix
   0955 DD 21 00 00        1477 	ld	ix,#0
   0959 DD 39              1478 	add	ix,sp
   095B F5                 1479 	push	af
                           1480 ;test1.c:417: byte cur_asciicode = 0, cur_scancode = 0;
   095C DD 36 FF 00        1481 	ld	-1 (ix),#0x00
   0960 DD 36 FE 00        1482 	ld	-2 (ix),#0x00
                           1483 ;test1.c:419: while(cur_scancode != scancode) {
   0964                    1484 00101$:
   0964 DD 7E FE           1485 	ld	a,-2 (ix)
   0967 DD 96 04           1486 	sub	4 (ix)
   096A 28 13              1487 	jr	Z,00104$
                           1488 ;test1.c:420: FLOS_WaitKeyPress(&cur_asciicode, &cur_scancode);
   096C 21 00 00           1489 	ld	hl,#0x0000
   096F 39                 1490 	add	hl,sp
   0970 4D                 1491 	ld	c,l
   0971 44                 1492 	ld	b,h
   0972 21 01 00           1493 	ld	hl,#0x0001
   0975 39                 1494 	add	hl,sp
   0976 C5                 1495 	push	bc
   0977 E5                 1496 	push	hl
   0978 CDr00s00           1497 	call	_FLOS_WaitKeyPress
   097B F1                 1498 	pop	af
   097C F1                 1499 	pop	af
   097D 18 E5              1500 	jr	00101$
   097F                    1501 00104$:
   097F DD F9              1502 	ld	sp,ix
   0981 DD E1              1503 	pop	ix
   0983 C9                 1504 	ret
   0984                    1505 _WaitKeyPress_end::
                           1506 ;test1.c:426: word GetSP(void)  NAKED
                           1507 ;	---------------------------------
                           1508 ; Function GetSP
                           1509 ; ---------------------------------
   0984                    1510 _GetSP_start::
   0984                    1511 _GetSP:
                           1512 ;test1.c:432: __endasm;
                           1513 ;
   0984 21 00 00           1514 		   ld hl,#0
   0987 39                 1515 		   add hl,sp
   0988 C9                 1516 		   ret
                           1517 		   
                           1518 	.area _CODE
                           1519 	.area _CABS
