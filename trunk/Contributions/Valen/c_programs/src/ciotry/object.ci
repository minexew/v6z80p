$include("fixed.inc")




public class GameObj
{
    bool isUsed;

    $FIXED x;
    $FIXED y;
    
    int width;
    int height;

    //bool isAllocated;
    
    Behavior[3] behaviors;
    Engine      engine;

    Sprite() sprite;
    
    /// Constructor
    GameObj()
    {
        Debug.Print("GameObj()\n"); 
        Constructor();

    }
    
    public void Constructor()
    {
        isUsed = true;

        x = y = 0;
        width = height = 20;
        
        // init
        for(int i = 0; i < behaviors.Length; i++)
            behaviors[i] = null;
        
        //isAllocated = false; 
        engine = null;
    }

    public void Unused()
    {
        isUsed = false;
    }
    

    public void Init(Engine e)
    {
        engine = e;
    }

    public Engine GetEngine()
    {
        if(engine == null)
            Debug.Print("ERR: engine is 0\n"); 
        return engine;
    }

    // ---- Virtual funcs ----
    public virtual void Move()
    {
        // implementation        
        //Debug.Print("GameObj.Move()\n");            
    }
    
    public virtual void Draw()
    {        
        // implementation
        //Debug.Print("GameObj.Draw()\n");
        
        GetEngine().myPlatformGfx.Draw(this);
        sprite.DrawGameObj(this);
        
    }

    // ---- Other funcs ----
    public void DoAllBehaviors()
    {        
        // if not null, do 
        for(int i = 0; i < behaviors.Length; i++)
            if(behaviors[i] != null)
                behaviors[i].DoBehavior(this);
        
    }
    
    
    // null - on error
    public bool AddBehavior(Behavior beh)
    {        
        // if null (not used), add and exit 
        for(int i = 0; i < behaviors.Length; i++)
            if(behaviors[i] == null) {
                behaviors[i] = beh;
                return true;
            }
        
        return false;    // add beh failed
    }
}



// public class BulletGameObj : GameObj
// {

    
//     public override void Move()
//     {
//         // implementation        
//         Debug.Print("BulletGameObj.Move()\n");            
//     }
// }

// public class MovingGameObj : GameObj
// {
 
//     int xvel;
//     int yvel;
    
//     /// Constructor
//     MovingGameObj()
//     {
//         Debug.Print("MovingGameObj()\n");
//         xvel = yvel = 0; 
//     }

//     public override void Move()
//     {        
//         //Debug.Print("MovingGameObj.Move()\n");            
//         // implementation
//         x += xvel;
//         y += yvel;
        
        
//     }
    

//     #if false

//     #endif
    
//     public void SetVelXY(int vel_x, int vel_y)
//     {
//         xvel = vel_x;
//         yvel = vel_y; 
//     }

// }





public class Debug
{
    
    public static void Print(string s)
    {
        native {   
            DEBUG_PRINT(s);    
        }
    }
}
