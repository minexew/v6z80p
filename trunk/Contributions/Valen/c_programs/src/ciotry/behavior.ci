public class Behavior
{
    int foo;    // at least one var must be here (for correct code generation for C)
    
    public virtual void DoBehavior(GameObj game_obj)
    {
        // implementation        
        //Debug.Print("Behavior.()\n");            
    }

}


public class MovingBehavior : Behavior
{    
    int xvel;
    int yvel;
    
    /// Constructor
    MovingBehavior()
    {        
        xvel = yvel = 0; 
    }
    
    // workaround 
    public          void DoBehavior_ClassBehavior(GameObj game_obj)
    {
        game_obj.x += xvel;
        game_obj.y += yvel;        
    }

    public override void DoBehavior(GameObj game_obj)
    {
        //Debug.Print("MovingBehavior.()\n");
        DoBehavior_ClassBehavior(game_obj);
    }

}

public class BouncedBehavior : MovingBehavior
{    
    int x1_bounce;
    int y1_bounce;
    
    int x2_bounce;
    int y2_bounce;
    
    /// Constructor
    BouncedBehavior()
    {        
        x1_bounce = y1_bounce = x2_bounce = y2_bounce = 0;
    }
    
    public override void DoBehavior(GameObj game_obj)
    {
        //Debug.Print("BouncedBehavior.()\n");
        // call base class func 
        DoBehavior_ClassBehavior(game_obj);
        
        if(game_obj.x < x1_bounce || game_obj.x > x2_bounce)
            xvel = -xvel;
        
    }

}
