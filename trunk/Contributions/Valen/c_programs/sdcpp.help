The following options are language-independent:

  --help                      Display this information
  --version                   Display the compiler's version

The SDCPP front end recognizes the following options:

  -A<question>=<answer>       Assert the <answer> to <question>.  Putting '-'
                              before <question> disables the <answer> to
                              <question>
  -C                          Do not discard comments
  -CC                         Do not discard comments in macro expansions
  -D<macro>[=<val>]           Define a <macro> with <val> as its value.  If
                              just <macro> is given, <val> is taken to be 1
  -H                          Print the name of header files as they are used
  -I <dir>                    Add <dir> to the end of the main include path. 
                              -I- gives more include path control; see info
                              documentation
  -M                          Generate make dependencies
  -MD                         Generate make dependencies and compile
  -MF <file>                  Write dependency output to the given file
  -MG                         Treat missing header files as generated files
  -MM                         Like -M but ignore system header files
  -MMD                        Like -MD but ignore system header files
  -MP                         Generate phony targets for all headers
  -MQ <target>                Add a MAKE-quoted target
  -MT <target>                Add an unquoted target
  -P                          Do not generate #line directives
  -U<macro>                   Undefine <macro>
  -Wall                       Enable most warning messages
  -Wcomment                   Warn about possibly nested block comments, and
                              C++ comments spanning more than one physical line
  -Wcomments                  Synonym for -Wcomment
  -Wdeprecated                Warn about deprecated compiler features
  -Wendif-labels              Warn about stray tokens after #elif and #endif
  -Werror                     Treat all warnings as errors
  -Wfatal-errors              Exit on the first error occurred
  -Wimport                    Deprecated.  This switch has no effect.
  -Wsystem-headers            Do not suppress warnings from system headers
  -Wtraditional               Warn about features not present in traditional C
  -Wtrigraphs                 Warn if trigraphs are encountered that might
                              affect the meaning of the program
  -Wundef                     Warn if an undefined macro is used in an #if
                              directive
  -Wunused-macros             Warn about macros defined in the main file that
                              are not used
  -Wvariadic-macros           Do not warn about using variadic macros when
                              -pedantic
  -ansi                       A synonym for -std=c89.
  -d<letters>                 Enable dumps from specific passes of the compiler
  -fdollars-in-identifiers    Permit '$' as an identifier character
  -fexec-charset=<cset>       Convert all strings and character constants to
                              character set <cset>
  -finput-charset=            -finput-charset=<cset>      Specify the default
                              character set for source files.
  -fpreprocessed              Treat the input file as already preprocessed
  -fshow-column               This switch lacks documentation
  -fsigned-char               Make "char" signed by default
  -ftabstop=<number>          Distance between tab stops for column reporting
  -funsigned-char             Make "char" unsigned by default
  -fwide-exec-charset=<cset>  Convert all wide strings and character constants
                              to character set <cset>
  -fworking-directory         Generate a #line directive pointing at the
                              current working directory
  -idirafter <dir>            Add <dir> to the end of the system include path
  -imacros <file>             Accept definition of macros in <file>
  -include <file>             Include the contents of <file> before other files
  -iprefix <path>             Specify <path> as a prefix for next two options
  -iquote <dir>               Add <dir> to the end of the quote include path
  -isysroot <dir>             Set <dir> to be the system root directory
  -isystem <dir>              Add <dir> to the start of the system include path
  -iwithprefix <dir>          Add <dir> to the end of the system include path
  -iwithprefixbefore <dir>    Add <dir> to the end of the main include path
  -nostdinc                   Do not search standard system include directories
                              (those specified with -isystem will still be used)
  -o <file>                   Place output into <file>
  -obj-ext=<extension>        Define object file extension, used for generation
                              of make dependencies
  -pedantic                   Issue warnings needed for strict compliance to
                              the standard
  -pedantic-errors            Like -pedantic but issue them as errors
  -pedantic-parse-number      Pedantic parse number
  -remap                      Remap file names when including files
  -std=c89                    Conform to the ISO 1990 C standard
  -std=c99                    Conform to the ISO 1999 C standard
  -std=iso9899:199409         Conform to the ISO 1990 C standard as amended in
                              1994
  -traditional-cpp            Enable traditional preprocessing
  -trigraphs                  Support ISO C trigraphs
  -v                          Enable verbose output
  -w                          Suppress warnings

