Zilog eZ80 Macro Assembler Version 4.1 (10060805)22-Dec-10     21:21:09     page:   1


PC     Object              I  Line    Source 
                           A     1    ;**************************
                           A     2    ; Load a pic direct to VRAM
                           A     3    ;**************************
                           A     4    
                           A     5    ;----------------------------------------------
                           A     6    
       00000001            A     7    ADL_mode		equ 1				; 0 if user
       00010000            A     8    load_location	equ 10000h			; anywhere 
                           A     9    
                           B     0    				include	'PROSE_header.asm'
                           B     1    
                           B     2    ;-- EZ80P Hardware equates --------------------
                           B     3    
       00000000            B     4    port_pic_data  			equ 0000h
       00000001            B     5    port_pic_ctrl		equ 0001h
       00000001            B     6    port_hw_flags			equ 0001h
       00000002            B     7    port_sdc_ctrl			equ 0002h	; this is a
       00000002            B     8    port_keyboard_data		equ 0002h
       00000003            B     9    port_sdc_data		 	equ 0003h	
       00000004            B    10    port_memory_paging		equ 0004h
       00000005            B    11    port_irq_ctrl			equ 0005h
       00000006            B    12    port_nmi_ack			equ 0006h
       00000007            B    13    port_selector			equ 0007h
                           B    14    
                           B    15    
       00000040            B    16    port_video_mode			equ 040h
                           B    17    
                           B    18    
       00000000            B    19    sdc_power				equ 0		;(port_sd_c
       00000001            B    20    sdc_cs					equ 1		;(port_sd_c
       00000002            B    21    sdc_speed				equ 2 		;(port_sd_c
                           B    22    
       00000004            B    23    sdc_serializer_busy		equ 4 		;(port_hw_f
       00000005            B    24    vrt						equ 5		;(port_hw_f
                           B    25    
                           B    26    
                           B    27    ;-- Memory locations --------------------------
                           B    28    
       00800000            B    29    hw_vram_a		equ 0800000h
       00F00000            B    30    hw_palette	equ 0f00000h
                           B    31    
                           B    32    ;----------------------------------------------
                           B    33    
                           B    34    
       00000A00            B    35    os_start equ 0a00h
                           B    36    
       00000A14            B    37    prose_return equ os_start+14h
       00000A20            B    38    prose_kernal equ os_start+20h
                           B    39    
                           B    40    ;----------------------------------------------
                           B    41    ; Kernal Jump Table values for mode PROSE
                           B    42    ;----------------------------------------------
Zilog eZ80 Macro Assembler Version 4.1 (10060805)22-Dec-10     21:21:09     page:   2


PC     Object              I  Line    Source ..\..\includes\PROSE_header.asm
                           B    43    		
       00000000            B    44    kr_mount_volumes				equ 00h	
       00000001            B    45    kr_get_device_info				equ 01h	
       00000002            B    46    kr_check_volume_format			equ 02h	
       00000003            B    47    kr_change_volume				equ 03h	
       00000004            B    48    kr_get_volume_info				equ 04h	
       00000005            B    49    kr_format_device				equ 05h	
       00000006            B    50    kr_make_dir						equ 06h
                           B    51    
       00000007            B    52    kr_change_dir					equ 07h	
       00000008            B    53    kr_parent_dir					equ 08h	
       00000009            B    54    kr_root_dir						equ 09h
       0000000A            B    55    kr_delete_dir					equ 0ah
       0000000B            B    56    kr_find_file					equ 0bh
       0000000C            B    57    kr_set_file_pointer				equ 0ch
       0000000D            B    58    kr_set_load_length				equ 0dh
       0000000E            B    59    kr_read_file					equ 0eh
                           B    60    
       0000000F            B    61    kr_erase_file					equ 0fh
       00000010            B    62    kr_rename_file					equ 10h
       00000011            B    63    kr_create_file					equ 11h
       00000012            B    64    kr_write_file					equ 12h
       00000013            B    65    kr_get_total_sectors			equ 13h
       00000014            B    66    kr_dir_list_first_entry			equ 14h
       00000015            B    67    kr_dir_list_get_entry			equ 15h
       00000016            B    68    kr_dir_list_next_entry			equ 16h
                           B    69    
       00000017            B    70    kr_read_sector					equ 17h
       00000018            B    71    kr_write_sector					equ 18h
       00000019            B    72    kr_file_sector_list				equ 19h
       0000001A            B    73    kr_get_dir_cluster				equ 1ah
       0000001B            B    74    kr_set_dir_cluster				equ 1bh
       0000001C            B    75    kr_get_dir_name					equ 1ch
       0000001D            B    76    kr_wait_key						equ 1dh
       0000001E            B    77    kr_get_key						equ 1eh
                           B    78    
       0000001F            B    79    kr_get_key_mod_flags			equ 1fh
       00000020            B    80    kr_serial_receive_header		equ 20h
       00000021            B    81    kr_serial_receive_file			equ 21h
       00000022            B    82    kr_serial_send_file				equ 22h
       00000023            B    83    kr_serial_tx_byte				equ 23h
       00000024            B    84    kr_serial_rx_byte				equ 24h
                           B    85    
       00000025            B    86    kr_print_string					equ 25h
       00000026            B    87    kr_clear_screen					equ 26h
       00000027            B    88    kr_wait_vrt						equ 27h
       00000028            B    89    kr_set_cursor_position			equ 28h
       00000029            B    90    kr_plot_char					equ 29h
       0000002A            B    91    kr_set_pen						equ 2ah
       0000002B            B    92    kr_background_colours			equ 2bh
       0000002C            B    93    kr_draw_cursor					equ 2ch
       0000002D            B    94    kr_get_pen						equ 2dh
Zilog eZ80 Macro Assembler Version 4.1 (10060805)22-Dec-10     21:21:09     page:   3


PC     Object              I  Line    Source ..\..\includes\PROSE_header.asm
       0000002E            B    95    kr_scroll_up					equ 2eh
       0000002F            B    96    kr_os_display					equ 2fh
       00000030            B    97    kr_get_display_size				equ 30h
       00000031            B    98    kr_get_charmap_addr_xy			equ 31h
       00000032            B    99    kr_get_cursor_position			equ 32h
                           B   100    
       00000033            B   101    kr_set_envar					equ 33h
       00000034            B   102    kr_get_envar					equ 34h
       00000035            B   103    kr_delete_envar					equ 35h
                           B   104    
       00000036            B   105    kr_enable_mouse					equ 36h
       00000037            B   106    kr_get_mouse_position			equ 37h
       00000038            B   107    kr_get_mouse_disp				equ 38h
                           B   108    
       00000039            B   109    kr_time_delay					equ 39h
       0000003A            B   110    kr_compare_strings				equ 3ah
       0000003B            B   111    kr_hex_byte_to_ascii			equ 3bh
       0000003C            B   112    kr_ascii_to_hex_word			equ 3ch
       0000003D            B   113    kr_get_string					equ 3dh
                           B   114    
       0000003E            B   115    kr_get_version					equ 3eh
       0000003F            B   116    kr_dont_store_registers			equ 3fh
       00000040            B   117    kr_os_video_settings			equ 40h
       00000041            B   118    kr_read_rtc						equ 41h
       00000042            B   119    kr_write_rtc					equ 42h
                           B   120    
                           B   121    ;----------------------------------------------
                           B   122    ; Standard PROSE executable header
                           B   123    ;----------------------------------------------
                           B   124    
                           B   125    
                           B   126    	IF ADL_mode = 0
                           B   127    		org load_location&0ffffh	; if Z80 mo
                           B   128    	ELSE
010000                     B   129    		org load_location			; otherwise
                           B   130    	ENDIF
                           B   131    	
                           B   132    		.assume ADL = 1				; All PROSE
                           B   133    
010000 18 0E               B   134    		jr skip_header				; $0 - Jump
010002 50524F              B   135    		db 'PRO'					; $2 - ASCI
010005 000001              B   136    mb_loc	dw24 load_location			; $5 - Desi
010008 000000              B   137    		dw24 0						; $8 - If >
01000B 0000                B   138    		dw 0						; $B - If >
01000D 0000                B   139    		dw 0						; $D - If >
01000F 01                  B   140    		db ADL_mode					; $F - Z80 
                           B   141    
010010                     B   142    skip_header
                           B   143    	
                           B   144    	IF ADL_mode = 0 
                           B   145    		
                           B   146    mbase_offset equ load_location & 0ff0000h
Zilog eZ80 Macro Assembler Version 4.1 (10060805)22-Dec-10     21:21:09     page:   4


PC     Object              I  Line    Source ..\..\includes\PROSE_header.asm
                           B   147    
                           B   148    		ld a,load_location/65536	; Additiona
                           B   149    		ld MB,a						; Set MBASE
                           B   150    		jp.sis go_z80_mode			; switches 
                           B   151    
                           B   152    go_z80_mode
                           B   153    
                           B   154    		.assume ADL = 0
                           B   155    
                           B   156    	ENDIF
                           B   157    	
                           B   158    ;----------------------------------------------
                           B   159    	
                           A    11    
                           A    12    ;----------------------------------------------
                           A    13    
010010 3E00                A    14    begin_app		ld a,0
010012 ED3940              A    15    				out0 (040h),a			;switch
                           A    16    
010015 3E0B                A    17    				ld a,kr_find_file
010017 21 70 00 01         A    18    				ld hl,filename_pal
01001B 5BCD200A 00         A    19    				call.lil prose_kernal
010020 20 30               A    20    				jr nz,load_error
010022 210000F0            A    21    				ld hl,hw_palette
010026 3E0E                A    22    				ld a,kr_read_file
010028 5BCD200A 00         A    23    				call.lil prose_kernal
01002D 20 23               A    24    				jr nz,load_error
                           A    25    				
01002F 3E0B                A    26    				ld a,kr_find_file
010031 21 7C 00 01         A    27    				ld hl,filename_data
010035 5BCD200A 00         A    28    				call.lil prose_kernal
01003A 20 16               A    29    				jr nz,load_error
01003C 21000080            A    30    				ld hl,hw_vram_a
010040 3E0E                A    31    				ld a,kr_read_file
010042 5BCD200A 00         A    32    				call.lil prose_kernal
010047 20 09               A    33    				jr nz,load_error
                           A    34    				
010049 3E1D                A    35    				ld a,kr_wait_key
01004B 5BCD200A 00         A    36    				call.lil prose_kernal
010050 18 0B               A    37    				jr done
                           A    38    
010052 21 63 00 01         A    39    load_error		ld hl,load_error_txt
010056 3E25                A    40    				ld a,kr_print_string
010058 5BCD200A 00         A    41    				call.lil prose_kernal
                           A    42    				
01005D 3EFF                A    43    done			ld a,0ffh
01005F C3140A00            A    44    				jp prose_return					                           A    45    
                           A    46    ;----------------------------------------------
                           A    47    
010063 4C6F6164 20657272   A    48    load_error_txt	db "Load error.",11,0
01006B 6F722E0B 00 
Zilog eZ80 Macro Assembler Version 4.1 (10060805)22-Dec-10     21:21:09     page:   5


PC     Object              I  Line    Source E:\MY_OWN~1\Coding\EZ80PR~1\Code\PROSEA~1\picshow\src\picshow.asm
010070 70616C65 7474652E   A    49    filename_pal	db "palette.bin",0
010078 62696E00 
01007C 70696374 7572652E   A    50    filename_data	db "picture.bin",0
010084 62696E00 
                           A    51    
                           A    52    ;----------------------------------------------


Errors: 0
Warnings: 0
Lines Assembled: 212
