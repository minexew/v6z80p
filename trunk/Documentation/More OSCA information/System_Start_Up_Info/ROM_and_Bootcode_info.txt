Updated for OSCA v661

------------------------- OSCA ROM Operations -----------------------------

The Z80 starts up from a 512 byte blockram in the FPGA (mapped into $0-$1ff).
This ROM code tells the PIC microcontroller to clock out 3520 bytes from the
SPI EEPROM (EEPROM location $F000 onwards) - this is the bootcode. The Z80 reads
this serial data into $200-$FFF, checks the CRC checksum (last two bytes) and
executes it (JP $200) if all is OK. If the CRC doesn't match, the databurst is
requested again, this time from EEPROM location $1F000. If this fails, the
screen goes grey indicating that a bootcode file should be serially downloaded.
(This grey screen condition can be forced by holding up, right and fire on a
joystick in port 2 at power up).

------------------------ Bootcode operations ------------------------------

The bootcode resets the keyboard and looks for an Operating System. 
First it checks the root directory of an inserted SD card, next it looks at
$00800-$047FF in the onboard EEPROM, finally it requests a serial download.
The OS code is loaded to $1000, and executes from $1010.

To skip the SD card and EEPROM check and immediately go to serial download,
press the ESC key on boot. If F1-F7 are pressed, the FPGA will configure
from the relevant slot.

To reboot whilst the waiting for a serial download, press Left CTRL
(the serial download also times out and reboots after 1 minute of
inactivity)

------------------------------------------------------------------------

To change the ROM at $000-$1FF:

As it is internal to the FPGA, the ROM binary has to be converted to an
ASCII format which can be inserted into the Xilinx project's constraints
(.ucf) file. (Use the PC util "ROM_to_fpga_constraints.exe" in the PC-based
apps dir for this). Once pasted over the old ROM section of the .ucf file in
the Xilinx project, the design needs to be recompiled using Webpack 10.1
and the output (.bin) file reprogrammed into a config slot in the EEPROM
(using the FLOS EEPROM tool or an external programming unit).


To change the bootcode:

This is achieved using the FLOS util; EEPROM.EXE. (The PC-based util
"Bootcode_CRC.exe" (in the apps dir) can be used to add the CRC word
required by the ROM to your Z80 binary.)


--------------------------------------------------------------------------