-----------------
volume_mount_list
-----------------

The address of this table is returned in HL by the KJT routine "kjt_get_volume_info"
Each volume entry is 16 bytes long and contains the following data:

OFFSET   DATA
------   ----
 $00  -  1 = Volume is present, else zero (note: this does not mean it is a valid FAT16 volume.)
 $01  -  Volume's host driver number	
 $02  -  [reserved]
 $03  -  [reserved]
 $04  -  Volume's total capacity in sectors (3 bytes)
 $07  -  Partition number on host drive (0/1/2/3)
 $08  -  Offset in sectors from MBR to partition boot sector (2 words, little endian)
 $0c  -  [reserved]
 $0d  -  [reserved]	
 $0e  -  [reserved]
 $0f  -  [reserved]





-------------------------
host_device_hardware_info
-------------------------

The address of this table is returned in HL by the KJT routine"kjt_get_device_info"
Each device entry is 32 bytes long and contains the following data:


OFFSET  DATA
------  ----
 $00  - Device driver number
 $01  - Device's TOTAL capacity in sectors (4 bytes)
 $05  - Zero terminated hardware name (22 ASCII bytes max followed by $00)
        (remaining bytes to $1F currently unused)





------------
driver_table
------------

The address of this table is returned in DE by the KJT routine "kjt_get_device_info"
Each driver entry is the absolute address of the driver in memory.  There are 4
driver slots available, if an entry is zero, the slot is free for use (a user program
can place an address there, and remount drives to update the device and volume
tables).

$00 - Driver 0 address (normally the SD card driver on V6Z80P)
$02 - Driver 1 address
$04 - Driver 2 address
$06 - Driver 3 address


Each FLOS device driver has the following structure:

$00-$07 : 7 ASCII bytes, name of driver EG: "SD_CARD"
$07     : Zero
$08     : Z80 code: JP read_sector routine
$0B     : Z80 code: JP write_sector routine
$0E     : "get_id" routine starts here.

The three routines should return with the Zero Flag set if the operation was a success.
Otherwise, if an error was encountered a hardware error code can be placed in A.
The "get_id" (initialization) routine should additionally return with BC:DE set
to the total capacity of the device in sectors, and HL set to the location of a
zero-terminated hardware ID ASCII string (this string is used for reference only).

Driver routines should use these standard labels (used throughout FLOS):

 "sector_buffer" - 512 bytes

 "sector_lba0" - LBA of desired sector LSB
 "sector_lba1" 
 "sector_lba2"
 "sector_lba3" - LBA of desired sector MSB




